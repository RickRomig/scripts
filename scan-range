#!/usr/bin/env bash
###############################################################################
# Script Name  : scan-range
# Description  : Scans a range of IP addresses to determine if online.
# Dependencies : arping (iputils-arping)
# Arguments    : Beginning and last octets of range to be scanned.
# Author       : Copyright (C) 2022, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 27 Jul 2022
# Updated      : 03 Oct 2024
# Comments     : Adapted from a script by Dave McKay at howtogeek.com
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="3.0.24277"

## Functions ##

help() {
  local errcode updated
	errcode="${1:-2}"
	updated="03 Oct 2024"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Scans a range of IP addresses to determine if they are online.

${green}Usage:${normal} $script IP1 IP2
${orange}Example:${normal} $script 10 20
Takes 2 integers between 1 and 254 (last octets of the local network range)
_HELP_
	exit "$errcode"
}

check_arg_values() {
	# returns TRUE only if both octets are digits and within the range of valid IP addresses.
	local ip1 ip2
	ip1="$1"
	ip2="$2"
	if [[ "$ip1" =~ ^[0-9]+$ && "$ip2" =~ ^[0-9]+$ ]] 2>/dev/null; then
		[[ "$ip1" -ge "$ip2" ]] && return "$FALSE"
		[[ "$ip1" -lt 1 || "$ip2" -ge 255 ]] && return "$FALSE" || return "$TRUE"
	else
		return "$FALSE"
	fi
}

scan_range() {
	local ip ip1 ip2
	ip1="$1"
	ip2="$2"
	for (( ip=ip1; ip<=ip2; ip++ )); do
		if arping -c 1 "$localnet.$ip" | grep -E "0 response|0 packets received" > /dev/null; then
			printf "%s.%s didn't respond.\n" "$localnet" "$ip"
		else
			printf "%s.%s responded.\n" "$localnet" "$ip"
		fi
	done
}

main() {
	local addr1 addr2
	[[ $# -lt 2 ]] &&  { printf "%s Too few arguments passed.\n" "$RED_ERROR" <&2; help 1; }
	addr1="$1"
	addr2="$2"
	check_arg_values "$addr1" "$addr2" || { printf "%s Invalid arguments. Values must be integers between 1 and 254.\n" "$RED_ERROR" <&2; help 2; }
	check_package iputils-arping
	scan_range "$addr1" "$addr2"
	over_line "$script $version"
	exit
}

## Execution ##

main "$@"
