#!/usr/bin/env bash
##########################################################################
# Script Name  : syncfin
# Description  : Synchronize files between main PC and finance laptop.
# Dependencies : rsync
# Arguments    : none
# Author       : Copyright (C) 2022 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com
# Created      : 11 Mar 2022
# Updated      : 14 Jul 2025
# Comments     : No longer in use.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

SECONDS=0

## Functions ##

transfer_status() {
  # Exit script if transfer fails.
  local xfr_status="$1"
  (( xfr_status != 0 )) && die "A transfer failed! Check network status." "$xfr_status"
}

transfer_to_fin() {
  local main_host="$1"
  local fin_host="$2"
  local fin_ip="21"
  if ping -c 3 "$LOCALNET.$fin_ip" >/dev/null 2>&1; then
    printf "Syncing %s to %s...\n" "$main_host" "$fin_host"
    sync_to_fin "$fin_ip"
    printf "\n%s synced with %s.\n" "$fin_host" "$main_host"
  else
    printf "\n%s %s is not on the network.\n" "$RED_ERROR" "$fin_host"
  fi
}

transfer_to_main() {
  local main_host="$1"
  local fin_host="$2"
  local main_ip="10"
  if ping -c 3 "$LOCALNET.$main_ip" >/dev/null 2>&1; then
    printf "Syncing %s to %s...\n" "$fin_host" "$main_host"
    sync_to_main "$main_ip"
    printf "\n%s synced with %s.\n" "$main_host" "$fin_host"
  else
    printf "\n%s %s is not on the network.\n" "$RED_ERROR" "$main_host"
  fi
}

sync_to_main() {
  local exit_status main_ip
  main_ip="$1"
  printf "\n%sSyncing Finance directory..%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/Finance/ "$LOCALNET.$main_ip":Documents/Finance/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing HomeBank directory..%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/HomeBank/ "$LOCALNET.$main_ip":Documents/HomeBank/
  exit_status="$?"
  transfer_status "$exit_status"
}

sync_to_fin() {
  local exit_status fin_ip
  fin_ip="$1"
  printf "\n%sSyncng ~/.bashrc ...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/.bashrc "$LOCALNET.$fin_ip":
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncng ~/.bash_aliases ...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/.bash_aliases "$LOCALNET.$fin_ip":
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncng ~/bin ...%s\n" "$orange" "$normal"
  rsync -avh --delete --exclude '.git' "$HOME"/bin/ "$LOCALNET.$fin_ip":bin/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncng Homepage directory...%s\n" "$orange" "$normal"
  rsync -avh --delete --exclude '.git' "$HOME"/Documents/homepage/ "$LOCALNET.$fin_ip":Documents/homepage/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncng Password Databases...%s\n" "$orange" "$normal"
  rsync -avh --delete --include="*.kdbx" --exclude="*" "$HOME"/Documents/ "$LOCALNET.$fin_ip":Documents/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Wallpaper directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Pictures/wallpaper/ "$LOCALNET.$fin_ip":Pictures/wallpaper/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing SFW Wallpaper directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Pictures/backgrounds/ "$LOCALNET.$fin_ip":Pictures/backgrounds/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing ~/.local/share/doc ...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/.local/share/doc/ "$LOCALNET.$fin_ip":.local/share/doc/
  exit_status="$?"
  transfer_status "$exit_status"
}

check_host() {
  local local_host="${HOSTNAME:-$(hostname)}"
  local main_host="hp-800g2-sff"
  local fin_host="hp-probook-6570"
  printf "Synchronizes files between %s and %s.\n" "$main_host" "$fin_host"
  if [[ "$local_host" == "$main_host" ]]; then
    transfer_to_fin "$main_host" "$fin_host"
  elif [[ "$local_host" == "$fin_host" ]]; then
    transfer_to_main "$main_host" "$fin_host"
  else
    die "Invalid client. $script must be run from either $main_host or $fin_host." 1
  fi
}

main() {
  local script="${0##*/}"
  local version="4.2.25195"
  box "$script $version" "*"
  check_host
  over_line "Syncronization completed in $(format_time $SECONDS)" "-"
  printf "%s v%s\n" "$script" "$version"
  exit
}

## Execution ##

main "$@"
