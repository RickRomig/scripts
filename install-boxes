#!/usr/bin/env bash
#############################################################################
# Script Name  : install-boxes
# Description  : Installs GNOME boxes.
# Dependencies : none
# Arguments    : none
# Author       : Copyright (C) 2020, Richard B. Romig
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 29 Feb 2020
# Updated      : 25 Jun 2025
# Comments     : Based on instructions from Joe Collins.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly  version="2.1.25176"

## Functions ##

help() {
	local errcode="${1:-2}"
	local updated="25 Jun 2025"
	cat << _HELP_
${orange}$script${normal} $version, Upated: $updated
Install Gnome Boxes from either distribution repositories or flatpak from Flathub.

${green}Usage:${normal} $script [-d] [-f] [-h]

${orange}Available options:${normal}
	-d	Install Gnome Boxes from distro repo
	-f	Install Gnome Boxes from Flathub
	-h	Show this help message and exit
_HELP_
  exit "$errcode"
}

check_bios() {
  local vcpu vmx_svm
  printf "Checking if virtualization is enabled in BIOS...\n"
  vcpu=$(grep -Ec 'vmx|svm' /proc/cpuinfo)
  printf "Virtualization is "
  if [[ "$vcpu" -gt 0 ]]; then
    printf "enabled in the BIOS. (%s threads)\n" "$vcpu"
    vmx_svm=$(grep -E -m 1 'vmx|svm' /proc/cpuinfo )
    case "$vmx_svm" in
      *vmx* )
        sudo sh -c 'echo "options kvm_intel nested=1" >> /etc/modprobe.d/qemu-system-x86.conf' ;;
      *svm* )
        sudo sh -c 'echo "options kvm_amd nested=1" >> /etc/modprobe.d/qemu-system-x86.conf' ;;
    esac
    sudo sh -c 'echo "group=kvm" >> /etc/modprobe.d/qemu-system-x86.conf'
  else
    printf "not enabled in the BIOS.\n"
    printf "Enable virtualization before installing Gnome Boxes.\n"
    exit
  fi
}

enable_libvirtd() {
  sudo systemctl enable libvirtd.service
  sudo systemctl start libvirtd.service
  printf "libvirtd started.\n"
}

add_to_kvm_group() {
  local user in_kvm_grp
  user=$(whoami)
  in_kvm_grp=$(awk '/kvm:/ && /'"$user"'/' /etc/group)
  printf "User %s " "$user"
  if [[ "$in_kvm_grp" ]]; then
    printf "is already a member of "
  else
    sudo usermod -a -G kvm "$user"
    printf "added to "
  fi
  printf "the kvm group.\n"
  if [[ -f /etc/libvirt/qemu.conf ]]; then
    printf "Allow users in the kvm group to start VMs.\n"
    sudo sed -i.bak 's/\#group\ =\ "root"/group\ =\ "kvm"/' /etc/libvirt/qemu.conf
    enable_libvirtd
  else
    printf "/etc/libvirt/qemu.conf not found!\n" >&2
  fi
}

install_boxes() {
  printf "\nInstalling GNOME Boxes (distro)...\n"
  sudo apt update -qq
  sudo apt install -yy gnome-boxes qemu-kvm libvirt-bin
}

install_flatpak() {
  printf "\nInstalling GNOME Boxes (flatpak)...\n"
  flatpak install --user flathub org.gnome.Boxes
}

main() {
  local noOpt opt optstr
	noOpt=1
	optstr=":dfh"
	while getopts "$optstr" opt; do
    case "$opt" in
      d )
        sudo_login 2
        check_bios
        install_boxes
        add_to_kvm_group
        ;;
      f )
        sudo_login 2
        check_bios
        install_flatpak
        add_to_kvm_group
        ;;
      h )
        help 0
        ;;
			? )
				printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
    noOpt=0
  done
	[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
	shift "$(( OPTIND - 1 ))"
  printf "Gnome boxes installed and configured.\n"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
