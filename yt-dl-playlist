#!/usr/bin/env bash
###############################################################################
# Script Name  : yt-dl-playlist
# Description  : Download a playlist of YouTube audio files to current directory
# Dependencies : yt-dlp
# Arguments    : Video URL
# Author       : Copyright Â© 2020, Richard B. Romig, 28 May 2020
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 28 May 2020
# Updated      : 28 Jun 2024
# Comments     : Accepts only full URL
#              : Downloads to current working directory
#              : Video Playlist
#              : yt-dlp -i -f mp4 --output "%(title)s.%(ext)s" --yes-playlist "$url"
# TODO (Rick)  : Hangs after first file in playlist is downloaded.
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="2.1.24180"
readonly _updated="28 Jun 2024"

## Functions ##

help() {
  local errcode="${1:-2}"
  echo "Usage: $_script [video-url]"
  echo "$_script https://www.youtube.com/watch?v=8hLlU0EML4U"
  cat << END_HELP
${orange}$_script${normal} $_version, Updated: $_updated
Downloads mp3 audio from a playlist of YouTube videos to current working diretory.

${green}Usage:${normal} $_script [OPTION] [video-url]

${orange}Available options:${normal}
  -h | --help  Show this help text.

$_script https://www.youtube.com/watch?v=qmRRDig_9nE&list=RDqmRRDig_9nE&start_radio=1

END_HELP
  exit "$errcode"
}

check_dependencies() {
  if [ -x /usr/local/bin/yt-dlp ]; then
    printf "yt-dlp [OK]\n"
    sleep 2
  else
    die "yt-dlp is not installed." 1
  fi
}

## Execution ##

check_dependencies

if [[ "$#" -eq 0 ]]; then
  echo $'\n'$"${bold}${lightred}Error:${normal} No argument passed." >&2
  help 2
elif [[ "$1" == "--help" || "$1" == "-h" ]]; then
  help 0
elif [[ "$1" =~ ^https?:\/\/.* ]]; then
  # match by regex, starts with http:// or https://
  url=$*
else
  echo "${bold}${lightred}Error:${normal} Invalid argument. Must be full URL." >&2
  help 2
fi

## Execution ##

clear
box "$_script v$_version" "*"
under_line "* YouTube Audio Playlist Download *" "*"
echo $'\n'$"Downloading mp3 audio for $url"
# if /usr/local/bin/yt-dlp --add-metadata -xic --embed-thumbnail \
# --restrict-filename --audio-format mp3 --output "%(title)s.%(ext)s" \
# --yes-playlist "$url"; then
if /usr/local/bin/yt-dlp --ignore-errors --format bestaudio --extract-audio --restrict-filename --audio-format mp3 --audio-quality 160K --output "%(title)s.%(ext)s" --yes-playlist "$url"; then
  leave "Download successful."
else
  die "Download failed." "$?"
fi
