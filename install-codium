#!/usr/bin/env bash
##########################################################################
# Script Name  : install-codium
# Description  : installs vscodium from a repo using apt-get
# Dependencies : wget
# Arguments    : see help function for options
# Author       : Copyright Â© 2023 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 04 Aug 2023
# Last updated : 04 Aug 2023
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.1.0"
readonly _updated="04 Aug 2023"
readonly key_file="/usr/share/keyrings/vscodium-archive-keyring.asc"
readonly src_list="/etc/apt/sources.iist.d/vscodium.list"

## Functions ##

help() {
	errcode="${1:-2}"
	cat << END_HELP
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
	-h	Display help
	-i	Install VSCodium
	-r	Remove VSCodium
	-s	Apply VSCodium settings
END_HELP
	printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
  exit "$errcode"
}

codium_version() {
	codium --version | head -n 1
}

install_cascadia_code() {
  if [[ -d /usr/share/fonts/truetype/cascadia-code ]]; then
    printf "Cascadia Code fonts already installed.\n"
  else
    printf "Installing Cascadia Code fonts...\n"
    sudo apt-get install fonts-cascadia-code -yy
    printf "Cascadia Code fonts installed.\n"
  fi
}

apply_settings() {
  local vsc_cfg="${HOME}/.config/VSCodium/User"
  [[ -d "$vsc_cfg" ]] || mkdir -p "$vsc_cfg"
  printf "Applying VSCodium settings...\n"
  settings
  printf "VSCodium settings applied.\n"
}

settings() {
  local vsc_cfg="${HOME}/.config/VSCodium/User"
  cat << EOL > "$vsc_cfg/settings.json"
{
  "workbench.colorTheme": "Default High Contrast",
  "editor.tabSize": 2,
  "editor.fontFamily": "'Cascadia Code', 'Droid Sans Mono', 'monospace'",
  "editor.fontLigatures": true,
  "terminal.integrated.fontFamily": "'Cascadia Code'",
  "editor.wordWrap": "on",
  "editor.fontSize": 16,
  "window.restoreFullscreen": true,
  "editor.insertSpaces": false,
  "editor.autoClosingQuotes": "always"
}
EOL
}

install_vscodium() {
	user_in_sudo
	printf "Installing VSCodium...\n"
	wget https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg
	sudo mv pub.gpg "$key_file"
	echo 'deb [ signed-by=/usr/share/keyrings/vscodium-archive-keyring.asc ] https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/debs vscodium main' | sudo tee "$src_list"
	sudo apt-get update
	sudo apt-get install codium codium-insiders
	install_cascadia_code
	apply_settings
	printf "VSCodium %s successfully installed.\n" "$(codium_ver)"
}

remove_vscodium() {
	user_in_sudo
	printf "Removing VSCodium...\n"
	[[ -f "$key_file" ]] && sudo rm -v "$key_file"
	[[ -f "$src_list" ]] && sudo rm -v "$src_list"
  find "$HOME/.config" -maxdepth 2 -type d -name "VSCcodium" -exec rm -rf {} \;
	printf "VSCodium has been removed.\n"
}

## Execution ##

# clear
noOpt=1
optstr=":hirs"
# optstr=":h:i:r:s"
while getopts "$optstr" opt; do
	case "$opt" in
		h )
			help 0
		;;
		i )
			exists codium && leave "VSCodium $(codium_ver) is already installed."
			check_package wget
			install_vscodium
		;;
		r )
			exists codium || leave "VSCodium is not installed."
			remove_vscodium
		;;
		s )
		  exists codium || leave "VSCodium is not installed."
    	apply_settings
		;;
		? )
			printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
			help 2
	esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
exit
