#!/usr/bin/env bash
##########################################################################
# Script Name  : purge-image-rc
# Description  : Purges config files from removed kernels in the 'rc' state
# Dependencies : None
# Arguments    : None
# Author       : Copyright (C) 2020, Richard B. Romig, 27 Sep 2020
# Email        : rick.romig@gmail.com | eick.romig@mymetronet.net
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091,SC2034

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.4.3"
readonly _updated="25 Jan 2024"

## Functions ##

purge_rc_packages() {
  printf "These packages are in the remove/deinstall state with only the config files.\n"
  if yes_or_no "Are you sure you want to purge the config files for these images?"; then
    printf "%sPurging obsolete linux kernel configuration files...%s\n" "$green" "$normal"
    for rcpkg in $(dpkg --list | awk '/^rc/ {print $2}'); do
      sudo apt remove --purge "$rcpkg" -yy
    done
  else
    printf "No action taken. No packages were purged.\n"
  fi
}

list_rc_packages() {
  printf "Packages in the 'rc' state:\n"
  printf "%s\n" "$rcpkgs"
}

list_headers() {
  printf "Installed linux headers and images:\n"
  dpkg --list | grep -Ei --color 'linux-image|linux-headers' | cut -d' ' -f1,3
}

## Execution ##

# clear
box "$_script v$_version ($_updated)"
rcpkgs=$(dpkg --list | awk '/^rc/ {print $1,$2}')
if [[ -n "$rcpkgs" ]]; then
  sudo_login 2
  list_rc_packages
  purge_rc_packages
else
  printf "No packages in the 'rc' state to be purged.\n"
fi
list_headers
exit
