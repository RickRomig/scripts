#!/usr/bin/env bash
##########################################################################
# Script Name  : purge-rc
# Description  : Purges config files from packages in the 'rc' state
# Dependencies : None
# Arguments    : None
# Author       : Copyright (C) 2020, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | eick.romig@mymetronet.net
# Created      : 27 Sep 2020
# Updated      : 03 Oct 2024
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Functions ##

list_rc_packages() {
  local rcpkgs
  rcpkgs=$(dpkg --list | awk '/^rc/ {print $1,$2}')
  printf "Packages in the 'rc' state:\n"
  printf "%s\n" "$rcpkgs"
}

purge_rc_packages() {
  local rcpkg
  printf "\nThese packages are in the remove/deinstall state with only the config files.\n"
  if yes_or_no "Are you sure you want to purge the config files for these packages?"; then
    sudo_login 2
    printf "\n%sPurging obsolete configuration files...%s\n" "$green" "$normal"
    for rcpkg in $(dpkg --list | awk '/^rc/ {print $2}'); do
      sudo apt remove --purge "$rcpkg" -yy
    done
  else
    printf "\nNo action taken. No packages were purged.\n"
  fi
}

list_headers() {
  printf "\nInstalled linux headers and images:\n"
  dpkg --list | grep -Ei --color 'linux-image|linux-headers' | awk '{$1=$1}1' | cut -d' ' -f2,3 | column -t
}

main() {
  local script version
  script=$(basename "$0")
  version="4.7.24277"
  box "$script v$version"
  if dpkg --list | grep -q '^rc'; then
    list_rc_packages
    purge_rc_packages
  else
    printf "No packages in the 'rc' state to be purged.\n"
  fi
  list_headers
  exit
}

## Execution ##

main "$@"
