#!/usr/bin/env bash
###############################################################################
# Script Name  : hb-late
# Description  : Create HomeBank archive after the end of the month.
# Dependencies : zip
# Arguments    : none
# Author       : Copyright (C) 2019, Richard B. Romig, LudditeGeek @ Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     : Use only if hb-archive.sh fails to run on 1st of the month.
# Created      : 02 Sep 2019
# Updatd       : 19 Aug 2024
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="2.3.24232"
readonly _updated="28 Feb 2024"
readonly lhost="${HOSTNAME:-$(hostname)}"
readonly fhost="hp-probook-6570b"
readonly hb_dir=$HOME"/Documents/HomeBank"
readonly arc_dir=$HOME"/Downloads/archive/homebank"

# Previous month (2 calendar months)
prev_month=$(date -d "$(date +%Y-%m-01) - 2 months" +"%B %Y"); readonly prev_month

# Set reference date to the first day of the previous month
ref_date=$(date -d "$(date +%Y-%m-01) - 1 month" +%m%d%Y); readonly ref_date

# Create filename for the archive file
hb_archive=$(date -d "$(date +%Y-%m-01) - 2 months" +%Y-%m)-backup.zip; readonly hb_archive

## Execution ##

# Is the script running from the correct host?
[[ "$lhost" != "$fhost" ]] && die "$_script must be run from the $fhost."

check_package zip

box "$_script v$_version ($_updated)"
echo "Archive HomeBank backup files if hb-archive.sh fails to run on 1st of the month."

zip -qmtt "$ref_date" "$arc_dir/$hb_archive" "$hb_dir/*.bak" 2>/dev/null
status="$?"
if [[ "$status" -eq 0 ]]; then
  echo "${orange}HomeBank backup files for $prev_month archived.${normal}"
  echo "HomeBank Archives:"
  ls -1 "$arc_dir"
else
  echo "No backup files for $prev_month available to be archived."
  echo "Zip Error Code: $status" >&2
fi

exit
