#!/usr/bin/env bash
##########################################################################
# Script Name  : no-flatpak
# Description  : Enable/disable Flatpaks in a Debian or Ubuntu-based system.
# Dependencies : None
# Arguments    : [-d] [-e] [-h] [-s] (See help function)
# Author       : Copyright (C) 2024, Richard B. Romig, MosfaNet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 02 Mar 2024
# Updated      : 29 Jun 2025
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

# Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly version="1.2.25180"
readonly pref_file="/etc/apt/preferences.d/noflatpak.pref"

## Functions ##

help() {
	local errcode="${1:-2}"
	local updated="29 Jun 2025"
	cat << _HELP_
${orange}$script${normal} $version, Updated $updated
Disables/Enables Flatpak support.

${green}Usage:${normal} $script [-d] [-e] [-h] [-s]
${orange}OPTIONS:${normal}
  -d    Disable the installation of flatpak and flatpak packages
  -e    Enable the installation of flatpak and flatpak packages
  -h    Show this help message and exit
  -s    Status of flatpak and flatpak package installation
_HELP_
  exit "$errcode"
}

check_flatpak_installed() {
	printf "Flatpak is "
	if exists flatpak; then
		printf "installed.\n"
	else
		printf "not installed.\n"
	fi
}

flatpak_enabled() {
	if [[ -f "$pref_file" ]]; then
		grep -q '^# Package:' "$pref_file" && return "$TRUE" || return "$FALSE"
	else
		return "$TRUE"
	fi
}

enable_flatpak() {
	if [[ -f "$pref_file" ]]; then
		if grep -q '^Package:' "$pref_file"; then
			sudo sed -i '/^Package/s/^/# /;/^Pin/s/^/# /' "$pref_file"
			printf "\nInstallation of Flatpak and Flatpak packages is now enabled.\n"
		else
      printf "\nInstallation of Flatpak and Flatpak packages is already enabled by %s.\n" "$pref_file"
    fi
  else
    printf "\n%s does not exist. Installation of Flatpak and Flatpak packages is enabled by default." "$pref_file"
  fi
}

disable_flatpak() {
  if [[ -f "$pref_file" ]]; then
    if grep -q '^# Package:' "$pref_file"; then
      sudo sed -i '/Package/s/^# //;/Pin/s/^# //' "$pref_file"
      printf "\nInstallation of Flatpak and Flatpak packages is now disabled.\n"
    else
      printf "\nInstallation of Flatpak and Flatpak packages is already disabled.\n"
    fi
  else
    create_noflatpak
    printf "%s has been created. Installation of Flatpak and Flatpak packages is now disabled.\n" "$pref_file"
  fi
}

create_noflatpak() {
  cat << _NOFLATPAK_ sudo tee "$pref_file" > /dev/null
# To prevent installation of flatpak packages,
# this file forbids flatpak from being installed by APT.

Package: flatpak
Pin: release a=*
Pin-Priority: -10
_NOFLATPAK_
}

main() {
  local noOpt opt optstr
	printf "Enables or disables the installation of flatpak and flatpak packages.\n"
	check_flatpak_installed
	noOpt=1
	optstr=":dehs"
	while getopts "$optstr" opt; do
		case "$opt" in
			d )
				sudo_login 2
				disable_flatpak
				;;
			e )
				sudo_login 2
				enable_flatpak
				;;
			h )
				help 0
				;;
			s )
				printf "\nStatus of flatpak and flatpak packages: "
				flatpak_enabled && printf "Flatpaks are enabled.\n" || printf "Flatpaks are disabled.\n"
				;;
			? )
				printf "\n%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
				help 2
		esac
		noOpt=0
	done
	[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
	shift "$(( OPTIND - 1 ))"
	leave "$script $version"
}

## Execution ##

main "$@"
