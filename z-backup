#!/usr/bin/env bash
#####################################################################
# Script Name  : z-backup
# Description  : local backup of /etc, /home, and /data/installations
#              : to a designated folder on a second internal drive.
# Dependencies : rsync
# Arguments    : none
# Author       : Copyright (C) 2020, Richard Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 07 Jun 2020
# Last updated : 15 Jun 2024 - version 1.2.24167
# Comment      : Automatically limits log size to 30 entries.
# TODO (Rick)  : Remove commented lines after successful test on 6005
# License      : GNU General Public License, version 2.0
#####################################################################

set -eu

log_date=$(date +"%a|%F|%R")
log_dir="/var/log"
log_file="backup.log"
backup_dir="/data/backup"
error_log="/error.log"

[[ -d /data/backup ]] || mkdir -p /data/backup
[[ -f "$backup_dir/error.log" ]] && rm -f "$backup_dir/$error_log" >/dev/null 2>&1

{
  printf "%s|" "$log_date"
  if rsync -aH --delete /etc /home "$backup_dir/" 2> "$backup_dir/$error_log"; then
    printf "successful\n"
    echo "Local Backup was successful: $(date +%F)" >> "$backup_dir/$error_log"
  else
    printf "had errors %d\n" "$?"
    echo "Local Backup had errors: $(date +%F)" >> "$backup_dir/$error_log"
fi
  sync
} >> "$log_dir/$log_file" 2>&1

log_len=$(wc -l "$log_dir/$log_file" | cut -d' ' -f1)
[[ "$log_len" -gt 30 ]] && sed -i '1d' "$log_dir/$log_file"

exit
