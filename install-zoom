#!/usr/bin/env bash
##########################################################################
# Script Name  : install-zoom
# Description  : Install/Remove Zoom (Flatpak or deb package)
# Dependencies : gdebi wget
# Arguments    : See help function
# Author       : Copyright (C) 2022, Richard B. Romig, 10 Nov 2022
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.3.1"
readonly _updated="16 Oct 2023"

## Functions ##

check_dependencies() {
	local packages=( gdebi wget )
	check_packages "${packages[@]}"
}

cleanup() {
	[[ -d "$tmp_dir" ]] && rm -rf "$tmp_dir"
}

help() {
	errcode="${1:-2}"
	cat << END_HELP
Installs or removes the Zoom video conferencing software.
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
	-d 	Install Zoom (deb package)
	-f	Install Zoom (Flatpak from Flathub)
	-h 	Display help
	-r 	Remove Zoom
END_HELP
	printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
  exit "$errcode"
}

zoom_deb_ver() {
	dpkg -l | awk '$2 == "zoom" {print $3}'
}

zoom_flat_ver() {
	flatpak list | awk '/Zoom/ {print $3}'
}

flatpak_zoom() {
  exists flatpak || return "$FALSE"
  flatpak list | grep -qw Zoom && return "$TRUE" || return "$FALSE"
}

install_zoom_deb() {
	local url="https://zoom.us/client/latest"
	local pkg="zoom_amd64.deb"
	printf "Dowloading Zoom ..."
  dots "."
	wget -q -P "$tmp_dir" "$url/$pkg"
  kill "$!"
	printf "done\nInstalling the latest version of Zoom...\n"
	tput cnorm
	sudo gdebi -n "$tmp_dir/$pkg"
	sudo apt-get install -f
	printf "Zoom %s is installed.\n" "$(zoom_deb_ver)"
}

install_zoom_flatpak() {
	sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
	flatpak install flathub us.zoom.Zoom
	printf "Zoom %s installed from Flathub.\n" "$(zoom_flat_ver)"
}

remove_zoom() {
	printf "Removing Zoom ...\n"
	exists zoom	&& sudo apt-get remove --purge zoom -yy
	flatpak_zoom && flatpak uninstall --noninteractive --assumeyes  us.zoom.Zoom
	printf "Zoom has been removed.\n"
}

webcam_info() {
	if /usr/bin/lsusb | grep -qw Webcam; then
		printf "Attached webcam(s):\n"
		/usr/bin/lsusb | grep -w Webcam | cut -d' ' -f7-
	else
		printf "No webcam attached.\n"
	fi
}

## Execution ##

noOpt=1
optstr=":dfhr"
while getopts "$optstr" opt; do
	case "$opt" in
		d )
			flatpak_zoom && leave "Zoom $(zoom_flat_ver) is installed, Installatiion canceled."
			exists zoom && printf "Zoom %s is installed. Updating package.\n" "$(zoom_deb_ver)"
			webcam_info
			tmp_dir=$(mktemp -d) || die "Failed to create temporary directory." 1
			trap cleanup EXIT
			sudo_login
			check_dependencies
			install_zoom_deb
		;;
		f )
			exists flatpak || leave "Flatpak is not isntalled. Installatiion canceled."
			flatpak_zoom && leave "Zoom $(zoom_flat_ver) is already installed."
			exists zoom && remove_zoom
			webcam_info
			install_zoom_flatpak
		;;
		h )
			help 0
		;;
		r )
			if exists zoom || flatpak_zoom; then
				sudo_login
				remove_zoom
			else
				printf "Zoom is not installed.\n"
			fi
		;;
		? )
			printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
			help 2
	esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
leave "$_script v$_version ($_updated)"
