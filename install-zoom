#!/usr/bin/env bash
##########################################################################
# Script Name  : install-zoom
# Description  : Install/Remove Zoom 
# Dependencies : none
# Arguments    : See help function
# Author       : Copyright (C) 2022, Richard B. Romig, 10 Nov 2022
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.1.2"
readonly _updated="04 Feb 2023"

## Functions ##

check_dependencies() {
	local packages=( gdebi wget )
	check_packages "${packages[@]}"
}

cleanup() {
	[[ -d "$tmp_dir" ]] && rm -rf "$tmp_dir"
}

help() {
	errcode="${1:-2}"
	cat << END_HELP
Installs or removes the Zoom video conferencing software.
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
	-h 	Display help
	-i 	Install Zoom
	-r 	Remove Zoom
END_HELP
	printf "\U1F427 %s v%s (%s)\n" "$_script" "$_version" "$_updated"
  exit "$errcode"
}

zoom_version() {
	dpkg -l | awk '$2 == "zoom" {print $3}'
}

install_zoom() {
	local url="https://zoom.us/client/latest"
	local pkg="zoom_amd64.deb"
	printf "Dowloading Zoom ...\n"
	wget -q -P "$tmp_dir" "$url/$pkg"
	printf "Installing the latest version of Zoom...\n"
	sudo gdebi -n "$tmp_dir/$pkg"
	sudo apt-get install -f
	printf "Zoom %s is installed.\n" "$(zoom_version)"
}

remove_zoom() {
	printf "Removing Zoom %s ...\n" "$(zoom_version)"
	sudo apt-get remove zoom -yy
	printf "Zoom has been removed.\n"
}

## Execution ##

if [[ "$#" -eq 0 ]]; then
	printf "%s No argument passed.\n" "$red_error"  >&2
	help 1
else
	optstr=":hir"
	while getopts "$optstr" opt; do
		case "$opt" in
			h )
				help 0
				;;
			i )
				exists zoom && printf "Zoom %s is installed.\n" "$(zoom_version)"
				tmp_dir=$(mktemp -d) || die "Failed to create temporary directory." 1
				trap cleanup EXIT
				user_in_sudo
				install_zoom
				break
				;;
			r )
				exists zoom || leave "Zoom is not installed."
				user_in_sudo
				remove_zoom
				break
				;;
			? )
				printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
				help 2
				;;
		esac
	done
fi
printf "\U1F427 %s v%s (%s)\n" "$_script" "$_version" "$_updated"
exit
