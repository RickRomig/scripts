#!/bin/bash
###############################################################################
# Script Name  : syncrick
# Description  : A script to sync data main PC and main laptop.
# Dependencies : rsync
# Arguments    : none, addresses hard coded.
# Author       : Copyright (C) 2023, Richard Romig 12 Mar 2023
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     : Uses a configuration file to store hostnames & IP addresses.
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

local_host="$(uname -n)"; readonly local_host
_script=$(basename "$0"); readonly _script
readonly _version="3.0.1"
readonly _updated="12 Mar 2023"
readonly config_dir="$HOME/.config/scripts"
readonly config_file="$_script.conf"

## Functions ##

create_config() {
  [[ -d "$config_dir" ]] || mkdir -p "$config_dir"
  echo "Complete all fields"
  read -rp "Main hostname: " main_host
  read -rp "IP address (last octect): " main_ip
  read -rp "Laptop hostname: " lap_host
  read -rp "IP adddress (last octet): " lap_ip
  read -rp "Wireless IP (last octet): " wifi_ip

  echo "
  main_host='$main_host'
  main_ip='$main_ip'
  lap_host='$lap_host'
  lap_ip='$lap_ip'
  wifi_ip='$wifi_ip'
  " > "$config_dir/$config_file"
}

transfer_status() {
  # Exit script if transfer fails.
  xfr_status="$1"
  (( xfr_status != 0 )) && die "A transfer failed! Check network status." "$xfr_status"
}

sync_script() {
  local hostip="$1"
  # Synch to all.
  echo $'\n'$"${orange}Syncing aliases...${normal}"
  rsync -avzh --delete /home/"$USER"/.bash_aliases "$localnet.$hostip":
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing script configuration files...${normal}"
  rsync -avzh --delete /home/"$USER"/.config/scripts/ "$localnet.$hostip":.config/scripts/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Password Databases...${normal}"
  rsync -avzh --delete /home/"$USER"/Documents/Rick_pwds* /home/"$USER"/Documents/Passwords* "$localnet.$hostip":Documents/
  exit_status="$?"
  transfer_status "$exit_status"

   echo $'\n'$"${orange}Syncing homepage...${normal}"
  rsync -avzh --delete /home/"$USER"/homepage/ "$localnet.$hostip":homepage/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Homepage...${normal}"
  rsync -avzh --delete /home/"$USER"/.local/share/doc/todo.lst "$localnet.$hostip":.local/share/doc/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing MOSFANET...${normal}"
  rsync -avzh --delete /home/"$USER"/Documents/mosfanet/ "$localnet.$hostip":Documents/mosfanet/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Work..${normal}"
  rsync -avzh --delete /home/"$USER"/Work/ "$localnet.$hostip":Work/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Templates...${normal}"
  rsync -avzh --delete /home/"$USER"/Templates/ "$localnet.$hostip":Templates/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Pictures/wallpaper...${normal}"
  rsync -avzh --delete /home/"$USER"/Pictures/wallpaper/ "$localnet.$hostip":Pictures/wallpaper/
  exit_status="$?"
  transfer_status "$exit_status"

  # Sync repositories
  echo $'\n'$"${orange}Syncing Gitea repositoies...${normal}"
  rsync -avzh --delete /home/"$USER"/gitea/ "$localnet.$hostip":gitea/
  exit_status="$?"
  transfer_status "$exit_status"

  # Sync personal files.
  echo $'\n'$"${orange}Syncing Audio Books...${normal}"
  rsync -avzh --delete /home/"$USER"/Audiobooks/ "$localnet.$hostip":Audiobooks/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Blogs...${normal}"
  rsync -avzh --delete /home/"$USER"/Documents/Blogs/ "$localnet.$hostip":Documents/Blogs/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Dreams...${normal}"
  rsync -avzh --delete /home/"$USER"/Documents/Dreams/ "$localnet.$hostip":Documents/Dreams/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Journals...${normal}"
  rsync -avzh --delete /home/"$USER"/Documents/Journals/ "$localnet.$hostip":Documents/Journals/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Quotes...${normal}"
  rsync -avzh --delete /home/"$USER"/Documents/Quotes/ "$localnet.$hostip":Documents/Quotes/
  exit_status="$?"
  transfer_status "$exit_status"

  echo $'\n'$"${orange}Syncing Tech Videos...${normal}"
  rsync -avzh --delete /home/"$USER/Videos/Tech/" "$localnet.$hostip":Videos/Tech/
  exit_status="$?"
  transfer_status "$exit_status"
}

## Execution ##

# Start timer
SECONDS=0

printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"

[[ -f "$config_dir/$config_file" ]] || create_config
source "$config_dir/$config_file"

if [[ "$local_host" == "$main_host" ]]; then
  if ping -c 3 "$localnet.$lap_ip" >/dev/null 2>&1; then
    printf "Syncing %s to %s ...\n" "$main_host" "$lap_host"
    sync_script "$lap_ip"
    printf "\n%s synced with %s.\n" "$lap_host" "$main_host"
  elif ping -c 3 "$localnet.$wifi_ip" >/dev/null 2>&1; then
    printf "Syncing %s to %s ...\n" "$main_ip" "$lap_host"
    sync_script "$wifi_ip"
    printf "\n%s synced with %s.\n" "$lap_host" "$main_host"
  else
    printf "\n%s is not on the netwwork.\n" "$lap_host"
  fi
else
  # local host is laptop
  if ping -c 3 "$localnet.$main_ip" >/dev/null 2>&1; then
    printf "Syncing %s to %s ...\n" "$lap_host" "$main_host"
    sync_script "$main_ip"
    printf "\n%s synced with %s.\n" "$main_host" "$lap_host"
  else
    printf "\n%s is not on the netwwork.\n" "$main_host"
  fi
fi

box "$_script completed in $(format_time $SECONDS)"
