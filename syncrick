#!/usr/bin/env bash
###############################################################################
# Script Name  : syncrick
# Description  : A script to sync data main PC and main laptop.
# Dependencies : rsync
# Arguments    : none, addresses hard coded.
# Author       : Copyright (C) 2023, Richard Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 12 Mar 2023
# Updated      : 16 May 2025
# Comments     :
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

SECONDS=0

## Functions ##

transfer_status() {
  # Exit script if transfer fails.
  xfr_status="$1"
  (( xfr_status != 0 )) && die "A transfer failed! Check network status." "$xfr_status"
}

syncscript() {
  local hostip="$1"

  # Sync Audiobook files.
  printf "\n%sSyncing Audio Books...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Audiobooks/ "$LOCALNET.$hostip":Audiobooks/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Blog directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/Blogs/ "$LOCALNET.$hostip":Documents/Blogs/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Dreams directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/Dreams/ "$LOCALNET.$hostip":Documents/Dreams/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Language directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/Language/ "$LOCALNET.$hostip":Documents/Language/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing ~/.bashrc ...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/.bashrc "$LOCALNET.$hostip":
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing ~/.bash_aliases ...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/.bash_aliases "$LOCALNET.$hostip":
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing ~/.local/share/doc ...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/.local/share/doc/ "$LOCALNET.$hostip":.local/share/doc/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing MOSFANET directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/mosfanet/ "$LOCALNET.$hostip":Documents/mosfanet/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Work directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Work/ "$LOCALNET.$hostip":Work/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Wallpaper directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Pictures/wallpaper/ "$LOCALNET.$hostip":Pictures/wallpaper/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing SFW Wallpaper directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Pictures/backgrounds/ "$LOCALNET.$hostip":Pictures/backgrounds/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Quotes directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/Quotes/ "$LOCALNET.$hostip":Documents/Quotes/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Journals directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Documents/Journals/ "$LOCALNET.$hostip":Documents/Journals/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Tech Videos...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Videos/Tech/ "$LOCALNET.$hostip":Videos/Tech/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing cloned repositories...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Downloads/cloned-repositories/ "$LOCALNET.$hostip":Downloads/cloned-repositories/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Code directory...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Downloads/Code/ "$LOCALNET.$hostip":Downloads/Code/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Projects Repositories...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/Projects/ "$LOCALNET.$hostip":Projects/
  exit_status="$?"
  transfer_status "$exit_status"

  printf "\n%sSyncing Gitea Repositories...%s\n" "$orange" "$normal"
  rsync -avh --delete "$HOME"/gitea/ "$LOCALNET.$hostip":gitea/
  exit_status="$?"
  transfer_status "$exit_status"
}

sync_to_laptop() {
  local main_host="$1"
  local lap_host="$2"
  local lap_ip="22"
  local wifi_ip="153"
  if ping -c 3 "$LOCALNET.$lap_ip" >/dev/null 2>&1; then
    printf "Syncing %s to %s ...\n" "$main_host" "$lap_host"
    syncscript "$lap_ip"
    printf "\n%s synced with %s.\n" "$lap_host" "$main_host"
  elif ping -c 3 "$LOCALNET.$wifi_ip" >/dev/null 2>&1; then
    printf "Syncing %s to %s ...\n" "$main_host" "$lap_host"
    syncscript "$wifi_ip"
    printf "\n%s synced with %s.\n" "$lap_host" "$main_host"
  else
    printf "\n%s is not on the netwwork.\n" "$lap_host"
  fi
}

sync_to_main() {
  local main_host="$1"
  local lap_host="$2"
  local main_ip="10"
  if ping -c 3 "$LOCALNET.$main_ip" >/dev/null 2>&1; then
    default_no "Are you sure you want to sync to $main_host?" || leave "Sync to $main_host canceled."
    printf "Syncing %s to %s ...\n" "$lap_host" "$main_host"
    syncscript "$main_ip"
    printf "\n%s synced with %s.\n" "$main_host" "$lap_host"
  else
    printf "\n%s is not on the netwwork.\n" "$main_host"
  fi
}

check_host() {
  local local_host="${HOSTNAME:-$(hostname)}"
  local main_host="hp-800g2-sff"
  local lap_host="hp-850-g3"
  if [[ "$local_host" == "$main_host" ]]; then
    sync_to_laptop "$main_host" "$lap_host"
  elif [[ "$local_host" == "$lap_host" ]]; then
    sync_to_main "$main_host" "$lap_host"
  else
    die "Invalid client. $script must be run from either $main_host or $lap_host." 1
  fi
}

main() {
  local script version
  script=$(basename "$0")
  version="4.4.25136"
  box "$script $version" "-"
  printf "Synchronizes files between %s and %s.\n" "$main_host" "$lap_host"
  check_host
  over_line "Syncronization completed in $(format_time $SECONDS)" "-"
  printf "%s v%s\n" "$script" "$version"
  exit
}

## Execution ##

main "$@"
