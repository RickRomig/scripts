#!/usr/bin/env bash
##########################################################################
# Script Name  : kkb
# Description  : Displays kitty keybindings
# Dependencies : curl
# Arguments    : None
# Author       : Copyright Â© 2023 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 25 Apr 2023
# Last updated : 19 Jul 2025
# Comments     : Install with kitty-bindings.list in ~/.config/kitty/
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Global Variables ##

readonly kitty_dir=$HOME/".config/kitty"
readonly bindings="bindings.list"

## Functions ##

copy_bindings() {
	local repository="configs/raw/branch/main/"
	check_package curl
	curl -so "$kitty_dir/$bindings" "$GITEA_URL/$repository/$bindings"
}

show_bindings() {
	[[ -f "$kitty_dir/$bindings" ]] || copy_bindings
	printf "%sKitty keybindings:%s\n" "$green" "$normal"
	(printf "%s%sBinding|Action|Binding|Action%s\n" "$underline" "$lightblue" "$normal"; less "$kitty_dir/$bindings") | column -ts "|"
}

main() {
  local script version
  script=$(basename "$0")
  version="1.8.25200"
	[[ "$TERM" != "xterm-kitty" ]] && die "Terminal emulater is not Kitty." 1
	clear
	show_bindings
	over_line "$script $version"
	exit
}

## Execution ##

main "$@"
