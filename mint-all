#!/usr/bin/env bash
##############################################################################
# Script Name  : mint-all
# Description  : Mint installer for all systems
# Dependencies : apt-get, wget, curl, gdebi
# Arguments    : None
# Author       : Richard Romig, 27 December 2018
# Email        : rick.romig@gmail.com
# Comment      :
# TODO (rick)  : Add checks for exfat-fuse and exfat-utils (universe repository)
#              : Needs to be completely rewritten for HP6006 share.
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="2.1.11"
readonly _updated="21 Jun 2021"

# readonly home_dir=$HOME
readonly inst_dir=$HOME"/Downloads/install-scripts"
readonly start_dir=$PWD

## Execution ##

if [[ "$start_dir" != "$home_dir" ]]; then
  pushd "$home_dir" || die "pushd failed"
fi

echo "$_script v$_version ($_updated)"
echo "Sets up directories and installs basic software on new systems.
"
# Check sudo access and start sudo timer
user_in_sudo

# Create working directories if they don't exist
echo "Creating working directories."
[[ -d "$HOME/bin" ]] || mkdir -p "$HOME/bin"
[[ -L "$HOME/Desktop/bin" ]] || ln -s "$HOME/bin" "$HOME/Deasktop/bin"
[[ -d "$HOME/homepage" ]] || mkdir -p "$HOME/homepage"
[[ -d "$HOME/Work" ]] || mkdir -p "$HOME/Work"
[[ -L "$HOME/Desktop/Work" ]] || ln -s "$HOME/Work" "$HOME/Desktop/Work"
if [[ -d "$HOME/.ssh" ]]; then
  chmod 700 "$HOME/.ssh"
else
  mkdir -p "$HOME/.ssh"
  chmod 700 "$HOME/.ssh"
fi

# Create symlinks on the Desktop for working directories
# pushd "$home_dir/Desktop" || die "pushd failed"
# [[ -L Work ]] || ln -s "$home_dir/Work" Work
# [[ -L bin ]] || ln -s "$home_dir/bin" bin
# popd || die "popd failed"

# Update apt cache

sudo apt update -qq

# Install packages from Debian/Ubuntu/Mint repositories

# Network utilities
sudo apt install openssh-server sshfs sshpass filezilla -yy
sudo apt install net-tools nmap libnss-mdns traceroute dnsutils fping -yy

# System utilities
sudo apt install inxi lsof htop hdparm dtrx mc terminator clamav clamtk -yy
sudo apt install exfat-fuse exfat-utils neofetch tree

# Development utilities
sudo apt install git shellcheck bluefish cloc binutils -yy
sudo apt install password-gorilla keepassxc brasero -yy

# Games
sudo apt install aisleriot tali -yy

# Install wget, curl, gdebi, grsync, if not already installed
check_package wget
check_package curl
check_package gdebi
check_package grsync

# Install local .deb packages: bat, fnloc, micro, multibootusb
if [[ -d "$HOME/Downloads/Packages" ]]; then
  echo "Installing local .deb packages..."
  pushd "$HOME/Downloads/Packages" || die "pushd failed"
  for filename in ./*.deb
  do
    sudo gdebi -n "$filename"
  done
  # bat configuration file
  if exists bat; then
    [[ -d "$HOME/.config/bat" ]] || mkdir -p "$HOME/.config/bat"
    cp -pv config "$HOME/.config/bat/"
  fi
  # micro configuration files
  if exists micro; then
    [[ -d "$HOME/.config/micro" ]] || mkdir -p "$HOME/.config/micro"
    cp -pv bindings.json "$HOME/.config/micro/"
    cp -pv settings.json "$HOME/.config/micro/"
    sudo apt install xclip -yy
  fi
  popd || die "popd failed"
else
  echo $'\n'$"${lightred}WARNING!${normal} There's no ~/Downloads/Packages directory." >&2
  echo "Local .deb packages can't be automatically installed." >&2
  sleep 5
fi

# Terminator configuration file
if exists terminator; then
  [[ -d "$HOME/.config/terminator" ]] || mkdir -p "$HOME/.config/terminator"
  cp -pv "$inst_dir/configs/terminator/config" "$HOME/.config/terminator"
  [[ -d "$HOME/.local/share/fonts" ]] || mkdir -p "$HOME/.local/share/fonts"
  [[ -f "$HOME/.local/share/fonts/Cascadia.ttf" ]] || cp -pv "$inst_dir/fonts/Cascadia.ttf" "$HOME/.local/share/fonts"
fi

# Sound 'pop and click' fix. Set sound card to stay powered all the time:
# sudo bash -c "echo 'options snd-hda-intel power_save=0 power_save_controller=N' >> /etc/modprobe.d/alsa-base.conf"

# Brasero Bug Fix - Ubuntu 18.04:
# Set permissions to enable audio CD writing in Ubuntu 18.04:
sudo chmod 4711 /usr/bin/cdrdao
sudo chmod 4711 /usr/bin/wodim
sudo chmod 0755 /usr/bin/growisofs

# Install guvcview if a camera device exists
ls /dev/video* > /dev/null 2>&1 && sudo apt install guvcview -yyq

if [[  "$start_dir" != "$home_dir" ]]; then
  popd || die "popd failed"
fi

# Installation done

echo "All done! Please reboot the computer."

exit
