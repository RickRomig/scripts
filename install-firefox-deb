#!/usr/bin/env bash
##########################################################################
# Script Name  : install-firefox-deb
# Description  : install Firefox .deb package from Mozilla repos
# Dependencies : wget
# Arguments    : none
# Author       : Copyright Â© 2024 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 24 Jan 2024
# Updated      : 24 Oct 2025
# Comments     : Remove Distro, Flatpak, or Snap version before installing.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly version="6.1.25297"
readonly mozilla_list="/etc/apt/sources.list.d/mozilla.list"
readonly mozilla_asc="/etc/apt/keyrings/packages.mozilla.org.asc"
readonly mozilla_pref="/etc/apt/preferences.d/mozilla.pref"
verbose_mode="$FALSE"

## Functions ##

help() {
	local errcode="${1:-2}"
	local -r updated="24 Oct 2025"
	cat << _HELP_
${orange}$script${normal} $version, Upated: $updated
Installs/Removes Mozilla repository version of Firefox.

${green}Usage:${normal} $script [-h] [-vi] [-vr]
${orange}Available options:${normal}
	-h	Show this help message and exit.
	-i	Install Mozilla Firefox Debian package.
	-r	Remove Mozilla Firefox Debian package.
	-v	Enable verbose mode. If used, must precede other flags.
_HELP_
  exit "$errcode"
}

show_message() {
	local message="$1"
	[[ "$verbose_mode" == "$TRUE" ]] && echo "$message"
}

firefox_version() {
	firefox --version
}

mozilla_deb() {
	dpkg -l firefox | grep -q 'Mozilla Firefox' && return "$TRUE" || return "$FALSE"
}

other_firefox() {
	dpkg -l firefox-esr > /dev/null 2>&1 | grep -q 'esr' && return "$TRUE"
	dpkg -l firefox > /dev/null 2>&1 | grep -q 'linuxmint' && return "$TRUE"
	if exist flatpak; then
		flatpak list | grep -q firefox && return "$TRUE"
	fi
	return "$FALSE"
}

create_preference_file() {
	# Preference file to prioritize packages from Mozilla repository
	show_message "Creating preference file..."
	echo '
Package: *
Pin: origin packages.mozilla.org
Pin-Priority: 1000
'| sudo tee "$mozilla_pref"
}

set_gpg_key() {
	local -r key_url="https://packages.mozilla.org/apt/repo-signing-key.gpg"
	if [[ -f "$mozilla_asc" ]]; then
		printf "%s already exists.\n" "${mozilla_asc##*/}"
		return
	fi
	show_message "Installing keyrings directory..."
	[[ -d /etc/apt/keyrings ]] || sudo install -d -m 0755 /etc/apt/keyrings
	show_message "Importing Mozilla APT repository keys..."
	wget -q "$key_url" -O- | sudo tee "$mozilla_asc"
}

set_sources_list() {
	local -r list_url="https://packages.mozilla.org/apt"
	if [[ -f "$mozilla_list" ]]; then
		printf "%s already exists.\n" "${mozilla_list##*/}"
		return
	fi
	show_message "Adding Mozilla APT repository to sources list..."
	echo "deb [signed-by=$mozilla_asc] $list_url mozilla main" | sudo tee -a "$mozilla_list" > /dev/null
}

install_mozilla_deb() {
	if other_firefox; then
		printf "Another version of Firefox is already installed.\n" >&2
		printf "Remove before installing the Mozilla package.\n" >&2
		return
	fi
	printf "Installing the Mozilla Firefox DEB package...\n"
	set_gpg_key
	set_sources_list
	create_preference_file
	show_message "Updating apt cache..."
	sudo apt-get update
	show_message "Installing Firefox..."
	sudo apt-get install -y firefox
	exists firefox || die "Firefox installation failed." 1
	printf "%s installed.\n" "$(firefox_version)"
}

remove_mozilla_firefox() {
	printf "Removing %s..." "$(firefox_version)"
	sudo apt-get remove -y firefox
	show_message "Removing source.list..."
	[[ -f "$mozilla_list" ]] && sudo rm "$mozilla_list"
	show_message "Removing Mozilla preference file..."
	[[ -f "$mozilla_pref" ]] && sudo rm "$mozilla_pref"
	show_message "Removing keyring..."
	[[ -f "$mozilla_asc" ]] && sudo rm "$mozilla_asc"
	show_message "Removing user configuration files..."
	find ~/ -maxdepth 2 -type d -name "*mozilla*" -exec rm -rf {} \;
	printf "The Mozilla Firefox deb package has been removed.\n"
}

main() {
	local noOpt opt optstr
	noOpt=1
	optstr=":hirv"
	while getopts "$optstr" opt; do
		case "$opt" in
			h )
				help 0
				;;
			i )
				if mozilla_deb; then
					printf "%s DEB package is already installed.\n" "$(firefox_version)" >&2
				else
					install_mozilla_deb
				fi
				;;
			r )
				if mozilla_deb; then
					remove_mozilla_firefox
				else
					printf "Mozilla Firefox DEB package is not installed.\n" >&2
				fi
				;;
			v )
				verbose_mode="$TRUE"
				show_message "Verbose mode enabled."
				;;
			? )
				printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
				help 2
		esac
		noOpt=0
	done
	[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
	shift "$(( OPTIND - 1 ))"
	over_line "$script $version"
	exit
}

## Execution ##

main "$@"
