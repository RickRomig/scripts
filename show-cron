#!/usr/bin/env bash
#####################################################################
# Script Name  : show-cron
# Description  : Shows when anacron jobs were last run and displays
#              : crontabs for all normal users and root.
# Dependencies : anacron, cron, crontab
# Arguments    : None
# Author       : Copyright (C) 2018, Richard Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 06 Mar 2018
# Updated      : 19 Dec 2024
# Comments     : Requires sudo privileges
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#####################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Functions ##

anacron_jobs() {
  local count cron_dir interval
  interval="$1"
  cron_dir="/etc/cron.$interval"
  count=$(find "$cron_dir" -maxdepth 1 -type f -iname \* | wc -l)
  [[ "$count" -gt 0 ]] && return "$TRUE" || return "$FALSE"
}

print_anacron_jobs() {
  local cron_dir interval
  interval="$1"
  cron_dir="/etc/cron.$interval"
  find "$cron_dir" -maxdepth 1 -type f -iname \* | awk -F"/" '{print "  " $NF}'
}

list_anacron_jobs() {
  local interval cron_spool
  interval="$1"
  cron_spool="/var/spool/anacron/cron.$interval"
  printf "\n%sAnacron %s:%s Last run on %s\n" "$orange" "${interval^}" "$normal" "$(sudo cat "$cron_spool" 2>/dev/null)"
  if anacron_jobs "$interval"; then
    print_anacron_jobs "$interval"
  else
    printf "No jobs scheduled.\n"
  fi
}

show_anacron() {
  local interval intervals
  intervals=( daily weekly monthly )
  for interval in "${intervals[@]}"; do
    list_anacron_jobs "$interval"
  done
}

show_user_cron() {
  local index max norm_user num_users
  num_users=$(awk -F: '$3 >= 1000 && !($1 == "nobody" && $3 == 65534) {SUM+=1} END {print SUM}' /etc/passwd)
  index=1000  # starting point for regular users
  max=$(( num_users + index ))

  while [[ "$index" -le "$max" ]]; do
    norm_user="$(awk -v pat="$index" -F: '$0~pat{print $1}' /etc/passwd)"
    if [[ "$norm_user" ]]; then
      printf "\n%sCron jobs for %s:%s\n" "$orange" "${norm_user^}"  "$normal"
      sudo crontab -l -u "$norm_user" | grep -v '^#' | sed 's/>\/dev\/null 2>&1//' | awk '{print "  "$1,$2,$3,$4,$5"\t"$NF}'
    fi
    (( index++ ))
  done
}

show_root_cron() {
  printf "\n%sCron jobs for root:%s\n" "$orange" "$normal"
  sudo crontab -l | grep -v '^#' | sed 's/>\/dev\/null 2>&1//' | awk '{print "  "$1,$2,$3,$4,$5"\t"$NF}'
}

main() {
  local script version lhost
  script=$(basename "$0")
  version="6.1.24354"
  lhost="${HOSTNAME:-$(hostname)}"

  sudo_login 0
  clear
  printf "%s%sAnacron and Cron Jobs for %s%s\n" "$bold" "$green" "$lhost" "$normal"
  show_anacron
  show_user_cron
  show_root_cron
  over_line "$script v$version" "-"
  exit
}

## Execution ##

main "$@"
