#!/usr/bin/env bash
#############################################################################
# Script Name  : sync-home
# Description  : Synchronize ~/Documents/homepage with ~/Dropbox/homepage
# Dependencies : rsync
# Arguments    : none
# Author       : Copyright Â© 2023 Richard B. Romig, 24 Sep 2019
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     : Creates a zipped archive of the folder's contents.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091,SC2088

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.6.1"
readonly _updated="28 Oct 2023"
readonly homepage_dir=$HOME"/gitea/homepage"
readonly dropbox_dir="$HOME/Dropbox/homepage"
readonly archive_dir="$HOME/Downloads/archives/homepage"

## Functions ##

check_host() {
	local local_host="${HOSTNAME:-$(hostname)}"
	local main_host="hp-800g2-sff"
	[[ "$local_host" != "$main_host" ]] && die "$_script must be run from $main_host." 2
}

remove_bu_files() {
  printf "\nRemoving backup files (if any)...\n"
  find "$homepage_dir"/ -name "*~" -delete
  find "$homepage_dir"/ -maxdepth 2 -type f -name "*.bak" -exec rm{} \;
}

backup_homepage() {
	local archive
	archive="homepage-$(date +%y%m%d).tar.gz"
	[[ -d "$archive_dir" ]] || mkdir -p "$archive_dir"
	printf "Backing up %s...\n" "$homepage_dir"
	tar -czvf "$archive_dir/$archive" -C "$HOME/Documents" homepage
}

sync_dropbox() {
  printf "\nSynchronizing ~/Documents/homepage with ~/Dropbox/homepage...\n"
  rsync -av --delete "$homepage_dir"/ "$archive_dir"/ "$dropbox_dir"
}

## Execution ##

SECONDS=0
printf "%s v%s (Updated: %s)\n" "$_script" "$_version" "$_updated"
check_host
remove_bu_files
backup_homepage
[[ -d "$dropbox_dir" ]] && sync_dropbox
printf "\nScript completed in %s\n" "$(format_time $SECONDS)"
exit
