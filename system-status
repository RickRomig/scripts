#!/usr/bin/env bash
#####################################################################
# Script Name  : check-status
# Description  : Provides a snapshot of system resources
# Dependencies : hddtemp, lm-sensors, sensors
# Arguments    : none
# Author       : Copyright (C) 2018,Richard Romig, 17 November 2018
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comment      : Inspired by Joe Collins <https://www.ezeeLinux.com>
#              : and Luke Smith <https://lukesmith.xyz>
# 13 Feb 2022  : Added `-x fuse.portal` to df command to eliminate this error:
#              : df: /run/user/1000/doc: Operation not permitted
# 16 Jan 2023  : added NVMe & HDD temperatures & moved routines into functions.
# License      : GNU General Public License, version 2.0
#####################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

readonly _script=$(basename "$0")
readonly _version="0.4.1"
readonly _updated="16 Jan 2023"

## Functions ##

check_dependencies() {
  echo "Checking dependencies..."
  [[ -x /usr/bin/sensors ]] || sudo apt-get install lm-sensors -yy
}

nvme_temperature() {
  nvme_temp=$(/usr/bin/sensors | awk '/Composite/ {print $2}' | sed 's/^+//')
  echo "${orange}NVME temperature:${normal} $nvme_temp"
}

cpu_temperature(){
  if [[ -x /usr/bin/sensors ]]; then 
    cpu_temp=$(/usr/bin/sensors | awk '/^Package/ {print $4}')
    [[ -z "$cpu_temp" ]] && cpu_temp=$(/usr/bin/sensors | awk '/^CPU/ {print $2}')
    [[ -z "$cpu_temp" ]] && cpu_temp=$(/usr/bin/sensors | awk '/^Core 0:/ {print $3}')
    [[ -z "$cpu_temp" ]] && cpu_temp=$(/usr/bin/sensors | awk '/^temp1:/ {print $2}')
    echo $'\n'$"${orange}CPU temperature:${normal} $(echo "$cpu_temp" | sed 's/^+//')"
  else
    echo $'\n'$"SCPU temperature is not avaliable." >&2
  fi
}

memory_usage() {
  echo "${orange}Memory usage:${normal} $(/usr/bin/free -h | awk '/^Mem:/ {print $3 "/" $2}')"
  echo -e "Process\t\tPercentage"
  ps axch -o cmd:15,%mem --sort=-%mem | head -n 10
}

cpu_usage() {
  echo $'\n'$"${orange}CPU usage:${normal}"
  echo -e "Process\t\tPercentage"
  ps axch -o cmd:15,%cpu --sort=-%cpu | head -n 10
}

disk_usage() {
  echo $'\n'$"${orange}Disk usage:${normal}"
  # prints 1st line of df outuput and lines beginning with `/`
  df -hT -x fuse.portal | sed -n '1p;/^\//p'
}

main() {
  check_dependencies
  clear
  echo "${lightyellow}System Status${normal}"
  echo -e "${orange}Computer name:\t$(uname -n)"
  echo -e "Distribution:\t$(get_distribution)"
  echo -e "Kernel Version:\t$(uname -sr)${normal}\n"
  memory_usage
  cpu_usage
  cpu_temperature
  [[ -b /dev/nvme0n1 ]] && nvme_temperature
  disk_usage
  echo $'\n'$"The system has been $(uptime -p)"
  echo $'\n'$"$_script $_version ($_updated)"
  exit
}

## Execution ##
main
