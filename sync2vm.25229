#!/usr/bin/env bash
##########################################################################
# Script Name  : sync2vm
# Description  : Synchronize .bash_aliases, ~/bin to VM
# Dependencies : rsync
# Arguments    : none
# Author       : Copyright (C) 2022,Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com
# Created      : 08 Feb 2022
# Updated      : 17 Aug 2025
# Comments     : Run from KVM/QEMU VM on 192.168.122.0 network
#              : Copy script to ~/.local/bin on virtual machine.
# TODO (Rick)  : Retire. No longer needed.
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Functions ##

transfer_status() {
  local xfr_status="$1"
  if [[ "$xfr_status" -eq 0 ]]; then
		printf "Transfer successful\n"
	else
		printf "%s A transfer failed. Code: %d. Check network status.\n" "$RED_ERROR" "$xfr_status" >&2
	fi
}

sync_script() {
  local exit_status gateway_ip
  gateway_ip="${LOCALNET.1:-192.168.122.1}"
	printf "\n%sSyncing .bash_aliases ...%s\n" "$orange" "$normal"
	rsync -avh --delete rick@"$gateway_ip":.bash_aliases "$HOME/"
	exit_status="$?"
	transfer_status "$exit_status"
	printf "\n%sSyncing bin directory ...%s\n" "$orange" "$normal"
	rsync -avh --delete --exclude '.git' rick@"$gateway_ip":bin/ "$HOME/bin/"
	exit_status="$?"
	transfer_status "$exit_status"
  printf "\n%sSyncing .local/share/doc...%s\n" "$orange" "$normal"
  rsync -avzh --delete --exclude 'leave.txt' rick@"$gateway_ip":.local/share/doc/ "$HOME"/.local/share/doc/
  exit_status="$?"
  transfer_status "$exit_status"
}

main() {
	local -r script="${0##*/}"
	local -r version="2.3.25229"
  [[ "$LOCALNET" != "192.168.122" && "$LOCALNET" != "10.0.2" ]] && die "Must be run from a KVM/QEMU virtual machine." 1
  check_package rsync
  SECONDS=0
  box "$script v$version"
  sync_script
  box "All directories synced!" "-"
  leave "Script completed in $(format_time $SECONDS)"
}

## Execution ##

main "$@"
