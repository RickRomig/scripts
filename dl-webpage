#!/usr/bin/env bash
#############################################################################
# Script Name  : dl-webpage
# Description  : Downloads a page from the web to the current directory.
# Dependencies : wget
# Arguments    : URL of page to be downloaded
# Author       : Copyright (C) 2019, Richard B. Romig, 02 Nov 2019
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 02 Nov 2019
# Updated      : 23 Jun 2025
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly version="2.1.25174"

## Functions ##

help() {
  local errcode="${1:-2}"
  local updated="23 Jun 2025"
  cat << _HELP_
${orange}$script${normal} $version, Updated: $updated
Downloads a web page to the current directory.

${green}Usage:  ${normal} $script [URL | OPTION]
${green}Example:${normal} $script https://example.com/index.html

${orange}Available options:${normal}
  -h | --help  Show this help message and exit.
_HELP_
  exit "$errcode"
}

download_page() {
  local -r domain="$1"
  local -r url="$2"
  printf "Downloading %s to %s\n" "$url" "$PWD"
  wget --quiet --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=windows --domains "$domain" --no-parent "$url"
}

print_status() {
  local -r exit_code="${1:-0}"
  if [[ "$exit_code" -eq 0 ]]; then
    printf "Page succesfully downloaded.\n"
  else
    printf "Download failed with exit code: %s.\n" "$exit_code"
  fi
}

main() {
  local dl_ec domain url
  check_package wget
  if [[ "$#" -eq 0 ]]; then
    printf "%s No argument passed.\n" "$RED_ERROR" >&2
    help 1
  elif [[ "$1" = "--help" || "$1" = "-h" ]]; then
    help 0
  elif [[ "$1" =~ ^https?:\/\/.* ]]; then
    url="$*"
    domain=$(echo "$url" | sed -e 's|^[^/]*//||' -e 's|^www\.||' -e 's|/.*$||')
    download_page "$domain" "$url"
    dl_ec="$?"
    print_status "$dl_ec"
    over_line "$script $version"
    exit "$dl_ec"
  else
    printf "%s Invalid argument - %s\n" "$RED_ERROR" "$1" >&2
    help 2
  fi
}

## Execution ##

main "$@"