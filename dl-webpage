#!/usr/bin/env bash
#############################################################################
# Script Name  : dl-webpage
# Description  : Downloads a page from the web to the current directory.
# Dependencies : wget
# Arguments    : URL of page to be downloaded
# Author       : Copyright (C) 2019, Richard B. Romig, 02 Nov 2019
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 02 Nov 2019
# Updated      : 28 Sep 2024
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

script=$(basename "$0"); readonly script
readonly version="2.0.24272"

## Functions ##

help() {
  local errcode updated
  errcode="${1:-2}"
  updated="28 Sep 2024"
  cat << END_HELP
${orange}$script${normal} $version, Updated: $updated
Downloads a web page to the current directory.

${green}Usage:  ${normal} $script [URL] [OPTOON]
${green}Example:${normal} $script https://example.com/index.html

${orange}Available options:${normal}
  -h | --help  Show help

  Example: $script https://example.com/index.html
END_HELP
  exit "$errcode"
}

download_page() {
  local domain url
  domain="$1"
  url="$2"
  if wget --quiet --recursive --no-clobber --page-requisites --html-extension \
    --convert-links --restrict-file-names=windows --domains "$domain" \
    --no-parent "$url"
  then
    return 0
  else
    status="$?"
    return "$status"
  fi
}

main() {
  local cur_d domain ec url
  cur_d="$PWD"
  if [[ "$#" -eq 0 ]]; then
    printf "%s No argument passed.\n" "$red_error" >&2
    help 1
  elif [[ "$1" = "--help" || "$1" = "-h" ]]; then
    help 0
  elif [[ "$1" =~ ^https?:\/\/.* ]]; then
    url="$*"
    domain=$(echo "$url" | sed -e 's|^[^/]*//||' -e 's|^www\.||' -e 's|/.*$||')
  else
    printf "%s Invalid parameter - %s\n" "$red_error" "$1" >&2
    help 2
  fi

  printf "Downloading %s to %s\n" "$url" "$cur_d"
  download_page "$domain" "$url"; ec="$?"
  if [[ "$ec" -eq 0 ]]; then
    leave "$url successfully downloaded."
  else
    die "Download failed with exit status $ec." "$ec"
  fi
  printf "%s v%s\n" "$script" "$version"
}

## Execution ##

check_package wget
main "$@"