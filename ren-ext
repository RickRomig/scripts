#!/usr/bin/env bash
###############################################################################
# Script Name  : ren-ext
# Description  : Renames file extensions in the current directory
# Dependencies : none
# Arguments    : File extenstion to be changed
# Author       : Copyright (C) 2017, Richard Romig
# Email        : rick.romig@gmail.com
# Created      : 2017
# Updated      : 03 Oct 2024
# Comment      : File extensions are not case sensitive, will change to lowercase.
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

script=$(basename "$0"); readonly script
readonly version="2.7.24277"
readonly updated="23 Aug 2024"

## Functions ##

help() {
  local errcode updated
	errcode="${1:-2}"
	updated="03 Oct 2024"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Bulk renames file extensions in the current diectory.

${green}Usage:${normal} $script <file-extension>

${orange}Example:${normal} $script JPG
* Supported extensions: AVI, BAK, FLV, GIF, HTM, HTML, JPEG, JPG, MP3, MP4, MPG, MPEG, PDF, PNG, TXT, WMV
* Input file extensions are not case sensitive.
* Any combination of upper and lower case are acceptable. Changed file extensions will be lowercase.
_HELP_
  exit "$errcode"
}

rename_extension() {
  local ext="$1"
  # Rename file extensions based on the passed argument
  shopt -s nocasematch
  case $ext in
    avi )
      echo "Renaming .$ext files to .avi"
      rename -v 's/\.AVI$/\.avi/i' ./* ;;
    bak )
      echo "Renaming .$ext files to .bak"
      rename -v 's/\.BAK$/\.bak/i' ./* ;;
    flv )
      echo "Renaming .$ext files to .flv"
      rename -v 's/\.FLV$/\.flv/i' ./* ;;
    gif )
      echo "Renaming .$ext files to .gif"
      rename -v 's/\.GIF$/\.gif/i' ./* ;;
    htm|html )
      echo "Renaming .$ext files to .html"
      rename -v 's/\.HTML?$/\.html/i' ./* ;;
    jpeg|jpg )
      echo "Renaming .$ext files to .jpg"
      rename -v 's/\.JPE?G$/\.jpg/i' ./* ;;
    mp3 )
      echo "Renaming .$ext files to .mp3"
      rename -v 's/\.MP3$/\.mp3/i' ./* ;;
    mp4 )
      echo "Renaming .$ext files to .mp4"
      rename -v 's/\.MP4$/\.mp4/i' ./* ;;
    mpg|mpeg )
      echo "Renaming .$ext files to .mpg"
      rename -v 's/\.MPE?G$/\.mpg/i' ./* ;;
    pdf )
      echo "Renaming .$ext files to .pdf"
      rename -v 's/\.PDF$/\.pdf/i' ./* ;;
    png )
      echo "Renaming .$ext files to .png"
      rename -v 's/\.PNG$/\.png/i' ./* ;;
    txt )
      echo "Renaming .$ext files to .txt"
      rename -v 's/\.TXT$/\.txt/i' ./* ;;
    wmv )
      echo "Renaming .$ext files to .wmv"
      rename -v 's/\.WMV$/\.wmv/i' ./* ;;
    * )
      printf "%s %s is NOT a supported file extension.\n" "$RED_ERROR" "$ext" <&2
      shopt -u nocasematch
      help 1
  esac
  shopt -u nocasematch
}

main() {
  if [[ "$#" -eq 0 ]]; then
    printf "\%s Must provide a file extension to be renamed.\n" "$RED_ERROR" <&2
    help 2
  else
    extension="$1"
    printf "Bulk renames file extensions in the current diectory.\n"
    rename_extension "$extension"
  fi
  leave "$script v$version"
}

## Execution ##

main "$@"
