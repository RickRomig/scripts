#!/usr/bin/env bash
##########################################################################
# Script Name  : install-terminator
# Description  : Installs the Terminator terminal emulator from repos.
# Dependencies : None
# Arguments    : -c -h -i -r (See help function)
# Author       :Copyright (C) 2020 Richard B. Romig, 14 Dec 2020
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 14 Dec 2020
# Updated      : 09 May 2024
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="6.9/2413-"
readonly _updated="09 May 2024"
readonly term_cfg_d=$HOME"/.config/terminator"

## Functions ##

help() {
  local errcode="${1:-2}"
  cat << END_HELP
${orange}Usage:${normal} $_script [-c] [-h] [-i] [-r]
${green}OPTIONS:${normal}
  -c  Writes custom configuration file.
  -h  Displays help text.
  -i  Installs Terminator & configuration files.
  -r  Removes Terminator & configuration files.
${bold}NOTES:${normal}
  1. Script will not overwrite Terminator config for BunsenLabs installation.
     Configuration changes should be made through the Preferences menu.
  2. For Debian and Debian-based distributions (Antix, MX Linux, LMDE),
     Terminator will be configured as a login shell.
$_script v$_version ($_updated)
END_HELP
  exit "$errcode"
}

remove_terminator() {
  local term_cfg_d_bu="{$HOME}/backup/terminator"
  sudo apt-get purge terminator
  find "$HOME/.config/" -maxdepth 2 -type d -name "terminator" -exec rm -rf {} \;
  [[ -d "$term_cfg_d" ]] && rm -rf "$term_cfg_d"
  [[ -d "$term_cfg_d_bu" ]] && rm -rf "$term_cfg_d_bu"
  echo "Terminator and its configuration files have been removed."
}

install_terminator() {
  sudo apt-get update -yyq
  sudo apt-get install terminator -yy
  if bunsenlabs; then
    echo "Terminator $(terminator_version) installed."
    echo "BunsenLabs uses its own profiles based on the version of the distribution."
  else
    apply_config
    echo "terminator $(terminator_version) installed with configuration file."
  fi
}

apply_config() {
  local repsoitory="configs/raw/branch/main/terminator"
  local term_cfg="config"
  [[ -d "$term_cfg_d" ]] || mkdir -p "$term_cfg_d"
  curl -so "$term_cfg_d/$term_cfg" "$Gitea_URL/$repsoitory/$term_cfg"
  is_debian && sed -i '/login_shell/s/False/True/' "$term_cfg_d/config"
}

terminator_version() {
  dpkg -l | awk '$2 == "terminator" {print $3}' | sed 's/[+-].*//'
}

## Execution ##

echo -e  "Installs or removes Terminator with config and Cascadia Code font.\n"

noOpt=1
optstr=":chir"
while getopts "$optstr" opt; do
  case "$opt" in
    c )
      exists terminator || leave "Terminator is not installed."
      if bunsenlabs; then
        echo "Terminator configuration for BunsenLabs was not overwritten."
        leave "Configuration changes should be made through the Preferences menu."
      else
        apply_config
        leave "Terminator configuration file written."
      fi
    ;;
    h )
      help 0
    ;;
    i )
      exists terminator && leave "Terminator $(terminator_version) is already installed."
      sudo_login 2
      install_terminator
    ;;
    r )
      exists terminator || leave "Terminator is not installed."
      sudo_login 2
      remove_terminator
    ;;
    ? )
      echo "${lightred}ERROR:${normal} Invalid option -${OPTARG}" >&2
      help 2
    esac
  	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
leave "$_script v$_version"
