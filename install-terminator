#!/usr/bin/env bash
##########################################################################
# Script Name  : install-terminator
# Description  : Installs the Terminator terminal emulator from repos.
# Dependencies : curl
# Arguments    : See help function
# Author       : Copyright (C) 2020 Richard B. Romig, MosfaNet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 14 Dec 2020
# Updated      : 24 Feb 2025
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="6.13.25055"
readonly term_cfg_d=$HOME"/.config/terminator"

## Functions ##

help() {
  local errcode updated
	errcode="${1:-2}"
	updated="24 Feb 2025"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs/Removes/Configures Terminator terminal emulator

${orange}Usage:${normal} $script [OPTION]
${green}OPTIONS:${normal}
  -c  Apply configuration file.
  -h  Show this help message and exit.
  -i  Install Terminator & configuration files.
  -r  Remove Terminator & configuration files.
${bold}NOTES:${normal}
  1. Script will not overwrite Terminator config for BunsenLabs installations.
     Configuration changes should be made through Terminator Preferences.
  2. For Debian and Debian-based distributions (Antix, MX Linux, LMDE),
     Terminator will be configured as a login shell.
_HELP_
  exit "$errcode"
}

terminator_version() {
  dpkg -l terminator | awk '/ii/ {print $3}' | sed 's/-.*//'
}

apply_config() {
  local localip repsoitory term_cfg
	localip=$(local_ip)
  term_cfg="config"
  check_package curl
  [[ -d "$term_cfg_d" ]] || mkdir -p "$term_cfg_d"
  printf "Applying Terminator configuration...\n"
  if [[ "$localip" == "16" ]]; then
    repository="$HOME/gitea/configs/terminator"
    cp -v "$repository$term_cfg" "$term_cfg_d/"
  else
    repsoitory="configs/raw/branch/main/terminator"
    curl -so "$term_cfg_d/$term_cfg" "$GITEA_URL/$repsoitory/$term_cfg"
  fi
  is_debian && sed -i '/login_shell/s/False/True/' "$term_cfg_d/config"
  printf "Terminator configuration file applied.\n"
}

install_terminator() {
  printf "Installing terminator...\m"
  sudo apt-get -yq update
  sudo apt-get install =y terminator
  if bunsenlabs; then
    printf "Terminator %s installed.\n" "$(terminator_version)"
    printf "BunsenLabs uses its own profiles based on the version of the distribution.\n"
  else
    apply_config
    printf "terminator %s installed with configuration file.\n" "$(terminator_version)"
  fi
}

remove_terminator() {
  local term_cfg_d_bu="{$HOME}/backup/terminator"
  printf "Removing terminator %s and configuration files...\n" "$(terminator_version)"
  sudo apt-get purge terminator
  find "$HOME/.config/" -maxdepth 2 -type d -name "terminator" -exec rm -rf {} \;
  [[ -d "$term_cfg_d" ]] && rm -rf "$term_cfg_d"
  [[ -d "$term_cfg_d_bu" ]] && rm -rf "$term_cfg_d_bu"
  printf "Terminator and its configuration files have been removed.\n"
}

main() {
  local noOpt opt optstr
  noOpt=1
  optstr=":chir"
  while getopts "$optstr" opt; do
    case "$opt" in
      c )
        exists terminator || leave "Terminator is not installed."
        if bunsenlabs; then
          printf "Terminator configuration for BunsenLabs was not overwritten.\n"
          printf "Configuration changes should be made through the Terminator Preferences menu.\n"
        else
          apply_config
        fi
      ;;
      h )
        help 0
      ;;
      i )
        exists terminator && leave "Terminator $(terminator_version) is already installed."
        sudo_login 2
        install_terminator
      ;;
      r )
        exists terminator || leave "Terminator is not installed."
        sudo_login 2
        remove_terminator
      ;;
      ? )
      printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
      help 2
      esac
      noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  leave "$script v$version"
}

## Execution ##

main "$@"
