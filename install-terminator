#!/usr/bin/env bash
##########################################################################
# Script Name  : install-terminator
# Description  : Installs the Terminator terminal emulator from repos.
# Dependencies : curl
# Arguments    : See help function
# Author       : Copyright (C) 2020 Richard B. Romig, MosfaNet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 14 Dec 2020
# Updated      : 23 Oct 2025
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Global Variables ##

readonly script="${0##*/}"
readonly version="7.1.25296"

## Functions ##

help() {
	local errcode="${1:-2}"
	local -r updated="23 Oct 2025"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs/Removes/Configures Terminator terminal emulator

${orange}Usage:${normal} $script [-chir]
${green}OPTIONS:${normal}
  -c  Apply configuration file.
  -h  Show this help message and exit.
  -i  Install Terminator & configuration files.
  -r  Remove Terminator & configuration files.
${bold}NOTES:${normal}
  1. Script will not overwrite Terminator config for BunsenLabs installations. Configuration changes should be made through Terminator Preferences.
  2. For Debian and Debian-based distributions (Antix, MX Linux, LMDE),Terminator will be configured as a login shell.
_HELP_
  exit "$errcode"
}

terminator_version() {
  dpkg -l terminator | awk '/ii/ {print $3}' | sed 's/-.*//'
}

install_terminator() {
  printf "Installing terminator...\n"
  sudo_login 2
  sudo apt-get -yq update
  sudo apt-get install -y terminator
  exists terminator || die "Terminator installation failed." 1
  printf "Terminator %s installed.\n" "$(terminator_version)"
  if bunsenlabs; then
    printf "BunsenLabs uses its own profiles based on the version of the distribution.\n"
  else
    apply_config
    printf "Terminator %s configured.\n" "$(terminator_version)"
  fi
}

remove_terminator() {
  printf "Removing terminator %s and configuration files...\n" "$(terminator_version)"
  sudo_login 2
  sudo apt-get purge terminator
  [[ -L ~/.config/terminator/config ]] && unlink ~/.config/terminator/config
  find ~/.config/ -maxdepth 2 -type d -name terminator -exec rm -rf {} \;
  printf "Terminator and its configuration files have been removed.\n"
}

apply_config() {
  local repository=~/Downloads/ccnfigs/config_dir
  [[ -d ~/gitea/configs/config_dir ]] && repository=~/gitea/configs/config_dir/
  if ! [[ -d "$repository" ]]; then
    printf "%s Cloned repository not found!\n" "$RED_WARNING" >&2
    return
  fi
  [[ -d /.config/terminator ]] && mkdir -p /.config/terminator
  printf "Applying Terminator configuration...\n"
  if is_debian; then
    [[ -f ~/.config/terminator/config ]] && rm ~/.config/terminator/config
    [[ -d  ~/gitea/configs/terminator ]] && ln -s ~/gitea/configs/terminator/config ~/.config/terminator/config
    [[ -d  ~/Downloads/configs/terminator ]] && ln -sv ~/Downloads/configs/terminator/config ~/.config/terminator/config
  else
    cp -v "$repository"/config ~/.config/terminator
    sed -i '/login_shell/s/True/False/' ~/.config/terminator/config
  fi
  printf "Terminator configuration file applied.\n"
}

main() {
  local noOpt opt optstr
  noOpt=1
  optstr=":chir"
  while getopts "$optstr" opt; do
    case "$opt" in
      c )
        if exists terminator; then
          if bunsenlabs; then
            printf "Terminator configuration for BunsenLabs was not overwritten.\n"
            printf "Configuration changes should be made through the Terminator Preferences menu.\n"
          else
            apply_config
          fi
        else
          printf "Terminator is not installed.\nConfiguration cannot be applied.\n" >&2
        fi
        ;;
      h )
        help 0
        ;;
      i )
        if exists terminator; then
          printf "Terminator %s is installed.\nInstallation canceled.\n" "$(terminator_version)" >&2
        else
          install_terminator
        fi
        ;;
      r )
        if exists terminator; then
          remove_terminator
        else
          printf "Terminator is not installed.\nOperation canceled.\n" >&2
        fi
        ;;
      ? )
      printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
      help 2
    esac
    noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
