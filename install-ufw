#!/usr/bin/env bash
##########################################################################
# Script Name  : install-ufw
# Description  : Installs and configures the UFW firewall.
# Dependencies : None
# Arguments    : See help()
# Author       : Copyright (C) Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 05 Oct 2022
# Updated      : 06 Jun 2024
# Comments     : Install & remove for Deian-based systems only.
#              : UFW should already be installed on Linux Mint & LMDE.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="1.11.24158"
readonly _updated="06 Jun 2024"

## Functions ##

help() {
  errcode="${1:-2}"
  cat << END_HELP
Installs UFW on Debian, BunsenLabs, and MX Linux systems.
UFW/GUFW is installed by default in Linux Mint, LMDE, and Ubuntu.
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS${normal}
  -a  Add rules for CUPS and SSH
  -d  Disable UFW
  -e  Enable UFW
  -i  Install UFW on a Debian-based system
  -r  Remove UFW from a Debian-based system
  -s  UFW status
END_HELP
  printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
  exit "$errcode"
}

install_ufw() {
  printf "Installing UFW (Uncomplicated Firewall)...\n"
  sudo apt-get install ufw -yy
}

remove_ufw() {
  printf "Removing UFW (Uncomplicated Firewall) version %s...\n" "$(ufw_version)"
  sudo ufw disable
  sudo  apt-get purge ufw
}

add_rules() {
  printf "Adding rules for CUPS and SSH...\n"
  sudo sed -i '/IPV6=no/s/no/yes/' /etc/default/ufw
  sudo ufw allow 631   # CUPS 631
  sudo ufw allow SSH   # SSH 22/tcp
}

enable_ufw() {
  printf "Enabling UFW...\n"
  sudo ufw enable
  sudo ufw status verbose
}

disable_ufw() {
  printf "Disabling UFW...\n"
  sudo ufw disable
  sudo ufw status
}

ufw_active() {
  sudo ufw status | grep -qw active && return "$TRUE" || return "$FALSE"
}

ufw_version() {
  /usr/sbin/ufw version | awk '/ufw/ {print $NF}'
}

debian_system() {
  codename=$(lsb_release --codename --short)
  case "$codename" in
    bookworm|bullseye )
      return "$TRUE"
    ;;
    * )
      return "$FALSE"
  esac
}

## Execution ##

noOpt=1
optstr=":adehirs"
while getopts "$optstr" opt; do
  case "$opt" in
    a )
      dpkg -l | grep -qw ufw || leave "UFW is not installed."
      sudo_login 2
      add_rules
      ufw_active || enable_ufw
      printf "Rules for CUPS and SSH added.\n"
    ;;
    d )
      dpkg -l | grep -qw ufw || leave "UFW is not installed."
      sudo_login 2
      ufw_active || leave "UFW $(ufw_version) is already disabled."
      disable_ufw
    ;;
    e )
      dpkg -l | grep -qw ufw || leave "UFW is not installed."
      sudo_login 2
      ufw_active && leave "UFW $(ufw_version) is already enabled."
      enable_ufw
    ;;
    h )
      help 0
    ;;
    i )
      debian_system || die "Not a Debian system."
      dpkg -l | grep -qw ufw && leave "UFW $(ufw_version) is already installed."
      sudo_login 2
      install_ufw
      add_rules
      enable_ufw
      printf "UFW %s installed and configured.\n" "$(ufw_version)"
    ;;
    r )
      debian_system || die "Not a Debian-based system."
      dpkg -l | grep -qw ufw || leave "UFW is not installed."
      sudo_login 2
      remove_ufw
    ;;
    s )
      dpkg -l | grep -qw ufw || leave "UFW is not installed."
      sudo_login 2
      printf "UFW %s\n" "$(ufw_version)"
      sudo ufw status numbered
    ;;
    ? )
      printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
      help 2
  esac
  noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
leave "$_script v$_version"
