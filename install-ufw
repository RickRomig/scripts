#!/usr/bin/env bash
##########################################################################
# Script Name  : install-ufw
# Description  : Installs and configures the UFW firewall.
# Dependencies : None
# Arguments    : See help()
# Author       : Copyright (C) Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 05 Oct 2022
# Updated      : 04 May 2025
# Comments     : Install & remove for Deian-based systems only.
#              : UFW should already be installed on Linux Mint & LMDE.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="1.15.25124"

## Functions ##

help() {
  local errcode updated
	errcode="${1:-2}"
	updated="24 Feb 2025"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs UFW on Debian, BunsenLabs, and MX Linux systems.
UFW/GUFW is installed by default in Linux Mint, LMDE, and Ubuntu.

${green}Usage:${normal} $script [OPTION]

${orange}Available options:${normal}
  -a  Add rules for CUPS and SSH (XRDP if installed)
  -d  Delete rules
  -e  Toggle Enable/Disable UFW
  -h  Show this help message and exit
  -i  Install UFW on a Debian-based system
  -n  Add New rules
  -r  Remove UFW from a Debian-based system
  -s  UFW Status
_HELP_
  exit "$errcode"
}

exists_xrdp() {
  dpkg -l xrdp > /dev/null 2>&1 && return "$TRUE" || return "$FALSE"
}

install_ufw() {
  printf "Installing UFW (Uncomplicated Firewall)...\n"
  sudo apt-get install ufw -yy
}

remove_ufw() {
  printf "Removing UFW (Uncomplicated Firewall) version %s...\n" "$(ufw_version)"
  sudo ufw reset  # disable UFW and delete all active rules
  sudo  apt-get purge ufw
}

add_rules() {
  printf "Adding rules for CUPS, SSH, and XRDP...\n"
  sudo sed -i '/IPV6=no/s/no/yes/' /etc/default/ufw
  sudo ufw allow 631   # CUPS 631
  sudo ufw allow SSH   # SSH 22/tcp
  exists_xrdp && sudo ufw allow 3389/tcp  # XRDP
}

new_rules() {
  local rule="deny foo"
  sudo ufw status
  printf "Add new rules in the following format:\n"
  printf "allow/deny <protocol> or allow/deny <port-number>\n"
  while [[ "$rule" != "" ]]; do
    read -rp "Rule to be added (done to exit): " rule
    [[ "$rule" != "" ]] && sudo ufw "$rule"
  done
}

delete_rules() {
  local rule="allow foo"
  sudo ufw status numbered
  while [[ "$rule" != "" ]]; do
    read -rp "Rule to be removed (by number): " rule
    [[ "$rule" != "" ]] && sudo ufw delete "$rule"
  done
}

enable_ufw() {
  printf "Enabling UFW...\n"
  sudo ufw enable
  sudo ufw status verbose
}

disable_ufw() {
  printf "Disabling UFW...\n"
  sudo ufw disable
  sudo ufw status
}

ufw_active() {
  sudo ufw status | grep -qw active && return "$TRUE" || return "$FALSE"
}

ufw_version() {
  /usr/sbin/ufw version | awk '/ufw/ {print $NF}'
}

debian_system() {
  local codename
  codename=$(lsb_release --codename --short)
  case "$codename" in
    bookworm|bullseye|boron )
      return "$TRUE"
    ;;
    * )
      return "$FALSE"
  esac
}

main() {
  local noOpt opt optstr
  noOpt=1
  optstr=":adehinrs"
  while getopts "$optstr" opt; do
    case "$opt" in
      a )
        dpkg -l | grep -qw ufw || leave "UFW is not installed."
        sudo_login 2
        add_rules
        ufw_active || enable_ufw
        printf "Rules for CUPS and SSH added.\n"
      ;;
      d )
        dpkg -l | grep -qw ufw || leave "UFW is not installed."
        sudo_login 2
        delete_rules
      ;;
      e )
        dpkg -l | grep -qw ufw || leave "UFW is not installed."
        sudo_login 2
        if ufw_active; then
          printf "UFW %s is enabled.\n" "$(ufw_version)"
          defult_no "Disable UFW?" && disable_ufw
        else
          enable_ufw
        fi
      ;;
      h )
        help 0
      ;;
      i )
        debian_system || die "Not a Debian system." 1
        dpkg -l | grep -qw ufw && leave "UFW $(ufw_version) is already installed."
        sudo_login 2
        install_ufw
        add_rules
        enable_ufw
        printf "UFW %s installed and configured.\n" "$(ufw_version)"
      ;;
      n )
        dpkg -l | grep -qw ufw || leave "UFW is not installed."
        sudo_login 2
        new_rules
      ;;
      r )
        debian_system || die "Not a Debian-based system."
        dpkg -l | grep -qw ufw || leave "UFW is not installed."
        sudo_login 2
        remove_ufw
      ;;
      s )
        dpkg -l | grep -qw ufw || leave "UFW is not installed."
        sudo_login 2
        printf "UFW %s\n" "$(ufw_version)"
        sudo ufw status numbered
      ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
    noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
