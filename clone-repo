#!/usr/bin/env bash
##########################################################################
# Script Name  : clone-repo
# Description  : Clone a git repository from local Gitea server
# Dependencies : git
# Arguments    : None
# Author       : Copyright (C) 2022, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 19 Oct 2022
# Updated      : 18 Jun 2025
# Comments     : clone-repo() is part of functionlib
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Functions ##

check_repo() {
  local dl_dir git_repo
  git_repo="$1"
  dl_dir="$HOME/Downloads"
  if [[ -d "$dl_dir/$git_repo" ]]; then
    if [[ $(find "$dl_dir/$git_repo" -type f) ]]; then
      printf "%s is not empty. Updating the directory...\n" "$dl_dir/$git_repo"
      pushd "$dl_dir/$git_repo" || die "pushd failed"
      git pull
      popd || die "popd failed"
    else
      clone_repo "$git_repo"
    fi
  else
    clone_repo "$git_repo"
  fi
}

main() {
  local array_length index _repo repos script version
  script="${0##*/}"
  version="3.9.25169"

  check_package git
  printf "Clone a repository from the local Gitea server.\n\n"
  printf "Available repositories:\n"
  COLUMNS=40
  PS3="Choose a repository to clone: "
  repos=( scripts configs i3wm-debian homepage gitea-server fnloc fnloc-win )
  array_length="${#repos[@]}"
  select _repo in "${repos[@]}" "Exit"; do
	  if (( REPLY == 1 + array_length )); then
		  printf "Exiting. No repository selected or cloned.\n"
		  break
	  elif (( REPLY > 0 && REPLY <= ${#repos[@]} )); then
      index=$(( REPLY - 1 ))
      printf "Cloning the %s repository...\n" "${repos[index]}"
		  check_repo "${repos[index]}"
		  break
	  else
      array_length=$(( array_length + 1 ))
		  printf "Invalid option. Choose 1 - %d\n" "$array_length"
	  fi
  done
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
