#!/usr/bin/env bash
##########################################################################
# Script Name  : sync-installs
# Description  : Updates installation directories on HP 6005
# Dependencies : rsync
# Arguments    : None
# Author       : Copyright (C) 2020, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 07 Jun 2020
# Updated      : 15 Oct 2024
# Comments     : rsysnc excludes ~/bin/.git/
# TODO (Rick)  : Is this stript still serve a purpose?
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global variables ##

SECONDS=0

## Functions ##

copy_config_files() {
  local cfg_dir cfg_defaults cinnamon_keys
  cfg_defaults="$1"
  cfg_dir=$HOME"/.config"
  cinnamon_keys=$HOME"/.config/keybindings-backup.dconf"
  printf "\n%sUpdating bat, micro, terminator config files ...%s\n" "$orange" "$normal"
  cp -puv "$cfg_dir/bat/config" "$cfg_defaults/bat/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$cfg_dir/micro/bindings.json" "$cfg_defaults/micro/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$cfg_dir/micro/settings.json" "$cfg_defaults/micro/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$cfg_dir/VSCodium/User/settings.json" "$cfg_defaults/VSCodium/User/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$cfg_dir/terminator/config" "$cfg_defaults/terminator/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$cfg_dir/kitty/kitty.conf" "$cfg_defaults/kitty/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$cfg_dir/kitty/bindings.list" "$cfg_defaults/kitty/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$HOME/.bluefish/rcfile-2.0" "$cfg_defaults/bluefish/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$HOME/.bash_aliases" "$cfg_defaults/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$HOME/.bashrc" "$cfg_defaults/"  | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$HOME/.profile" "$cfg_defaults/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  cp -puv "$cfg_dir/git/config" "$cfg_dir/git/credentials" "$cfg_defaults/git/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
  [[ -f "$cinnamon_keys" ]] && cp -puv "$cinnamon_keys" "$cfg_defaults/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
}

sync_to_server() {
  local cfg_defaults iso_src remote_dest svr_ip
  svr_ip="$1"
  cfg_dir="$2"
  iso_src=$HOME"/Downloads/ISO"
  remote_dest="/data/installation"
  echo $'\n'$"${orange}Synchronizing scripts...${normal}"
  rsync -avzh --delete --exclude '.git' "$HOME/bin/" "$LOCALNET.$svr_ip:$remote_dest/bin/"
  echo $'\n'$"${orange}Synchronizing template files...${normal}"
  rsync -avzh --delete "$HOME/Templates/" "$LOCALNET.$svr_ip:$remote_dest/Templates/"
  echo $'\n'$"${orange}Synchronizing configuration files...${normal}"
  rsync -avzh --delete "$cfg_dir/" "$LOCALNET.$svr_ip:$remote_dest/configs/"
  echo $'\n'$"${orange}Synchronizing Packages directory ...${normal}"
  rsync -avzh --delete "$HOME/Downloads/Packages/" "$LOCALNET.$svr_ip:$remote_dest/Packages/"
  echo $'\n'$"${orange}Synchronizing ISO directory ...${normal}"
  rsync -avzh --delete "$iso_src/" "$LOCALNET.$svr_ip:$remote_dest/ISO/"
}

main() {
  local cfg_defaults local_host main_host server_host server_ip script version
  script=$(basename "$0")
  version="3.0.24289"
  cfg_default_dir=$HOME"/Documents/mosfanet/configs/defaults"
  server_ip="11"
  # Hostnames
  local_host="${HOSTNAME:-$(hostname)}"
  main_host="hp-800g2-sff"
  server_host="hp-6005"

  check_package rsync
  # Ensure script is being run from the hp-800g2-sff (10)
  [[ "$local_host" != "$main_host" ]] && die "$script must be run from the $main_host."
  clear
  box "${orange}$script v$version${normal}"
  printf "Synchronizes installation scripts, configuration files and packages with %s\n" "$server_host"
  copy_config_files "$cfg_default_dir"
  if ping -c 3 "$LOCALNET.$server_ip" > /dev/null 2>&1; then
    sync_to_server "$server_ip" "$cfg_default_dir"
    printf "\nLocal installation files updated and synchronized with %s in %s\n" "$server_host" "$(format_time $SECONDS)"
    leave "Installation Data Synchronization complete."
  else
    printf "\nConfiguration files copied to %s\n" "$cfg_default_dir"
    die "$server_host is not on line. Check network connections." 1
  fi
}

## Execution ##

main "$@"
