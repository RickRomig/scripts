#!/usr/bin/env bash
##########################################################################
# Script Name  : sync-installs
# Description  : Updates installation directories on HP 6005
# Dependencies : rsync
# Arguments    : None
# Author       : Copyright (C) 2020, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 07 Jun 2020
# Updated      : 24 Jun 2024
# Comments     : rsysnc excludes ~/bin/.git/
# TODO (Rick)  : Is this stript still serve a purpose?
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="2.17.24176"

# Hostnames
readonly lhost="${HOSTNAME:-$(hostname)}"
readonly mhost="hp-800g2-sff"
readonly fhost="hp-6005"
readonly svr_ip="11"

# Direectories and files
readonly cfg_dir=$HOME"/.config"
readonly cfg_defaults=$HOME"/Documents/mosfanet/configs/defaults"
readonly cinnamon_keys=$HOME"/.config/keybindings-backup.dconf"
readonly iso_src=$HOME"/Downloads/ISO"
readonly remote_dest="/data/installation"

## Execution ##

check_package rsync

# Ensure script is being run from the hp-800g2-sff (10)
[[ "$lhost" != "$mhost" ]] && die "$_script must be run from the $mhost."

# Start timer
SECONDS=0

clear
echo "${orange}$_script v$_version${normal}"
echo "Synchronizes installation scripts, configuration files and packages with $fhost"

# Copy config files to default configs folder
echo $'\n'$"${orange}Updating bat, micro, terminator config files ...${normal}"
cp -puv "$cfg_dir/bat/config" "$cfg_defaults/bat/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$cfg_dir/micro/bindings.json" "$cfg_defaults/micro/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$cfg_dir/micro/settings.json" "$cfg_defaults/micro/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$cfg_dir/VSCodium/User/settings.json" "$cfg_defaults/VSCodium/User/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$cfg_dir/terminator/config" "$cfg_defaults/terminator/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$cfg_dir/kitty/kitty.conf" "$cfg_defaults/kitty/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$cfg_dir/kitty/bindings.list" "$cfg_defaults/kitty/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$HOME/.bluefish/rcfile-2.0" "$cfg_defaults/bluefish/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$HOME/.bash_aliases" "$cfg_defaults/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$HOME/.bashrc" "$cfg_defaults/"  | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$HOME/.profile" "$cfg_defaults/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
cp -puv "$cfg_dir/git/config" "$cfg_dir/git/credentials" "$cfg_defaults/git/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"
[[ -f "$cinnamon_keys" ]] && cp -puv "$cinnamon_keys" "$cfg_defaults/" | awk -F"/" '{print "==> " $NF}' | sed "s/'$//"

# Sync scripts, configs, templates, & ISO files to /data/installations on remote server
if ping -c 3 "$localnet.$svr_ip" > /dev/null 2>&1; then
  echo $'\n'$"${orange}Synchronizing scripts...${normal}"
  rsync -avzh --delete --exclude '.git' "$HOME/bin/" "$localnet.$svr_ip:$remote_dest/bin/"
  echo $'\n'$"${orange}Synchronizing template files...${normal}"
  rsync -avzh --delete "$HOME/Templates/" "$localnet.$svr_ip:$remote_dest/Templates/"
  echo $'\n'$"${orange}Synchronizing configuration files...${normal}"
  rsync -avzh --delete "$cfg_defaults/" "$localnet.$svr_ip:$remote_dest/configs/"
  echo $'\n'$"${orange}Synchronizing Packages directory ...${normal}"
  rsync -avzh --delete "$HOME/Downloads/Packages/" "$localnet.$svr_ip:$remote_dest/Packages/"
  echo $'\n'$"${orange}Synchronizing ISO directory ...${normal}"
  rsync -avzh --delete "$iso_src/" "$localnet.$svr_ip:$remote_dest/ISO/"
  echo $'\n'$"Synchronization completed in $(format_time $SECONDS)"
  leave "Installation Data Synchronization completed."
else
  echo $'\n'$"Local installation files updated and synchronized in $(format_time $SECONDS)"
  die "$fhost is not on line. Check network connections."
fi
