#!/usr/bin/env bash
##########################################################################
# Script Name  : sync2vm
# Description  : Synchronize .bash_aliases, ~/bin to VM
# Dependencies : rsync
# Arguments    : none
# Author       : Copyright (C) 2022,Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com
# Created      : 08 Feb 2022
# Updated      : 11 Oct 2024
# Comments     : Run frmo KVM/QEMU VM on 192.168.122.0 network
#              : Copy script to ~/.local/bin on virtual machine.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Functions ##

transfer_status() {
  local xfr_status="$1"
  # Exit script if transfer fails.
  (( xfr_status != 0 )) && die "A transfer failed! Check network status." 1
}

sync_script() {
  local exit_status gateway_ip
  gateway_ip="${LOCALNET.1:-192.168.122.1}"
	printf "\n%sSyncing .bash_aliases ...%s\n" "$orange" "$normal"
	rsync -avh --delete rick@"$gateway_ip":.bash_aliases "$HOME/"
	exit_status="$?"
	transfer_status "$exit_status"
	printf "\n%sSyncing bin directory ...%s\n" "$orange" "$normal"
	rsync -avh --delete --exclude '.git' rick@"$gateway_ip":bin/ "$HOME/bin/"
	exit_status="$?"
	transfer_status "$exit_status"
  printf "\n%sSyncing .local/share/doc...%s\n" "$orange" "$normal"
  rsync -avzh --delete rick@"$gateway_ip":.local/share/doc/ "$HOME"/.local/share/doc/
  exit_status="$?"
  transfer_status "$exit_status"
}

main() {
  local script version
  script=$(basename "$0")
  version="2.0.24285"
  [[ "$LOCALNET" != "192.168.122" ]] && die "Must be run from a KVM/QEMU virtual machine." 1
  check_package rsync
  SECONDS=0
  box "$script v$version"
  sync_script
  box "All directories synced!" "-"
  leave "Script completed in $(format_time $SECONDS)"
}

## Execution ##

main "$@"
