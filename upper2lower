#!/usr/bin/env bash
###############################################################################
# Script Name  : upper2lower
# Description  : Renames uppercase in filenames to lowercase
# Dependencies : rename
# Args         : --all, --help, filename(s) to be renamed
# Author       : Copyright (C) 2018, Richard Romig
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 2018
# Updated      : 07 Jun 2024
# Comment      :
# License      : GNU General Public License, version 2.0
##############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="3.2.24159"

## Functions ##

help() {
  local errcode="${1:-2}"
  cat << END_HELP
Renames filenames in the current directory to all lowercase.
${orange}Usage:${normal} $_script [option] [filename1] [filename2] ...
${orange}Options:${normal}
  --all    change all files in the current directory.
  --help   display this help message.
One or more filenames may be entered to be renamed.
$_script Filename	# Renames filename to lowercase
$_script Filename1 Filename2	# Renames Filename1 and Filename2 to lowercase
END_HELP
  exit "$errcode"
}

upper_lower() {
	local filename="$1"
	if [[ -f "$filename" ]]; then
		rename -v 'y/A-Z/a-z/' "$filename"
	else
		printf "%s %s not found.\n" "$red_error" "$filename" >&2
	fi
}

## Execution ##

if [[ $# -eq 0 ]]; then
	printf "%s No argument passed.\n" "$red_error" >&2
  help 1
elif [[ $# -eq 1 ]]; then
	case "$1" in
		"--all" )
			printf "Renaming all files in the current directory to lowercase.\n"
			find . -maxdepth 1 -type f -exec rename -v 'y/A-Z/a-z/' {} + | sed 's/\.\///g'
		;;
		"--help" )
			printf "%s help...\n" "$_script"
			help 0
		;;
		--* )
			printf "%s Invalid argument, %s\n" "$red_error"  "$1" >&2
			help 1
		;;
		* )
			file_name="$1"
			printf "Renaming %s to lowercase.\n" "$file_name"
			upper_lower "$file_name"
	esac
else
	printf "Renaming selected files to lowercase.\n"
	for file_name in "$@"; do
		upper_lower "$file_name"
	done
fi

leave "$_script v$_version"
