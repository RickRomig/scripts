#!/usr/bin/env bash
##########################################################################
# Script Name  : cronscripts
# Description  : Copies cron scripts to the appropriate directories.
# Dependencies : None
# Arguments    : [-a] [-b] [-d] [-f] [-h] [-l] [-p] [-s] [-u] [-y] [-z]
#              : (See help function.)
# Author       : Copyright (C) 2022, Richard B. Romig, 17 Feb 2022
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.3.5"
readonly _updated="29 Apr 2023"
readonly user_cron_path="$HOME/.local/bin/"
readonly opt_cron_path="/opt/bin/"
readonly clean_sed_path="/usr/share/misc/"

## Functions ##

cp_passwdsync() {
  local script_path="$HOME/bin/passwdsync.sh"
  [[ -d "$user_cron_path" ]] || mkdir -p "$user_cron_path"
  case "$localip" in
    10 )
      cp -pv "$script_path" "$user_cron_path"
    ;;
    * )
      no_copy "$script_path"
  esac
}

cp_hbarchive() {
  local script_path="$HOME/bin/hb-archive.sh"
  [[ -d "$user_cron_path" ]] || mkdir -p "$user_cron_path"
  case "$localip" in
    21 )
      cp -pv "$script_path" "$user_cron_path"
    ;;
    * )
      no_copy "$script_path"
  esac
}

cp_scriptarchive() {
  local script_path="$HOME/bin/scriptarchive.sh"
  [[ -d "$user_cron_path" ]] || mkdir -p "$user_cron_path"
  case "$localip" in
    10|11|12|13|14|15|16|17|19|20|21|23 )
      cp -pv "$script_path" "$user_cron_path"
    ;;
    * )
      no_copy "$script_path"  
  esac
}

cp_zbackup() {
	local script_path="$HOME/bin/z-backup"
	case "$localip" in
		11 )
		  user_in_sudo
		  [[ -d "$opt_cron_path" ]] || sudo mkdir -p "$opt_cron_path"
		  sudo cp -v "$script_path" "$opt_cron_path"
    ;;
		* )
			no_copy "$script_path"
	esac
}

cp_zdefrag() {
  local script_path="$HOME/bin/z-defrag"
  local anacron_path="/etc/cron.monthly/"
  case "$localip" in
    10|12|13|15|17|20|21|22|23|24 )
      user_in_sudo
      sudo cp -v "$script_path" "$anacron_path"
    ;;
    11|14|16|19 )
      user_in_sudo
      [[ -d "$opt_cron_path" ]] || sudo mkdir -p "$opt_cron_path"
      sudo cp -v "$script_path" "$opt_cron_path"
    ;;
    * )
      no_copy "$script_path"
  esac
}

cp_zupdate() {
  local script_path="$HOME/bin/z-update"
  local anacron_path="/etc/cron.weekly/"
  case "$localip" in
    10|12|13|15|17|20|21|22|23|24|25|227 )
      user_in_sudo
      sudo cp -v "$script_path" "$anacron_path"
    ;;
    11|14|16|19 )
      user_in_sudo
      [[ -d "$opt_cron_path" ]] || sudo mkdir -p "$opt_cron_path"
      sudo cp -v "$script_path" "$opt_cron_path"
    ;;
    * )
      no_copy "$script_path"
  esac
}

cp_updatelogsed() {
  local script_path="/home/rick/bin/files/updatelog.sed"
  case "$localip" in
    10|11|12|13|14|15|16|17|19|20|21|22|23|24|25|227 )
      user_in_sudo
      sudo cp -v "$script_path" "$clean_sed_path"
    ;;
    * )
      no_copy "$script_path"
  esac
}

cp_zytdlupdate() {
  local script_path="$HOME/bin/z-ytdlupdate"
  local anacron_path="/etc/cron.daily/"
  case "$localip" in
    10|17|20 )
      user_in_sudo
      sudo cp -v "$script_path" "$anacron_path"
    ;;
    * )
      no_copy "$script_path"
  esac
}

cp_ytdluplogsed() {
	local script_path="/home/rick/bin/files/ytdluplog.sed"
	case "$localip" in
		10|17|20 )
			user_in_sudo
			sudo cp -v "$script_path" "$clean_sed_path"
    ;;
		* )
			no_copy "$script_path"
	esac
}

no_copy() {
  local script="$1"
  printf "%s is not applicable to this system and was not copied.\n" "$(basename "$script")"
}

help() {
  local errcode="${1:-2}"
  cat << END_HELP
${green}Usage:${normal} $_script [OPTIONS]
${orange}OPTIONS:${normal}
  -a    Copy all scripts to the appropriate directories.
  -b    Copy HomeBank archive script.
  -d    Copy Defrag script.
  -f    Copy updatelog.sed file.
  -h    Display Help.
  -l    Copy Local Backup script.
  -p    Copy Password Database script.
  -s    Copy Script Archive script.
  -u    Copy Update script.
  -y    Copy YouTube-DL update script.
  -z    Copy ytdluplog.sed file.
  NOTE: Multiple arguments may be passed to the script.
END_HELP
  printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
  exit "$errcode"
}

## Execution ##

printf "Copies updated cron scripts to the appropriate directories.\n"

noOpt=1
localip="$(local_ip)"
optstr=":abdfhlpsuyz"
while getopts "$optstr" opt; do
  case "$opt" in
    a )
      cp_hbarchive
      cp_passwdsync
      cp_scriptarchive
      cp_zdefrag
      cp_zupdate
			cp_updatelogsed
      cp_zytdlupdate
			cp_ytdluplogsed
    ;;
    b )
      cp_hbarchive
    ;;
    d )
      cp_zdefrag
    ;;
    f )
      cp_updatelogsed
    ;;
    h )
      help 0
    ;;
		l )
			cp_zbackup
		;;
    p )
      cp_passwdsync
    ;;
    s )
      cp_scriptarchive
    ;;
    u )
      cp_zupdate
    ;;
    y )
      cp_zytdlupdate
    ;;
		z )
			cp_ytdluplogsed
		;;
    ? )
      printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
      help 2
  esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
exit
