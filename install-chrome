#!/usr/bin/env bash
###############################################################################
# Script Name  : install-chrome
# Description  : Download and install the Google Chrome browser
# Dependencies : wget
# Arguments    : -h -i -r (See help function)
# Author       : Copyright (C) 2019 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 18 Jul 2019
# Updated      : 24 Oct 2025
# Comments     : Google Chrome updates through apt from source list
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

readonly script="${0##*/}"
readonly version="5.1.25297"
readonly chrome_list="/etc/apt/sources.list.d/google-chrome.list"
readonly trusted_key="/usr/share/keyrings/google-chrome.gpg"

## Functions ##

help() {
	local errcode="${1:-2}"
	local -r updated="24 Oct 2025"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs, updated, or removes Google Chrome.

${green}Usage:${normal} $script [-hir]
${orange}Available options:${normal}
  -h  Show this help message and exit
  -i  Install Google Chrome
  -r  Remove Google Chrome
  -u  Update Google Chrome (normally through apt updates)
_HELP_
  exit "$errcode"
}

chrome_version() {
  google-chrome-stable --version
}

set_gpg_key() {
  local -r trusted_key_url="https://dl.google.com/linux/linux_signing_key.pub"
  if [[ -f "$trusted_key" ]]; then
    printf "%s already exists.\n" "${trusted_key##*/}"
    return
  fi
  printf "Setting the trusted key...\n"
  curl -fSsL "$trusted_key_url" | gpg --dearmor | sudo tee "$trusted_key"
}

set_src_list(){
  local -r source_list="deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main"
  if [[ -f "$chrome_list" ]]; then
		printf "%s already exists.\n" "${chrome_list##*/}"
		return
  fi
  printf "Creating the source list file...\n"
  echo "$source_list" | sudo tee "$chrome_list"
}

install_chrome() {
  set_gpg_key
  set_src_list
  printf "Updating apt cache and installing Google Chrome...\n"
  sudo apt update -qq
  sudo apt-get install -y google-chrome-stable
  exists google-chrome-stable || die "Google Chrome installation failed." 1
  printf "%s successfully installed.\n" "$(chrome_version)"
}

purge_chrome() {
  printf "Removing Google Chrome...\n"
  sudo apt purge google-chrome-stable
  [[ -f "$trusted_key" ]] && sudo rm -v "$trusted_key"
  [[ -f "$chrome_list" ]] && sudo rm -v "$chrome_list"
  find ~/ -type d -maxdepth 2 -name google-chrome -exec rm -rf {} \;
  printf "Google Chrome removed from this computer.\n"
}

main() {
  local noOpt opt optstr
  noOpt=1
  optstr=":hir"
  while getopts "$optstr" opt; do
    case "$opt" in
      h )
        help 0
        ;;
      i )
        if exists google-chrome-stable; then
          printf "%s is already installed.\n" "$(chrome_version)"
        else
          sudo_login 2
          check_package wget
          install_chrome
        fi
        ;;
      r )
        if exists google-chrome-stable; then
          sudo_login 2
          purge_chrome
        else
          printf "Google Chrome is not installed.\n"
        fi
        ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
	  noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
