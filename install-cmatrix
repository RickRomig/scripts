#!/usr/bin/env bash
###############################################################################
# Script Name  : install-cnatrix
# Description  : installs cmatrix
# Dependencies : none
# Arguments    : none
# Author       : Copyright (C) 2024, Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Updated      : 24 Feb 2025
# Comment      :
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

### Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="1.5.25055"

## Functions ##

install_matrix() {
  printf "Installing C-Matrix...\n"
  sudo apt-get update -qq
  sudo apt-get install cmatrix cmatrix-xfont -yy
  printf "C-Matrix installed.\n"
}

remove_matrix() {
  printf "Removing C-Matrix...\n"
  sudo apt-get remove cmatrix cmatrix-xfont -yy
  printf "C-Matrix removed.\n"
}

help() {
  local errcode updated
  errcode="${1:=-2}"
  updated="24 Feb 2025"
  cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs/Removes C-Matrix

${green}Usage:${normal} $script [OPTION]

${orange}Available options:${normal}
  -h  Show this help message and exit
  -i  Install C-Matrix
  -r  Remove C-Matrix
_HELP_
  exit "$errcode"
}

main() {
  local noOpt opt optstr
  noOpt=1
  optstr=":hir"
  while getopts "$optstr" opt; do
    case "$opt" in
      h )
        help 0
      ;;
      i )
        exists cmatrix && leave "C-Matrix already installed."
        sudo_login 2
        install_matrix
      ;;
      r )
        exists cmatrix || leave "C-Matrix is not installed."
        sudo_login 2
        remove_matrix
      ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
    noOpt=0
  done
  [[   "$noOpt" == 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"