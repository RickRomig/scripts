#!/usr/bin/env bash
###############################################################################
# Script Name  : new-config
# Description  : Sets up custom configurations for a new Linux system
# Dependencies : curl
# Arguments    : None
# Author       : Copyright (C) 2019, Richard B. Romig, 15 August 2019
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     :
# TODO (rick)  : Convert to gethopts
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091,SC2034

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.8.0"
readonly _updated="13 Oct 2023"
readonly cfg_bu_dir="$HOME/.config/backup"
readonly repo_path="configs/raw/branch/main/"

count=0

## Functions ##

check_dependencies() {
  check_package sshfs
}

dl_bashrc() {
  cp -pv "$HOME/.bashrc" "$cfg_bu_dir/.bashrc.orig"
  curl -so "$HOME/.bashrc" "$Gitea_URL/$repo_path/.bashrc"
  printf "Custom .bashrc installed in the home directory.\n"
  (( count++ ))
}

dl_aliases() {
  [[ -f "$HOME/.bash_aliases" ]] && cp -pv "$HOME/.bash_aliases" "$cfg_bu_dir/.bash_aliases.orig"
  curl -so "$HOME/.bash_aliases" "$Gitea_URL/$repo_path/.bash_aliases"
  printf "Custom .bash_aliases added to the home directory.\n"
  (( count++ ))
}

dl_profile() {
  [[ -f "$HOME/.profile" ]] && cp -pv "$HOME/.profile" "$cfg_bu_dir/.profile.orig"
  curl -so "$HOME/.profile" "$Gitea_URL/$repo_path/.profile"
  printf "Custom .profile installed in the home directory.\n"
  (( count++ ))
}

dl_nanorc() {
  [[ -d "$cfg_bu_dir/nano" ]] || mkdir -p "$cfg_bu_dir/nano"
  [[ -d "$HOME/.config/nano" ]] || mkdir -p "$HOME/.config/nano"
  # Backup  original .nanorc
  [[ -f "$HOME/.nanorc" ]] && cp -pv "$HOME/.nanorc" "$cfg_bu_dir/nano/nanorc.orig"
  [[ -f "$HOME/.config/nano/nanorc" ]] && cp -pv "$HOME/.config/nano/nanorc" "$cfg_bu_dir/nano/nanorc.orig"
  # Downlaod nanorc
  curl -so "$HOME/.config/nano/nanorc" "$Gitea_URL/$repo_path/nano/nanorc"
  # Remove old .nanorc files
  [[ -f "$HOME/.nanorc" ]] && rm "$HOME/.nanorc"
  [[ -f "$cfg_bu_dir/.nanorc" ]] && rm "$cfg_bu_dir/.nanorc"
  printf "Custom nanorc installed.\n"
  (( count++ ))
}

dl_face() {
  [[ -f "$HOME/.face" ]] && cp -pv "$HOME/.face" "$cfg_bu_dir/.face.orig"
  curl -so "$HOME/.face" "$Gitea_URL/$repo_path/.face"
  printf ".face added to the home directory.\n"
  (( count++ ))
}

dl_cinnamon_keybindings() {
  if is_cinnamon; then
    local cinnamon_keybindings="keybindings-backup.dconf"
    curl -so "$HOME/.config/$cinnamon_keybindings" "$Gitea_URL/$repo_path/$cinnamon_keybindings"
    dconf load /org/cinnamon/desktop/keybindings/ < "$HOME/.config/$cinnamon_keybindings"
    printf "Cinnamon Keybindings installed.\n"
    (( count++ ))
  else
    echo $'\n'$"The desktop environment is not Cinnamon." >&2
  fi
}

main() {
  while true; do
    clear
    echo "$_script v$_version ($_updated)"
    echo "Installs custom configuration files for new Linux installations."
    echo $'\n'$"${underline}${purple}Configuration files${normal}"
    COLUMNS=60
    options=( ".bashrc" ".bash_aliases" ".face" ".nanorc" ".profile" \
    "Cinnamon Keybindings" "All" "Quit" )
    PS3="Choose a configuration to install: "
    select opt in "${options[@]}"; do
      case "$REPLY" in
        1 )
          dl_bashrc
          anykey
          break
        ;;
        2 )
          dl_aliases
          anykey
          break
        ;;
        3 )
          dl_face
          anykey
          break
        ;;
        4 )
          dl_nanorc
          anykey
          break
        ;;
        5 )
          dl_profile
          anykey
          break
        ;;
        6 )
          dl_cinnamon_keybindings
          anykey
          break
        ;;
        7 )
          dl_bashrc
          dl_aliases
          dl_profile
          dl_nanorc
          dl_face
          dl_cinnamon_keybindings
          anykey
          break
        ;;
        8 )
          if (( count == 0 )); then
            printf "No custom configuration files installed.\n"
          else
            printf "Custom configurations installed.\n"
          fi
          break
        ;;
        * )
          printf "%s Invalid choice.%s Try again\n" "$lightred" "$normal" >&2
      esac
    done
  done
  leave "$_script v$_version ($_updated)"
}

## Execution ##

check_dependencies
[[ -d "$cfg_bu_dir" ]] || mkdir -p "$cfg_bu_dir"
main
