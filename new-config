#!/usr/bin/env bash
###############################################################################
# Script Name  : new-config
# Description  : Sets up custom configurations for a new Linux system
# Dependencies : curl
# Arguments    : See help function for available options.
# Author       : Copyright (C) 2019, Richard B. Romig, MosfaNet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 15 August 2019
# Comments     : 16 April 2024
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091,SC2034

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="1.1.24107"
readonly _updated="16 April 2024"
readonly cfg_bu_dir="$HOME/.config/backup"
readonly repo_path="configs/raw/branch/main/"
count=0

## Functions ##

dl_bashrc() {
  cp -pv "$HOME/.bashrc" "$cfg_bu_dir/.bashrc" | awk '{print "==> "$NF}'
  curl -so "$HOME/.bashrc" "$Gitea_URL/$repo_path/.bashrc"
  printf "Custom .bashrc installed in the home directory.\n"
  (( count++ ))
}

dl_aliases() {
  [[ -f "$HOME/.bash_aliases" ]] && cp -pv "$HOME/.bash_aliases" "$cfg_bu_dir/.bash_aliases" | awk '{print "==> "$NF}'
  curl -so "$HOME/.bash_aliases" "$Gitea_URL/$repo_path/.bash_aliases"
  printf "Custom .bash_aliases added to the home directory.\n"
  (( count++ ))
}

dl_profile() {
  [[ -f "$HOME/.profile" ]] && cp -pv "$HOME/.profile" "$cfg_bu_dir/.profile" | awk '{print "==> "$NF}'
  curl -so "$HOME/.profile" "$Gitea_URL/$repo_path/.profile"
  printf "Custom .profile installed in the home directory.\n"
  (( count++ ))
}

dl_nanorc() {
  [[ -d "$cfg_bu_dir/nano" ]] || mkdir -p "$cfg_bu_dir/nano"
  [[ -d "$HOME/.config/nano" ]] || mkdir -p "$HOME/.config/nano"
  [[ -f "$HOME/.nanorc" ]] && cp -pv "$HOME/.nanorc" "$cfg_bu_dir/nano/nanorc" | awk '{print "==> "$NF}'
  [[ -f "$HOME/.config/nano/nanorc" ]] && cp -pv "$HOME/.config/nano/nanorc" "$cfg_bu_dir/nano/nanorc" | awk '{print "==> "$NF}'
  curl -so "$HOME/.config/nano/nanorc" "$Gitea_URL/$repo_path/nano/nanorc"
  [[ -f "$HOME/.nanorc" ]] && rm "$HOME/.nanorc"
  [[ -f "$cfg_bu_dir/.nanorc" ]] && rm "$cfg_bu_dir/.nanorc"
  printf "Custom nanorc installed.\n"
  (( count++ ))
}

dl_face() {
  [[ -f "$HOME/.face" ]] && cp -pv "$HOME/.face" "$cfg_bu_dir/.face" | awk '{print "==> "$NF}'
  curl -so "$HOME/.face" "$Gitea_URL/$repo_path/.face"
  printf ".face added to the home directory.\n"
  (( count++ ))
}

dl_inputrc() {
  [[ -f "$HOME/.inputrc" ]] && cp -pv "$HOME/.inputrc" "$cfg_bu_dir/.inputrc" | awk '{print "==> "$NF}'
  curl -so "$HOME/.inputrc" "$Gitea_URL/$repo_path/.inputrc"
  printf ".inputrc added to the home directory.\n"
  (( count++ ))
}

dl_cinnamon_keybindings() {
  if is_cinnamon; then
    local cinnamon_keybindings="keybindings-backup.dconf"
    curl -so "$HOME/.config/$cinnamon_keybindings" "$Gitea_URL/$repo_path/$cinnamon_keybindings"
    dconf load /org/cinnamon/desktop/keybindings/ < "$HOME/.config/$cinnamon_keybindings"
    printf "Cinnamon Keybindings installed.\n"
    (( count++ ))
  else
    printf "\nThe desktop environment is not Cinnamon.\n" >&2
  fi
}

help() {
  errcode="${1:-2}"
  cat << _END_HELP_
Installs customized configurations files for new Linux installations.
Configurations are downloand from the Mosfanet Gitea server.

${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
  -a  .bash_aliases
  -b  .bashrc
  -c  Cinnamon keybindings
  -f  .face
  -h  help
  -i  .inputrc
  -n  nanorc
  -p  .profile
  Multiple options can be entered.
$_script v$_version, updated: $_updated
_END_HELP_
  exit "$errcode"
}

## Execution ##

check_package curl
[[ -d "$cfg_bu_dir" ]] || mkdir -p "$cfg_bu_dir"
noOpt=1
optstr=":abcfhinp"
while getopts "$optstr" opt; do
  case "$opt" in
    a )
      dl_bashrc
    ;;
    b )
      dl_aliases
    ;;
    c )
      dl_cinnamon_keybindings
    ;;
    f )
      dl_face
    ;;
    h )
      help 0
    ;;
    i )
      dl_inputrc
    ;;
    n )
      dl_nanorc
    ;;
    p )
      dl_profile
    ;;
    ? )
      printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
      help 2
  esac
  noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
if (( count == 0 )); then
  printf "No custom configuration files installed.\n"
else
  printf "Custom configurations installed.\n"
fi
leave "$_script v$_version"
