#!/usr/bin/env bash
#############################################################################
# Script Name  : corona-world
# Description  : Displays a world-wide chart of COVID-19 statistics
# Dependencies : curl, less, sed
# Arguments    :
# Author       : Copyright (C) 2020, Richard B. Romig, 05 May 2020
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     : Code: https://github.com/sagarkarira/coronavirus-tracker-cli
#              : Twitter: https://twitter.com/ekrysi
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091,SC2034

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.1.11"
readonly _updated="20 Dec 2023"
readonly url="https://corona-stats.online/?minimal=true"

today=$(date '+%d %b %Y'); readonly today
now=$(date '+%R %Z'); readonly now
tmp_file=$(mktemp) || die "Failed to create temporary file." 1

## Functions ##

# shellcheck disable=SC2317 # Don't warn about unreachable commands in this function
# ShellCheck may incorrectly believe that code is unreachable if it's invoked by variable name or in a trap.
cleanup() {
  [[ -f "$tmp_file" ]] && rm "$tmp_file"
}

corona_data() {
  tfile="$1"
  cfile=$HOME/"Documents/corona-world-$(date '+%F').txt"
  cp "$tfile" "$cfile"
  chmod 664 "$cfile"
  echo "Corona data copied to $cfile"
}

## Execution ##

trap cleanup EXIT

check_package curl

curl -s -o "$tmp_file" "$url"   # Download the data to a temporary file
sed -i 's/\x1b\[[0-9;]*m//g' "$tmp_file"    # Remove the color codes

clear
echo -n "${bold}${blue}World Corona (COVID-19) virus stats for "
echo "$today, $now EDT${normal}"
head -n -9 "$tmp_file"
# less "$tmp_file"
echo -e "Data downloaded $today, $now\n"
default_no "Save today's Corona data?" && corona_data "$tmp_file" || echo "Corona data not copied."
echo $'\n'$"${orange}Stay safe.  Wear a mask! Wash your hands! Practice physical distancing.${normal}"
leave "[$_script v$_version ($_updated)]"
