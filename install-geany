#!/usr/bin/env bash
##########################################################################
# Script Name  : install-geany
# Description  : Installs the Geany editor/IDE with themes.
# Dependencies : git
# Arguments    : -h -i -r -t -v (See help function)
# Author       : Copyright (C) 2022, Richard B. Romig,Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 25 Dec 2022
# Updated      : 16 Jun 2024
# Comments     : Geany does not write configuration files by default.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="2.4.24168"
readonly _updated="16 Jun 2024"
verbose_mode="$FALSE"

## Functions ##

help() {
  errcode="${1:-2}"
  cat << END_HELP
${orange}$_script${normal} $_version ($_updated)
Installs/Removes Geany text editor and themes

${green}Usage:${normal} $_script [OPTION]

${orange}Available options:${normal}
  -h  Display help
  -i  Install Geany
  -r  Remove Geany
  -t  Install themes
  -v  Enable verbose mode
END_HELP
  exit "$errcode"
}

geany_version() {
  geany --version | cut -d' ' -f2
}

clone_themes() {
  local theme_url colorscheme_d
  theme_url="https://github.com/geany/geany-themes.git"
  colorscheme_d="$HOME/.config/geany/colorschemes"
  [[ -d "$colorscheme_d" ]] || mkdir -p "$colorscheme_d"
  show_message "Cloning Geany themes..."
  git clone "$theme_url" "$tmp_dir"
  printf "Copying Geany colorschemes into %s\n" "$colorscheme_d"
  cp -v "$tmp_dir/colorschemes/*.conf" "$colorscheme_d/" | awk -F"/" '{print "=> " $NF}' | sed "s/'//"
  printf "Geany themes installed.\n"
}

install_geany() {
  show_message "Installing Geany from repositories..."
  sudo apt-get install geany libvte9 -yy
  clone_themes
  printf "Geany %s installed.\n" "$(geany_version)"
}

remove_geany() {
  local cfg_dir cfg_bu_dir
  cfg_dir="$HOME/.config/geany"
  cfg_bu_dir="$HOME/.config/backup/geany"
  show_message "Removing Geany ..."
  sudo apt remove geany -yy
  show_message "Removing Geany config files ..."
  [[ -d "$cfg_dir" ]] && rm -rf "$cfg_dir"
  show_message "Removing config backups..."
  [[ -d "$cfg_bu_dir" ]] && rm -rf "$cfg_bu_dir"
  printf "Geany and configuration files removed.\n"
}

show_message() {
	local message="$1"
	[[ "$verbose_mode" == "$TRUE" ]] && echo "$message"
}

# shellcheck disable=SC2317 # Don't warn about unreachable commands in this function
# ShellCheck may incorrectly believe that code is unreachable if it's invoked by variable name or in a trap.
cleanup() {
  [[ -d "$tmp_dir" ]] && rm -rf "$tmp_dir"
}

## Execution ##

noOpt=1
optstr=":hirtv"
while getopts "$optstr" opt; do
  case "$opt" in
    h )
      printf "%s help:\n" "$_script"
      help 0
    ;;
    i )
      exists geany && leave "Geany $(geany_version) is already installed."
      tmp_dir=$(mktemp -d) || die "Failed to create temporary directiory" 1
      trap cleanup EXIT
      sudo_login 2
      check_package git
      install_geany
    ;;
    r )
      exists geany || leave "Geany is not installed."
      sudo_login 2
      remove_geany
    ;;
    t )
      exists geany || leave "Geany is not installed."
      tmp_dir=$(mktemp -d) || die "Failed to create temporary directiory" 1
      trap cleanup EXIT
      check_package git
      clone_themes
    ;;
    v )
			verbose_mode="$TRUE"
			show_message "Verbose mode enabled."
    ;;
    ? )
      printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
      help 2
  esac
  noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
leave "$_script v$_version"
