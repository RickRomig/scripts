#!/usr/bin/env bash
##########################################################################
# Script Name  : install-geany
# Description  : Installs the Geany editor/IDE with themes.
# Dependencies : git
# Arguments    : -h -i -r -t -v (See help function)
# Author       : Copyright (C) 2022, Richard B. Romig,Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 25 Dec 2022
# Updated      : 17 Jul 2025
# Comments     : Geany does not write configuration files by default.
#              : Need to set options from within the program.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Global Variables ##

readonly script="${0##*/}"
readonly version="2.6.25198"
verbose_mode="$FALSE"

## Functions ##

help() {
	local errcode="${1:-2}"
	local updated="17 Jul 2025"
  cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs/Removes Geany text editor and themes

${green}Usage:${normal} $script [-h] [-vi] [-vit] [-vr] [-vt]

${orange}Available options:${normal}
  -h  Show this help message and exit.
  -i  Install Geany editor (user -it to install with themes).
  -r  Remove Geany editor.
  -t  Install Geany themes.
  -v  Enable verbose mode. If used, must precede other flags.
_HELP_
  exit "$errcode"
}

# shellcheck disable=SC2317 # Don't warn about unreachable commands in this function
# ShellCheck may incorrectly believe that code is unreachable if it's invoked by variable name or in a trap.
cleanup() {
  [[ -d "$tmp_dir" ]] && rm -rf "$tmp_dir"
}

geany_version() {
  geany --version | cut -d' ' -f2
}

clone_themes() {
  local -r theme_url="https://github.com/geany/geany-themes.git"
  local -r colorschemes_dir="$HOME/.config/geany/colorschemes"
  [[ -d "$colorschemes_dir" ]] || mkdir -p "$colorschemes_dir"
  show_message "Cloning Geany themes..."
  git clone "$theme_url" "$tmp_dir"
  printf "Copying Geany colorschemes into %s\n" "$colorschemes_dir"
  cp -v "$tmp_dir/colorschemes/*.conf" "$colorschemes_dir/" | awk -F"/" '{print "=> " $NF}' | sed "s/'//"
  printf "Geany themes installed.\n"
}

install_geany() {
  show_message "Installing Geany from repositories..."
  sudo apt-get install -y geany libvte9
  printf "Geany %s installed.\n" "$(geany_version)"
}

remove_geany() {
  show_message "Removing Geany $(geany_version)..."
  sudo apt-get remove -y geany
  show_message "Removing Geany configuration files ..."
  find "$HOME/.config" -type d -name geany -exec rm -rf {} \;
  printf "Geany and configuration files removed.\n"
}

show_message() {
	local message="$1"
	[[ "$verbose_mode" == "$TRUE" ]] && echo "$message"
}

main() {
  local noOpt opt optstr
  noOpt=1
  optstr=":hirtv"
  while getopts "$optstr" opt; do
    case "$opt" in
      h )
        printf "%s help:\n" "$script"
        help 0
        ;;
      i )
        if exists geany; then
          printf "Geany %s s already installed.\n" "$(geany_version)"
        else
          sudo_login 2
          check_package git
          install_geany
        fi
        ;;
      r )
        if exists geany; then
          sudo_login 2
          remove_geany
        else
          printf "Geany is not installed.\n"
        fi
        ;;
      t )
        if exists geany; then
          tmp_dir=$(mktemp -d) || die "Failed to create temporary directiory" 1
          trap cleanup EXIT
          check_package git
          clone_themes
        else
          printf "Geany is not installed.\n"
        fi
        ;;
      v )
        verbose_mode="$TRUE"
			  show_message "Verbose mode enabled."
        ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
    noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
