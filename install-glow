#!/usr/bin/env bash
##########################################################################
# Script Name  : install-glow
# Description  : Installs, updates, and removes the Glow markdown reader.
# Dependencies : curl, gdebi
# Arguments    : [-h] [-i] [-r] [-s] (See help function)
# Author       : Copyright (C) 2022, Richard B. Romig, 10 Jan 2022
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.4.12"
readonly _updated="10 Jun 2023"
readonly src_list="/etc/apt/sources.list.d"
readonly keyring_dir="/etc/apt/keyrings"

## Functions ##

add_src_gpg() {
  local charm_url="https://repo.charm.sh/apt"
  echo "Adding the Charm GPG key..."
  [[ -d "$keyring_dir" ]] || sudo mkdir -p "$keyring_dir"
  curl -fsSL "$charm_url/gpg.key" | sudo gpg --dearmor -o "$keyring_dir/charm.gpg"
  echo "Creating the the Charm apt source list..."
  echo "deb [signed-by=$keyring_dir/charm.gpg] $charm_url/ * *" | sudo tee "$src_list/charm.list" > /dev/null
  printf "charm.list created, and gpg key applied.\n"
}

install_glow() {
  printf "Installing the Glow markdown reader...\n"
  add_src_gpg
  sudo apt update && sudo apt install glow -yy
  printf "glow %s) successfully installed." "$(glow_ver)"
}

remove_glow() {
  printf "Removing the Glow markdown reader...\n"
  sudo apt-get remove glow -y
  [[ -f "$src_list/charm.list" ]] && sudo rm -v "$src_list/charm.list"
  [[ -f "$keyring_dir/charm.gpg" ]] && sudo rm -v "$keyring_dir/charm.gpg"
  printf "Glow markdown reader has been removed.\n"
}

glow_ver() {
  glow --version | awk '{print $3}' | sed 's/v//'
}

check_dependencies() {
  local packages=( curl gdebi )
  check_packages "${packages[@]}"
}

exists_glow() {
  dpkg -l | grep -qw glow && return "$TRUE" || return "$FALSE"
}

help() {
  local errcode="${1:-2}"
  cat << END_HELP
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
  -h    Displays help.
  -i    Installs the glow markdown reader.
  -r    Removes the glow markdown reader from the system.
  -s    Apply charm.list and gpg key.
END_HELP
  printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
  exit "$errcode"
}

## Execution ##

printf "Installs or removes the Glow markdown reader.\n"

noOpt=1
optstr=":hirs"
while getopts "$optstr" opt
do
  case "$opt" in
    h )
      help 0
    ;;
    i )
      exists_glow && leave "Glow $(glow_ver) is already installed."
      user_in_sudo
      check_dependencies
      printf "%sInstalling Glow markdown reader...%s\n" "$lightyellow" "$normal"
      install_glow
    ;;
    r )
      exists_glow || leave "Glow is not installed."
      user_in_sudo
      remove_glow
    ;;
    s )
      exists_glow || leave "Glow is not installed."
      user_in_sudo
      check_dependencies
      add_src_gpg
    ;;
    ? )
      printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
      help 2
  esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
exit