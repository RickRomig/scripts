#!/usr/bin/env bash
##########################################################################
# Script Name  : install-glow
# Description  : Installs and removes the Glow markdown reader.
# Dependencies : curl
# Arguments    : [-h] [-i] [-r] [-s] (See help function)
# Author       : Copyright (C) 2022, Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 10 Jan 2022
# Updated      : 23 Oct 2025
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly version="5.3.25296"
readonly charm_url="https://repo.charm.sh/apt"
readonly src_list="/etc/apt/sources.list.d/charm.list"
readonly charm_key="/etc/apt/keyrings/charm.gpg"

## Functions ##

help() {
  local errcode="${1:-2}"
  local updated="20 Oct 2025"
  cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs/Removed Glow Markdown reader

${green}Usage:${normal} $script [-hir]
${orange}Available options:${normal}
  -c  Apply Glow configuration.
  -h  Show this help message and exit.
  -i  Installs the glow markdown reader.
  -r  Removes the glow markdown reader from the system.
_HELP_
  exit "$errcode"
}

glow_version() {
  glow --version | cut -d' ' -f3
}

add_gpg() {
  if [[ -f "$charm_key" ]]; then
    printf "%s already exists.\n" "${charm_key##*/}"
    return
  fi
  printf "Adding the Charm GPG key...\n"
  [[ -d /etc/apt/keyrings ]] || sudo mkdir -p /etc/apt/keyrings
  check_package curl
  curl -fsSL "$charm_url/gpg.key" | sudo gpg --dearmor -o "$charm_key"
  printf "Charm GPG key applied.\n"
}

add_src_list() {
  if [[ -f "$src_list" ]]; then
    printf "%s already exists.\n" "${src_list##*/}"
    return
  fi
  printf "Creating the the Charm apt source list...\n"
  echo "deb [signed-by=$charm_key] $charm_url/ * *" | sudo tee "$src_list"
  printf "Charm apt source list created.\n"
}

install_glow() {
  printf "Installing the Glow markdown reader...\n"
  sudo_login 2
  add_gpg
  add_src_list
  sudo apt update && sudo apt install -y glow
  exists glow || die "Glow installation failed." 1
  glow_config
  printf "glow %s successfully installed.\n" "$(glow_version)"
}

remove_glow() {
  printf "Removing the Glow markdown reader...\n"
  sudo_login 2
  sudo apt-get -y remove glow
  [[ -f "$src_list" ]] && sudo rm -v "$src_list"
  [[ -f "$charm_key" ]] && sudo rm -v "$charm_key"
  [[ -d ~/.config/glow ]] && rm -rf ~/.config/glow
  [[ -d ~/.cache/glow ]] && rm -rf ~/.cache/glow
  printf "Glow markdown reader has been removed.\n"
}

glow_config() {
  printf "Installing glow.yml...\n"
  [[ -d ~/.config/glow ]] || mkdir -p ~/.config/glow
  [[ -f ~/.config/glow/glow.yml ]] && rm ~/.config/glow/glow.yml
  [[ -d ~/gitea/configs ]] && ln -sv ~/gitea/configs/glow/glow.yml ~/.config/glow/glow.yml
  [[ -d ~/Downloads/configs ]] && ln -sv ~/Downloads/configs/glow/glow.yml ~/Downloads/configs/glow/glow.yml
  printf "Glow configuration applied.\n"
}

main() {
  local noOpt opt optstr
	noOpt=1
  optstr=":chir"
  while getopts "$optstr" opt; do
    case "$opt" in
      c )
        if installed glow; then
          glow_config
        else
          printf "Glow is not installed.\n"
        fi
        ;;
      h )
        help 0
        ;;
      i )
        if installed glow; then
          printf "Glow %s is already installed.\n" "$(glow_version)"
        else
          install_glow
        fi
        ;;
      r )
        if installed glow; then
          remove_glow
        else
        printf "Glow is not installed.\n"
        fi
        ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
	  noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"