#!/usr/bin/env bash
##########################################################################
# Script Name  : install-glow
# Description  : Installs and removes the Glow markdown reader.
# Dependencies : curl, gdebi
# Arguments    : [-h] [-i] [-r] [-s] (See help function)
# Author       : Copyright (C) 2022, Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 10 Jan 2022
# Updated      : 06 Aug 2024
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="4.18.24219"
readonly _updated="06 Aug 2024"
readonly charm_url="https://repo.charm.sh/apt"
readonly src_list_d="/etc/apt/sources.list.d"
readonly keyring_d="/etc/apt/keyrings"

## Functions ##

add_gpg() {
  printf "Adding the Charm GPG key...\n"
  [[ -d "$keyring_d" ]] || sudo mkdir -p "$keyring_d"
  curl -fsSL "$charm_url/gpg.key" | sudo gpg --dearmor -o "$keyring_d/charm.gpg"
  printf "Charm GPG key applied.\n"
}

add_src_list() {
  printf "Creating the the Charm apt source list...\n"
  echo "deb [signed-by=$keyring_d/charm.gpg] $charm_url/ * *" | sudo tee "$src_list_d/charm.list" > /dev/null
  printf "Charm apt source list created.\n"
}

install_glow() {
  printf "Installing the Glow markdown reader...\n"
  add_gpg
  add_src_list
  sudo apt update && sudo apt install glow -yy
  printf "glow %s successfully installed." "$(glow_ver)"
}

remove_glow() {
  printf "Removing the Glow markdown reader...\n"
  sudo apt-get remove glow -y
  [[ -f "$src_list_d/charm.list" ]] && sudo rm -v "$src_list_d/charm.list"
  [[ -f "$keyring_d/charm.gpg" ]] && sudo rm -v "$keyring_d/charm.gpg"
  printf "Glow markdown reader has been removed.\n"
}

glow_ver() {
  # glow --version | cut -d' ' -f3
  dpkg -l glow | awk '/ii/ {print $3}'
}

check_dependencies() {
  local packages=( curl gdebi )
  check_packages "${packages[@]}"
}

help() {
  local errcode="${1:-2}"
  cat << END_HELP
${orange}$_script${normal} $_version ($_updated)
Installs/Removed Glow Markdown reader

${green}Usage:${normal} $_script [OPTION]
${orange}Available options:${normal}
  -h  Displays help.
  -i  Installs the glow markdown reader.
  -r  Removes the glow markdown reader from the system.
  -s  Apply charm.list and gpg key.
END_HELP
  exit "$errcode"
}

## Execution ##

noOpt=1
optstr=":hirs"
while getopts "$optstr" opt; do
  case "$opt" in
    h )
      help 0
    ;;
    i )
      exists glow && leave "Glow $(glow_ver) is already installed."
      sudo_login 2
      check_dependencies
      install_glow
    ;;
    r )
      exists glow || leave "Glow is not installed."
      sudo_login 2
      remove_glow
    ;;
    s )
      exists glow || leave "Glow is not installed."
      sudo_login 2
      check_dependencies
      add_gpg
      add_src_list
    ;;
    ? )
      printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
      help 2
  esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
leave "$_script v$_version"
