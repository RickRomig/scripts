#!/usr/bin/env bash
##########################################################################
# Script Name  : sshlocal
# Description  : connect to remote servers via SSH using the .local domain
# Dependencies : OpenSSH, OpenSSH_server
# Arguments    : X or x to enable X11 forwarding
# Author       : Copyright Â© 2025 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 14 Feb 2025
# Last updated : 27 Feb 2025
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Functions ##

check_x11() {
	local x_arg="$1"
	case "$x_arg" in
		X|x* )
			return "$TRUE";;
		* )
			return "$FALSE"
	esac
}

connect_local() {
	local index arr_len x11_arg lhost
	x11_arg="$1"
	lhost="${HOSTNAME:-$(hostname)}"
	COLUMNS=40
	PS3="Choose a remote server: "
	local servers=(hp-800g2-sff hp-6005 e6500-deb probook-6570b hp-8300 lenovo-m91p hp-8300-usdt hp-800-g1-usdt probook-6570 hp-probook-6570 hp-850-g3 hp-2560p e-475m)
	select _server in "${servers[@]}" "Exit"; do
		if (( REPLY == 1 + "${#servers[@]}" )); then
			printf "Exiting. No server contacted.\n"
			break
		elif (( REPLY > 0 && REPLY <= "${#servers[@]}" )); then
			index=$(( REPLY -1 ))
			[[ "$lhost" == "${servers[index]}" ]] && diehard "Attempting to connect to local client." "$script $version"
			clear
			if check_x11 "$x11_arg"; then
				printf "%sConnecting to %s (X11 forwarding) ...%s\n" "$lightyellow" "${servers[index]}" "$normal"
				ssh -X "${servers[index]}".local
			else
				printf "%sConnecting to %s ...%s\n" "$lightyellow" "${servers[index]}" "$normal"
				ssh "${servers[index]}".local
			fi
			break
		else
			arr_len="${#servers[@]}"; arr_len=$(( arr_len + 1 ))
			printf "%sInvalid option.%s Choose 1 - %d.\n" "$lightred" "$normal" "$arr_len"
		fi
	done
}

main() {
	local script version x11_arg
	script=$(basename "$0")
	version="2.0.25058"
	x11_arg="${1:-Y}"
	connect_local "$x11_arg"
  over_line "$script $version"
	exit
}

## Execution ##

main "$@"
