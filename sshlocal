#!/usr/bin/env bash
##########################################################################
# Script Name  : sshlocal
# Description  : connect to remote servers via SSH using the .local domain
# Dependencies : OpenSSH, OpenSSH_server, fzf (optional)
# Arguments    : X or x to enable X11 forwarding
# Author       : Copyright Â© 2025 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 14 Feb 2025
# Last updated : 21 Mar 2025
# Comments     :
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="3.2.25080"
readonly servers=(hp-800g2-sff hp-6005 e6500-deb probook-6570b hp-8300 lenovo-m91p hp-8300-usdt hp-800-g1-usdt probook-6570 hp-probook-6570 hp-850-g3 hp-2560p e-475m)
FMENU="fzf --header=$(basename "$0") \
           --layout=reverse \
           --exact \
           --border=bold \
           --border=rounded \
           --margin=5% \
           --color=dark \
           --height=95% \
           --info=hidden \
           --header-first \
           --bind change:top \
           --prompt"

## Functions ##

check_x11() {
	local x_arg="$1"
	case "$x_arg" in
		X|x* )
			return "$TRUE";;
		* )
			return "$FALSE"
	esac
}

connect_server() {
	local server="$1"
	printf "%sConnecting to %s ...%s\n" "$lightyellow" "$server" "$normal"
	ssh "$server".local
}

connect_server_x() {
	local server="$1"
	printf "%sConnecting to %s (X11 forwarding) ...%s\n" "$lightyellow" "$server" "$normal"
	ssh -X "$server".local
}

fuzzy_server() {
	local lhost server x11_arg
	x11_arg="$1"
	lhost="$2"
	server=$(printf "%s\n" "${servers[@]}" | $FMENU "Choose the remote server: ")
	[[ "$lhost" == "$server" ]] && diehard "Attempting to connect to local client." "$script $version"
	if check_x11 "$x11_arg"; then
		connect_server_x "$server"
	else
		connect_server "$server"
	fi
}

select_server() {
	local index arr_len lhost x11_arg _server
	lhost="$2"
	x11_arg="$1"
	COLUMNS=40
	PS3="Choose the remote server: "
	print "%s\n" "$script"
	select _server in "${servers[@]}" "Exit"; do
		if (( REPLY == 1 + "${#servers[@]}" )); then
			printf "Exiting. No server contacted.\n"
			break
		elif (( REPLY > 0 && REPLY <= "${#servers[@]}" )); then
			index=$(( REPLY -1 ))
			[[ "$lhost" == "${servers[index]}" ]] && diehard "Attempting to connect to local client." "$script $version"
			if check_x11 "$x11_arg"; then
				connect_server_x "${servers[index]}"
			else
				connect_server "${servers[index]}"
			fi
			break
		else
			arr_len="${#servers[@]}"; arr_len=$(( arr_len + 1 ))
			printf "%sInvalid option.%s Choose 1 - %d.\n" "$lightred" "$normal" "$arr_len"
		fi
	done
}

main() {
	local x11_arg="${1:-Y}"
	local local_host="${HOSTNAME:-$(hostname)}"
	clear
	if exists fzf; then
		fuzzy_server "$x11_arg" "$local_host"
	else
		select_server "$x11_arg" "$local_host"
	fi
  over_line "$script $version"
	exit
}

## Execution ##

main "$@"
