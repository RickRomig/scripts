#!/usr/bin/env bash
###############################################################################
# Script Name  : pornhub-dl
# Description  : Download videos from PornHub.com with best quality
# Dependencies : yt-dlp
# Arguments    : Video URL or ID number
# Author       : Copyright Â© 2019, Richard B. Romig, 05 April 2019
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 05 April 2019
# Updated      : 10 Oct 2024
# Comments     : Accepts either full URL or video id such as ph5ccfa07f0e2a6
#              : Downloads to ~/Videos/Pornography/<category>
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="3.4.24284"
readonly updated="10 Oct 2024"
readonly site="Redtube"
readonly porn_dir=$HOME"/Videos/Pornography"

## Functions ##

display_title() {
  clear
  box "$site Download" "="
  echo "$script v$version"
}

help() {
  local errcode
  local errcode="${1:-2}"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Dowload videos from Pornhub.com.

${green}Usage:${normal} $script [video_URL] [video_ID]
  $script https://www.pornhub.com/view_video.php?viewkey=ph5ccfa07f0e2a6
  $script ph5ccfa07f0e2a6

${orange}Available options:${normal}
  -h | --help  displays these instructions.
  -i | --info  displays information about the script.
_HELP_
  exit "$errcode"
}

script_info() {
  cat << _INFO_
  $script uses yt-dlp to download videos from the PornHub adult site.
  The video URL or ID is passed to the script on the command line. The default
  URL is https://www.pornhub.com if only the video ID is passed to the script.

  The script will then present a menu of categories corresponding to
  subdirectories under ~/Videos/Pornography/. Select the category (subdirectory).

  The the video will be downloaded to the selected sub-directory  The script is
  hard-coded to save the file as title.ext. Spaces in the title will be replaced
  by underscores. Metadata will also be added to the file.

  When the download is completed, success or failure is displayed. If the
  download fails, the script exits with an error code.

  Usage:
    $script <video-url>
    $script <video-ID>

  Version: $version
  Updated: $updated
_INFO_
  exit
}

check_dependencies() {
  if [[ -x /usr/local/bin/yt-dlp ]]; then
    printf "yt-dlp [OK]\n"
    sleep 2
  else
    die "yt-dlp is not installed." 1
  fi
}

choose_destination() {
	local sub_dir _opt options
	COLUMNS=40
  options=("Anal" "Asian" "Bi Gay Trans" "Full movies" "Kink" "Masturbation" "Miscellaneous" "Oral" "Pinay" "Straight" "No category")
  PS3="Choose category: "
  select _opt in "${options[@]}"; do
  case "$REPLY" in
    1 ) sub_dir="Anal"; break ;;
    2 ) sub_dir="Asian"; break ;;
    3 ) sub_dir="Bi-gay-trans"; break ;;
    4 ) sub_dir="Full-movies"; break ;;
    5 ) sub_dir="Kink"; break ;;
    6 ) sub_dir="Masturbation"; break ;;
    7 ) sub_dir="Misc"; break ;;
    8 ) sub_dir="Oral"; break ;;
    9 ) sub_dir="Pinay"; break ;;
    10 ) sub_dir="Straight"; break ;;
    11 ) sub_dir="none"; break ;;
  esac
done
echo "$sub_dir"
}

dl_2_video() {
  local url="$1"
  printf "%s...%s\n"  "$porn_dir" "$normal"
  if /usr/local/bin/yt-dlp -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best" --add-metadata -ic --restrict-filename -o "$porn_dir/%(title)s.%(ext)s" "$url"
  then
    leave "Download successful."
  else
    ec="$?"
    die "Download failed. Error: $ec" "$ec"
  fi
}

dl_2_subdir() {
	local url dest_dir
  url="$1"
  dest_dir="$2"
  [[ -d "$porn_dir/$dest_dir" ]] || mkdir -p "$porn_dir/$dest_dir"
	printf "%s...%s\n"  "$porn_dir/$dest_dir" "$normal"
  if /usr/local/bin/yt-dlp -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best" --add-metadata -ic --restrict-filename -o "$porn_dir/$dest_dir/%(title)s.%(ext)s" "$url"
  then
    leave "Download successful."
  else
    ec="$?"
    die "Download failed. Error: $ec" "$ec"
  fi
}

download_video() {
  local site url subdir
  url="$1"
  display_title
  # Choose the download folder
  subdir=$(choose_destination)
  # Download video to selected folder
  printf "\n%s%sDownloading video from %s to " "$bold" "$blue" "$site"
  case "$subdir" in
    "none" )
      dl_2_video "$url"
    ;;
    * )
      dl_2_subdir "$url" "$subdir"
  esac
}

## Execution ##

main() {
  local url
  # Check arguments and fetch URL
  if [[ $# -eq 0 ]]; then
    printf "%s No argument passed.\n" "$RED_ERROR" >&2
    help 2
  elif [[ "$1" == "--info" || "$1" == "-i" ]]; then
    script_info
  elif [[ "$1" == "--help" || "$1" == "-h" ]]; then
    help 2
  elif [[ "$1" =~ ^https?:\/\/.* ]]; then
    # match by regex, starts with http:// or https://
    url=$*
  else
    # match by video ID
    url="https://www.pornhub.com/view_video.php?viewkey=$*"
  fi
  check_dependencies
  download_video "$url"
}

## Execution ##

main "$@"
