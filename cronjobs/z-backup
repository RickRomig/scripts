#!/usr/bin/env bash
#####################################################################
# Script Name  : z-backup
# Description  : local backup of /etc, /home, and /data/installations
#              : to a designated folder on a second internal drive.
# Dependencies : rsync
# Arguments    : none
# Author       : Copyright (C) 2020, Richard Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 07 Jun 2020
# Updated      : 21 Jul 2025
# Version      : 1.5.25202
# Comment      : Automatically limits log size to 30 entries.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
#####################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#####################################################################

set -eu

main() {
  local backup_dir error_log log_dir log_file
  log_dir="/var/log"
  log_file="backup.log"
  backup_dir="/data/backup"
  error_log="/error.log"

  [[ -d "$backup_dir" ]] || mkdir -p "$backup_dir"
  [[ -d "$log_dir" ]] || mkdir -p "$log_dir"

  {
    printf "%(%a|%F|%R)T|"
    if rsync -aH --delete /etc /home "$backup_dir/" 2> "$backup_dir/$error_log"; then
      printf "successful\n"
      echo "Local Backup was successful: $(date +%F)" > "$backup_dir/$error_log"
    else
      printf "had errors %d\n" "$?"
      echo "Local Backup had errors: $(date +%F)" >> "$backup_dir/$error_log"
    fi
    sync
  } >> "$log_dir/$log_file" 2>&1

  log_len=$(wc -l < "$log_dir/$log_file")
  [[ "$log_len" -gt 30 ]] && sed -i '1d' "$log_dir/$log_file"
  exit
}

main "$@"
