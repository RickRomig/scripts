#!/usr/bin/env bash
##########################################################################
# Script Name  : i3configs
# Description  : Copy default i3 configuration files for bookworm and newer
# Dependencies : curl
# Arguments    : See help function
# Author       : Copyright Â© 2023 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 18 Apr 2023
# Updated      : 20 Nov 2024
# Comments     : Assumes i3wm, polybar, rofi, dunst have been previously installed
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="3.4.24325"
# readonly repository="configs/raw/branch/main/"
# readonly local_repo="$HOME/gitea/configs"
readonly config_dir="$HOME/.config"
# localip="$(local_ip)"; readonly localip

## Functions ##

help() {
	local errcode updated
	errcode="${1:-2}"
	updated="20 Nov 2024"
	cat << _HELP_
${orange}$script${normal} $version, Updated $updated
Copies default i3 configuration files from the local Gitea server.

${green}Usage:${normal} $script [OPTIONS]

${orange}Available options:${normal}
  -a  Copy autostart.sh (Launches programs necessary for i3 to run.)
  -b  Copy polybar/config.ini (Status bar configuration)
  -c  Copy config (i3wm configuration files)
  -d  Copy dunstrc
  -e  Copy everything (all configuration files and scripts)
  -h  Display help
  -i  Copy all i3wm configuration files
  -k  Copy keyhelper.sh & keybinds.txt
  -l  Copy logout (Rofi menu of logout actions)
  -p  Copy polybar-i3 launch script
  -r  Copy rofi configuration files
  -s  Copy sxhkdrc (i3 keybindings)
  -w  Copy workspaces.conf (Workspace configurations)
${bold}NOTES${normal}
1. Some files may need to be modified to fit a particular system configuration.
2. Assumes i3wm has been installed from the i3debian repository on the local Gitea server.
_HELP_
  exit "$errcode"
}

assign_repo() {
	local localip repo
	localip=$(local_ip)
	case "$localip" in
		10|16|22 )
			repo="$HOME/gitea/configs"
		;;
		* )
			if [[ -d "$HOME/Downloads/configs" ]]; then
				pushd "$HOME/Downloads/configs" || die "pushd failed"
				git pull --quiet origin main
				popd || die "popd failed"
			else
				git clone --quiet "$GITEA_URL/configs.git" "$HOME/Downloads/configs"
			fi
			repo="$HOME/Downloads/configs"
	esac
	printf "%s" "$repo"
}

copy_i3_config() {
	local file repository
	file="$1"
	repository="$2"
	[[ -d "$config_dir/i3/" ]] || mkdir -p "$config_dir/i3/"
	printf "Copying %s to %s ...\n" "$file" "$config_dir/i3"
	cp "$repository/i3/$file" "$config_dir/i3/"
}

copy_all_i3_configs() {
	local i3file i3files repository
	[[ -d "$config_dir/i3/" ]] || mkdir -p "$config_dir/i3/"
	i3files=( "autostart.sh" "backgrounds.sh" "config" "keybinds.txt" "keyhelper.sh" "logout" "polybar-i3" "rules.conf" "sxhkdrc" "workspaces.conf" )
	for i3file in "${i3files[@]}"; do
		copy_i3_config "$i3file" "$repository"
	done
}

copy_polybar_config() {
	local file repository
	repository="$1"
	[[ -d "$config_dir/polybar" ]] || mkdir -p "$config_dir/polybar"
	printf "Copying %s to %s ...\n" "$file" "$config_dir/polybar"
	cp "$repository/polybar/$file" "$config_dir/polybar/"
	configure_polybar
}

configure_polybar() {
	local b_name e_name w_name cfg_file
	cfg_file="config.ini"
	[[ "$localip" == "16" ]] && cfg_file="config"
	e_name=$(/usr/bin/nmcli dev | awk '/ethernet/ {print $1}')
	w_name=$(/usr/bin/nmcli dev | awk '/wifi/ {print $1}')
	b_name=$(find /sys/class/power_supply/ -name "BAT*" | awk -F/ '/BAT/ {print $5}')
	if [[ "$w_name" ]]; then
		sed -i "s/wlan0/$w_name/" "$config_dir/polybar/$cfg_file"
	else
		sed -i '/^modules-right/s/ wlan//' "$config_dir/polybar/$cfg_file"
	fi
	if [[ "$e_name" ]]; then
		sed -i "s/eth0/$e_name/" "$$config_dir/polybar/$cfg_file"
	else
		sed -i '/^modules-right/s/ eth//' "$config_dir/polybar/$cfg_file"
	fi
	if [[ "$b_name" ]]; then
		sed -i "s/BAT0/$b_name/" "$config_dir/polybar/$cfg_file"
	else
		sed -i '/^modules-right/s/ battery//' "$config_dir/polybar/$cfg_file"
	fi
}

copy_polybar_launch() {
	local file repository
	repository="$1"
	[[ -d "$config_dir/i3/" ]] || mkdir -p "$config_dir/i3/"
	file="polybar-i3"
	printf "Copying %s to %s ...\n" "$file" "$config_dir/i3"
		cp "$repository/i3/$file" "$config_dir/13/"
}

copy_rofi_configs() {
	local file files repository
	repository="$1"
	[[ -d "$config_dir/rofi" ]] || mkdir -p "$config_dir/rofi"
	files=( "arc_dark_colors.rasi" "arc_dark_transparent_colors.rasi" "config.rasi"	)
	for file in "${files[@]}"; do
		printf "Copying %s to %s ...\n" "$file" "$config_dir/rofi"
		cp "$repository/rofi/$file" "$config_dir/rofi/";
	done
}

copy_dunst_config() {
	local file repository
	repository="$1"
	file="dunstrc"
	[[ -d "$config_dir/dunst" ]] || mkdir -p "$config_dir/dunst"
	printf "Copying %s to %s ...\n" "$file" "$config_dir/dunst"
	cp "$repository/dunst/$file" "$config_dir/dunst/"
}

check_dependencies() {
	if exists i3; then
		printf "i3wm is installed.\n"
		sleep 2
		printf '\e[A\e[K'
		check_package git
	else
		printf "i3wm is not installed.\n"
		help 0
	fi
}

main() {
	local noOpt optstr opt repository
	check_dependencies
	repository=$(assign_repo)
	noOpt=1
	optstr=":abcdehklprsw"
	while getopts "$optstr" opt; do
		case "$opt" in
			a )
				copy_i3_config "autostart.sh" "$repository"
			;;
			b )
				copy_polybar_config "$repository"
			;;
			c )
				copy_i3_config "config" "$repository"
			;;
			d )
				copy_dunst_config "$repository"
			;;
			e )
				copy_all_i3_configs "$repository"
				copy_polybar_config "$repository"
				copy_rofi_config "$repository"
				copy_dunst_config "$repository"
			;;
			h )
				help 0
			;;
			i )
				copy_all_i3_configs "$repository"
			;;
			k )
				copy_i3_config "keyhelper.sh" "$repository"
				copy_i3_config "keybinds.txt" "$repository"
			;;
			l )
				copy_i3_config "logout" "$repository"
			;;
			p )
				copy_i3_config "polybar-i3" "$repository"
			;;
			r )
				copy_rofi_configs "$repository"
			;;
			s )
				copy_i3_config "sxhkdrc" "$repository"
			;;
			w )
				copy_i3_config "workspaces.conf" "$repository"
			;;
			? )
				printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
				help 2
		esac
		noOpt=0
	done
	[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
	shift "$(( OPTIND - 1 ))"
	leave "$script v$version"
}

## Execution ##

main "$@"
