#!/usr/bin/env bash
##########################################################################
# Script Name  : i3configs
# Description  : Copy default i3 configuration files for bookworm and newer
# Dependencies : curl
# Arguments    : See help function
# Author       : Copyright Â© 2023 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 18 Apr 2023
# Updated      : 11 May 2024
# Comments     : Assumes i3wm, polybar, rofi, dunst have been installed
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="3.0.24132"
readonly _updated="11 May 2024"
readonly repository="configs/raw/branch/main/"
readonly config_dir="$HOME/.config"
readonly bin_dir="$HOME/.local/bin"

## Functions ##

help() {
	errcode="${1:-2}"
	cat << END_HELP
$_script copies default i3 configuration files from the local Gitea server.
Some files may need to be modified to fit a particular system configuration.
Assumes i3wm has been installed from the i3debian repository on the local Gitea server.
Assumes Debian 12 (Bookworm) or LMDE 6 (Faye) is installed.
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
	-a	Copy autostart.sh (Launches programs necessary for i3 to run.)
	-b	Copy polybar/config.ini (Status bar configuration)
	-c	Copy config (i3wm configuration files)
	-d	Copy dunstrc
	-e	Copy everything (all configuration files and scripts)
	-h	Display help
	-i	Copy all i3wm configuration files
	-k	Copy bindings.list (List of default keybindings, read by ~/bin/i3kb.sh)
	-l	Copy logout (Rofi menu of logout actions)
	-m	Copy dmconf.sh (dmenu script to edit configuration files)
	-p	Copy polybar-i3 launch script
	-r	Copy rofi configuration files
	-s	Copy sxhkdrc (i3 keybindings)
	-w	Copy workspaces.conf (Workspace configurations)
END_HELP
	printf "%s v%s (%s)\n" "$_script" "$_version" "$_updated"
  exit "$errcode"
}

is_bookworm() {
	local codename
	codename=$(/usr/bin/lsb_release --codename --short)
	case "$codename" in
		bookworm|faye )
			return "$TRUE"
		;;
		* )
			return "$FALSE"
	esac
}

copy_i3_config() {
	local file="$1"
	[[ -d "$config_dir/i3/sxhkd" ]] || mkdir -p "$config_dir/i3/sxhkd"
	printf "Downloading i3 configuration file from Gitea server...\n"
	if [[ "$file" == "sxhkdrc" ]]; then
		curl -so "$config_dir/i3/sxhkd/$file" "$Gitea_URL/$repository/i3/sxhkd/$file"
	else
		curl -so "$config_dir/i3/$file" "$Gitea_URL/$repository/i3/$file"
	fi
	printf "%s copied from the Gitea Server.\n" "$file"
}

copy_all_i3_configs() {
	local i3file
	local i3files=( "config" "sxhkdrc" "workspaces.conf" "autostart.sh" "logout" "bindings.list" )
	for i3file in "${i3files[@]}"; do copy_i3_config "$i3file"; done
}

copy_polybar_config() {
	local file="config.ini"
	local bat_dir="/sys/class/power_supply"
	[[ -d "$config_dir/polybar" ]] || mkdir -p "$config_dir/polybar"
	printf "Downloading Polybar configuration file from Gitea server...\n"
	curl -so "$config_dir/polybar/$file" "$Gitea_URL/$repository/polybar/$file"
	# Remove battery from modules-right in polybar config.ini if not needed
	lspci | grep -q 'Network controller:' || sed -i '/^modules-right/s/ wlan//' "$config_dir/polybar/$file"
	[[ ! -d "$bat_dir/BAT0" && ! -d "$bat_dir/BAT1" ]] && sed -i '/^modules-right/s/ battery//' "$config_dir/polybar/$file"
	# Remove wlan from modules-right in polybar config.ini if not needed
	printf "%s copied from the Gitea Server.\n" "$file"
}

copy_polybar_launch() {
	local file="polybar-i3"
	local repo_path="i3debian/raw/branch/main/.local/bin"
	curl -so "$bin_dir/$file" "$Gitea_URL/$repo_path/$file"
	printf "%s copied from the Gitea Server.\n" "$file"
}

copy_rofi_configs() {
	local files=( "config.rasi" "arc_dark_colors.rasi" "arc_dark_transparent_colors.rasi"	)
	[[ -d "$config_dir/rofi" ]] || mkdir -p "$config_dir/rofi"
	for file in "${files[@]}"; do curl -so "$config_dir/rofi/$file" "$Gitea_URL/$repository/rofi/$file"; done
	printf "%s copied from the Gitea Server.\n" "${files[@]}"
}

copy_dunst_config() {
	local file="dunstrc"
	[[ -d "$config_dir/dunst" ]] || mkdir -p "$config_dir/dunst"
	curl -so "$config_dir/dunst/$file" "$Gitea_URL/$repository/dunst$file"
	printf "%s copied from the Gietea Server.\n" "$file"
}

copy_dmconf() {
	local file="dmconf.sh"
	local repo_path="i3debian/raw/branch/main/.local/bin"
	curl -so "$bin_dir/$file" "$Gitea_URL/$repo_path/$file"
	printf "%s copied from the Gitea Server.\n" "$file"
}

## Execution ##

# is_bookworm || 	die "Unsupported Debian installation." 1

if exists i3; then
	printf "i3wm is installed.\n"
	sleep 2
	printf '\e[A\e[K'
	check_package curl
else
	printf "i3wm is not installed.\n"
	help 0
fi
noOpt=1
optstr=":abcdehklmprsw"
while getopts "$optstr" opt; do
	case "$opt" in
		a )
			copy_i3_config "autostart.sh"
		;;
		b )
			copy_polybar_config
		;;
		c )
			copy_i3_config "config"
		;;
		d )
			copy_dunst_config
		;;
		e )
			copy_all_i3_configs
			copy_polybar_config
			copy_polybar_launch
			copy_rofi_config
			copy_dunst_config
			copy_dmconf
		;;
		h )
			help 0
		;;
		i )
			copy_all_i3_configs
		;;
		k )
			copy_i3_config "bindings.list"
		;;
		l )
			copy_i3_config "logout"
		;;
		m )
			copy_dmconf
		;;
		p )
			copy_polybar_launch
		;;
		r )
			copy_rofi_configs
		;;
		s )
			copy_i3_config "sxhkdrc"
		;;
		w )
			copy_i3_config "workspaces.conf"
		;;
		? )
			printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
			help 2
	esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
printf "%s v%s\n" "$_script" "$_version"
exit
