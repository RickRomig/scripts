#!/usr/bin/env bash
##########################################################################
# Script Name  : i3configs
# Description  : Copy default i3 configuration files for bookworm and newer
# Dependencies : curl
# Arguments    : See help function
# Author       : Copyright Â© 2023 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 18 Apr 2023
# Updated      : 10 Oct 2024
# Comments     : Assumes i3wm, polybar, rofi, dunst have been previously installed
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="3.3.24284"
readonly repository="configs/raw/branch/main/"
readonly local_repo="$HOME/gitea/configs"
readonly config_dir="$HOME/.config"
localip="$(local_ip)"; readonly localip

## Functions ##

help() {
	local errcode updated
	errcode="${1:-2}"
	updated="10 Oct 2024"
	cat << _HELP_
${orange}$script${normal} $version, Updated $updated
Copies default i3 configuration files from the local Gitea server.

${green}Usage:${normal} $script [OPTIONS]

${orange}Available options:${normal}
  -a  Copy autostart.sh (Launches programs necessary for i3 to run.)
  -b  Copy polybar/config.ini (Status bar configuration)
  -c  Copy config (i3wm configuration files)
  -d  Copy dunstrc
  -e  Copy everything (all configuration files and scripts)
  -h  Display help
  -i  Copy all i3wm configuration files
  -k  Copy bindings.list (List of default keybindings, read by ~/bin/i3kb.sh)
  -l  Copy logout (Rofi menu of logout actions)
  -m  Copy dmconf.sh (dmenu script to edit configuration files)
  -p  Copy polybar-i3 launch script
  -r  Copy rofi configuration files
  -s  Copy sxhkdrc (i3 keybindings)
  -w  Copy workspaces.conf (Workspace configurations)
${bold}NOTES${normal}
1. Some files may need to be modified to fit a particular system configuration.
2. Assumes i3wm has been installed from the i3debian repository on the local Gitea server.
_HELP_
  exit "$errcode"
}

copy_i3_config() {
	local file="$1"
	[[ -d "$config_dir/i3/sxhkd" ]] || mkdir -p "$config_dir/i3/sxhkd"
	printf "Downloading i3 configuration file from Gitea server...\n"
	if [[ "$localip" == "16" ]]; then
		if [[ "$file" == "sxhkdrc" ]]; then
			cp "$local_repo/i3/sxhkd/$file" "$config_dir/i3/sxhkd/"
		else
			cp "$local_repo/i3/$file" "$config_dir/i3/"
		fi
	else
		if [[ "$file" == "sxhkdrc" ]]; then
			curl -so "$config_dir/i3/sxhkd/$file" "$Gitea_URL/$repository/i3/sxhkd/$file"
		else
			curl -so "$config_dir/i3/$file" "$Gitea_URL/$repository/i3/$file"
		fi
	fi
	printf "%s copied from the Gitea Server.\n" "$file"
}

copy_all_i3_configs() {
	local i3file
	local i3files=( "config" "sxhkdrc" "workspaces.conf" "autostart.sh" "logout" "dmconf.sh" "bindings.list" )
	for i3file in "${i3files[@]}"; do copy_i3_config "$i3file"; done
}

copy_polybar_config() {
	[[ -d "$config_dir/polybar" ]] || mkdir -p "$config_dir/polybar"
	printf "Downloading Polybar configuration file from Gitea server...\n"
	if [[ "$localip" == "16" ]]; then
		local file="config"
		cp "$local_repo/polybar/$file" "$config_dir/polybar/"
	else
		local file="config.ini"
		curl -so "$config_dir/polybar/$file" "$Gitea_URL/$repository/polybar/$file"
	fi
	configure_polybar
	printf "%s copied from the Gitea Server.\n" "$file"
}

configure_polybar() {
	local b_name e_name w_name cfg_file
	cfg_file="config.ini"
	[[ "$localip" == "16" ]] && cfg_file="config"
	e_name=$(/usr/bin/nmcli dev | awk '/ethernet/ {print $1}')
	w_name=$(/usr/bin/nmcli dev | awk '/wifi/ {print $1}')
	b_name=$(find /sys/class/power_supply/ -name "BAT*" | awk -F/ '/BAT/ {print $5}')
	if [[ "$w_name" ]]; then
		sed -i "s/wlan0/$w_name/" "$config_dir/polybar/$cfg_file"
	else
		sed -i '/^modules-right/s/ wlan//' "$config_dir/polybar/$cfg_file"
	fi
	if [[ "$e_name" ]]; then
		sed -i "s/eth0/$e_name/" "$$config_dir/polybar/$cfg_file"
	else
		sed -i '/^modules-right/s/ eth//' "$config_dir/polybar/$cfg_file"
	fi
	if [[ "$b_name" ]]; then
		sed -i "s/BAT0/$b_name/" "$config_dir/polybar/$cfg_file"
	else
		sed -i '/^modules-right/s/ battery//' "$config_dir/polybar/$cfg_file"
	fi
}

copy_polybar_launch() {
	local file="polybar-i3"
	printf "Copying the Polybar launch script from the Gitea server...\n"
	if [[ "$localip" == "16" ]]; then
		cp "$local_repo/polybar/$file" "$config_dir/polybar/"
	else
		curl -so "$config_dir/polybar/$file" "$Gitea_URL/$repository/$file"
	fi
	printf "%s copied from the Gitea Server.\n" "$file"
}

copy_rofi_configs() {
	local files=( "config.rasi" "arc_dark_colors.rasi" "arc_dark_transparent_colors.rasi"	)
	[[ -d "$config_dir/rofi" ]] || mkdir -p "$config_dir/rofi"
	if [[ "$localip" == "16" ]]; then
		for file in "${files[@]}"; do cp "$local_repo/rofi/$file" "$config_dir/rofi/"; done
	else
		for file in "${files[@]}"; do curl -so "$config_dir/rofi/$file" "$Gitea_URL/$repository/rofi/$file"; done
	fi
	printf "%s copied from the Gitea Server.\n" "${files[@]}"
}

copy_dunst_config() {
	local file="dunstrc"
	[[ -d "$config_dir/dunst" ]] || mkdir -p "$config_dir/dunst"
	if [[ "$localip" == "16" ]]; then
		cp "$local_repo/dunst/$file" "$config_dir/dunst/"
	else
		curl -so "$config_dir/dunst/$file" "$Gitea_URL/$repository/dunst$file"
	fi
	printf "%s copied from the Gietea Server.\n" "$file"
}

copy_dmconf() {
	local file="dmconf.sh"
	if [[ "$localip" == "16" ]]; then
		cp -p "$local_repo/i3/$file" "$config_dir/i3/"
	else
		curl -so "$config_dir/i3/$file" "$Gitea_URL/$repository/i3/$file"
	fi
	printf "%s copied from the Gitea Server.\n" "$file"
}

check_dependencies() {
	if exists i3; then
		printf "i3wm is installed.\n"
		sleep 2
		printf '\e[A\e[K'
		check_package curl
	else
		printf "i3wm is not installed.\n"
		help 0
	fi
}

main() {
	local noOpt optstr opt
	check_dependencies
	noOpt=1
	optstr=":abcdehklmprsw"
	while getopts "$optstr" opt; do
		case "$opt" in
			a )
				copy_i3_config "autostart.sh"
			;;
			b )
				copy_polybar_config
			;;
			c )
				copy_i3_config "config"
			;;
			d )
				copy_dunst_config
			;;
			e )
				copy_all_i3_configs
				copy_polybar_config
				copy_polybar_launch
				copy_rofi_config
				copy_dunst_config
			;;
			h )
				help 0
			;;
			i )
				copy_all_i3_configs
			;;
			k )
				copy_i3_config "bindings.list"
			;;
			l )
				copy_i3_config "logout"
			;;
			m )
				copy_dmconf
			;;
			p )
				copy_polybar_launch
			;;
			r )
				copy_rofi_configs
			;;
			s )
				copy_i3_config "sxhkdrc"
			;;
			w )
				copy_i3_config "workspaces.conf"
			;;
			? )
				printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
				help 2
		esac
		noOpt=0
	done
	[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
	shift "$(( OPTIND - 1 ))"
	leave "$script v$version"
}

## Execution ##

main "$@"
