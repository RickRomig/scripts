#!/usr/bin/env bash
#############################################################################
# Script Name  : rename-host
# Description  : Changes the system hostname
# Dependencies : None
# Arguments    : None
# Author       : Copyright (C) 2019, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 06 Nov 2019
# Updated      : 12 Jun 2025
# Comments     : Changes the hostname in both /etc/hostname and /etc/hosts.
#              : Rules based on hostname(7) man page
#              : Hostname length limited to 5-15 characters for NETBIOS compatibility.
#              : old_host & new_host variables are global for convenience.
#              : May get a “unable to resolve host” error after changing hostname in /etc/hosts. It will go away after reboting.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly old_host="${HOSTNAME:-$(hostname)}"
new_host=""

## Functions ##

hostname_rules() {
  cat << _RULES_

${lightblue}Hostname Rules${normal}
  ${orange}*${normal} 5-15 characters (for NETBIOS compatibility)
  ${orange}*${normal} a-z, 0-9, - (hyphen)
  ${orange}*${normal} lowercase (uppercase will be converted)
  ${orange}*${normal} no special characters
  ${orange}*${normal} first character cannot be a hyphen or a digit
  ${orange}*${normal} last character cannot be a hyphen
_RULES_
}

get_new_hostname() {
  local strlen=0
  local minlen=5
  local maxlen=15
  while true; do
    printf "\nCurrent hostname is %s\n\n" "$old_host"
    read -rp "Enter new hostname (Enter to cancel): " new_host
    strlen=${#new_host}
    if (( strlen < minlen || strlen > maxlen )); then
      printf "\n%sHostname must be between %d and %d characters.%s\n" "$orange" "$minlen" "$maxlen" "$normal" >&2
      hostname_rules
      continue
    fi
    # Check new hostname against the rules
    case "$new_host" in
      -* )
        printf "\n%sHostname cannot begin with a hypen.%s\n" "$orange" "$normal" >&2
        hostname_rules
        continue
      ;;
      *- )
        printf "\n%sHostname cannot end with a hyphen.%s\n" "$orange" "$normal" >&2
        hostname_rules
        continue
      ;;
      [0-9]* )
        printf "%s\nHostname cannot begin with a digit.%s\n" "$orange" "$normal" >&2
        hostname_rules
        continue
      ;;
      *[^a-zA-Z0-9-]* )
        printf "\n%sHostname cannot contain any special characters.%s\n" "$orange" "$normal" >&2
        hostname_rules
        continue
      ;;
      '' )
        printf "Rename hostname canceled. No changes made.\n"
        exit
      ;;
    esac

    # Compare new hostname with the old hostname
    new_host="${new_host,,}"
    if [[ "$new_host" == "${old_host,,}" ]]; then
      printf "%sHostnames are the same.%s\n" "$orange" "$normal" >&2
      hostname_rules
      continue
    else
      printf "\n%s%s is a valid hostname.%s\n" "$green" "$new_host" "$normal"
      break
    fi
  done
}

change_hostname() {
  printf "\nChanging the hostname from %s to %s ...\n" "$old_host" "$new_host"
  sudo sed -i "s/$old_host/$new_host/" /etc/hosts
  sudo hostnamectl set-hostname "$new_host"
  printf "Hostname successfully changed. Reboot to ensure the change takes effect.\n"
  # sudo systemctl restart systemd-resolved.service
}

main() {
  local script="${0##*/}"
  local version="5.3.25163"
  sudo_login 2
  printf "Renames the system hostname.\n"
  hostname_rules
  get_new_hostname
  change_hostname
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
