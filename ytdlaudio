#!/usr/bin/env bash
###############################################################################
# Script Name  : yt-dl-audio
# Description  : Download mp3 audio from YouTube.com to current directory
# Dependencies : yt-dlp
# Arguments    : Video URL or ID number
# Author       : Copyright Â© 2019, Richard B. Romig, 14 Nov 2019
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     : Accepts both full URLs and video id's such as AQcQgfvfF1M
#              : Downloads to current working directory
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

# Variables

_script=$(basename "$0"); readonly _script
readonly _version="0.2.1"
readonly _updated="09 Sep 2023"

## Functions ##

usage() {
  local errcode="${1:-2}"
  echo "Usage: $_script [video-url] [video-ID]"
  echo "$_script https://www.youtube.com/watch?v=8hLlU0EML4U"
  echo "$_script 8hLlU0EML4U"
  exit "$errcode"
}

check_dependencies() {
  if [ -x /usr/local/bin/yt-dlp ]; then
    printf "yt-dlp [OK]\n"
    sleep 2
  else
    die "yt-dlp is not installed." 1
  fi
}

## Execution ##

check_dependencies

if [[ -z "$1" ]]; then
  echo "${lightred}Error:${normal} No argument passed." >&2
  usage 2
elif [[ "$1" == "--help" || "$1" == "-h" ]]; then
  usage 0
elif [[ "$1" =~ ^https?:\/\/.* ]]; then
  # match by regex, starts with http:// or https://
  # \/ in regex will be seen as / in this context
  url=$*
else
  # match by video ID
  url="https://www.youtube.com/watch?v=$*"
fi

clear
box "YouTube Audio Download"
echo "$_script v$_version"
echo "($_updated)"
echo $'\n'$"${bold}${blue}Downloading m4a audio for $url${normal}"
if /usr/local/bin/yt-dlp -f 140  -xic --embed-thumbnail --restrict-filename --output "%(title)s.%(ext)s" "$url"; then
  leave "Download successful."
else
  EC="$?"
  die "Download failed." "$EC"
fi
