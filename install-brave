#!/usr/bin/env bash
#############################################################################
# Script Name  : install-brave
# Description  : installs the Brave broswer
# Dependencies : apt-transport-https, curl, libu2f-udev
# Arguments    : see help function
# Author       : Copyright (C) 2019, Richard B. Romig
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 12 Dec 2019
# Updated      : 25 Jun 2025
# Comments     : For Debian, Ubuntu, Mint ... (Code from Brave's instructions)
#              : Brave is only supported on 64-bit AMD/Intel architectures (amd64/x86_64).
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly version="5.0.25176"
readonly brave_key="/usr/share/keyrings/brave-browser-archive-keyring.gpg"
readonly brave_list="/etc/apt/sources.list.d/brave-browser-release.list"

## Functions ##

show_message() {
	local message="$1"
	[[ "$verbose_mode" == "$TRUE" ]] && echo "$message"
}

brave_ver() {
  brave-browser --version
}

install_brave() {
  local key_url="https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg"
  local list_url="https://brave-browser-apt-release.s3.brave.com/ stable main"
  printf "Installing the Brave Browser ...\n"
  show_message "Importing public key for verification of the APT repository"
  sudo curl -fsSLo "$brave_key" "$key_url"
  show_message "Craeating /etc/apt/sources.list.d/brave-browser-release.list"
  echo "deb [signed-by=$brave_key arch=amd64] $list_url" | sudo tee "$brave_list" > /dev/null
  show_message "Updating apt cache and isntalling the Brave browser"
  sudo apt-get update -qq
  sudo apt-get install brave-browser brave-keyring -yy
  printf "%ssuccessfully installed.\n" "$(brave_ver)"
}

remove_brave() {
	local apt_key="/etc/apt/trusted.gpg.d/brave-browser-release.gpg"
  printf "Uninstalling %s...\n" "$(brave_ver)"
  show_message "Removing the Brave browser and keyring"
  sudo apt-get remove brave-browser brave-keyring -yy
  # Remove trusted keys
  if [[ -f "$apt_key" ]]; then
    show_message "Removing $apt_key"
    sudo rm "$apt_key"
    sudo apt-key del C3D4E821 2>/dev/null # apt-key deprecated
  elif [[ -f "$brave_key" ]]; then
    show_message "Removing $brave_key"
    sudo rm "$brave_key"
  fi
  show_message "Removing $brave_list"
  [[ -f "$brave_list" ]] && sudo rm "$brave_list"
  printf "Brave browser has been uninstalled.\n"
}

purge_configs() {
  show_message "Removing local configuration and cache files"
  find ~/ -type d -name BraveSoftware -exec rm -rf {} \;
  printf "Brave local configuration and cache files have been removed.\n"
}

help() {
  local errcode="${1:-2}"
  local updated="25 Jun 2025"
  cat << _HELP_
${orange}$script${normal} $version, Updated: ($updated)
Installs/Removes the Brave browser

${green}Usage:${normal} $script [-h] [-i] [-p] [-r] [-v]

${orange}Available options:${normal}
  -h  Show this help message and exit.
  -i  Install the Brave Browser.
  -p  Remove the Brave Browser & purge configuration files.
  -r  Remove the Brave Browser & leave configuration files.
  -v  Enable verbose mode. Must preceed other flags.
_HELP_
  exit "$errcode"
}

check_dependencies() {
  local packages=( apt-transport-https curl libu2f-udev )
  if [[ $(uname -m) == "x86_64" ]]; then
    printf "x86_64 - OK\n"
    sleep 2
    printf '\e[A\e[K'
    check_packages "${packages[@]}"
  else
    die "System architecture is not 64-bit." 1
  fi
}

main(){
  local noOpt opt optstr
  noOpt=1
  optstr=":hiprv"
  while getopts "$optstr" opt; do
    case "$opt" in
      h )
        help 0
        ;;
      i )
        exists brave-browser && leave "$(brave_ver)is already installed."
        sudo_login 2
        check_dependencies
        install_brave
        ;;
      p )
        exists brave-browser || leave "Brave browser is not installed."
        sudo_login 2
        remove_brave
        purge_configs
        ;;
      r )
        exists brave-browser || leave "Brave browser is not installed."
        sudo_login 2
        remove_brave
        ;;
			v )
				verbose_mode="$TRUE"
				show_message "Verbose mode enabled."
			  ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
    noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
