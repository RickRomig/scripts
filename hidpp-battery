#!/usr/bin/env bash
##########################################################################
# Script Name  : hidpp-battery
# Description  : Displays status of HIDPP battery
# Dependencies : upower
# Arguments    : See help function
# Author       : Copyright Â© 2023 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 23 Sep 2023
# Last updated : 10 Aug 2025
# Comments     : Defaults to using /sys/class/power_supply
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly version="1.5.25222"

## Functions ##

help() {
	local errcode="${1:-2}"
	local updated="10 Aug 2025"
	cat << _HELP_
${orange}$script${normal} $version, Upated: $updated
Displays HIDPP battery status.

${green}Usage:${normal} $script [OPTION]

${orange}Available options:${normal}
	-h	Show this help message and exit.
	-s	HID++ battery status using /sys/class/power_supply.
	-u	HID++ battery status using upower utility.
	Defaults to using /sys/class/power_supply if no argument passed.
_HELP_
  exit "$errcode"
}

sys_class_data() {
	local hidpp_path="/sys/class/power_supply/hidpp_battery_0"
	if [[ -d "$hidpp_path" ]]; then
	  printf "%-17s%-15s%-7s%-8s%s\n" "Device" "Manufacturer" "Model" "Charge" "Serial number"
	  printf "%-17s%-15s%-7s%-8s%s\n" "${hidpp_path##*}" \
	  "$(cat "$hidpp_path/manufacturer")" "$(cat "$hidpp_path/model_name")" \
	  "$(cat "$hidpp_path/capacity")%" "$(cat "$hidpp_path/serial_number")"
	else
	  printf "No hidpp battery found.\n"
	fi
}

upower_data() {
	check_package upower
	local hidpp_data
	if /usr/bin/upower -e | grep -q mouse_hidpp_battery; then
	  hidpp_data=$(/usr/bin/upower -i "$(/usr/bin/upower -e | grep hidpp)")
	  printf "%-17s%-7s%-8s%s\n" "Device" "Model" "Charge" "Serial number"
	  printf "%-17s%-7s%-8s%s\n" "$(echo "$hidpp_data"| awk '/native-path/ {print $NF}')" \
	  "$(echo "$hidpp_data"| awk '/model/ {print $NF}')" \
	  "$(echo "$hidpp_data"| awk '/percentage/ {print $NF}')" \
	  "$(echo "$hidpp_data"| awk '/serial/ {print $NF}')"
	else
	  printf "No hidpp battery found.\n"
	fi
}

main() {
	local noOpt optstr opt
	noOpt=1
	optstr=":hsu"
	while getopts "$optstr" opt; do
		case "$opt" in
			h )
				help 0
				;;
			s )
				sys_class_data
				;;
			u )
				upower_data
				;;
			? )
				printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
				help 2
		esac
		noOpt=0
	done
	[[ "$noOpt" = 1 ]] && sys_class_data
	shift "$(( OPTIND - 1 ))"
	over_line "$script $version"
}

## Execution ##

main "$@"
