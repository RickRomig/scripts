#!/usr/bin/env bash
###############################################################################
# Script Name  : yt-dl-audio
# Description  : Download mp3 audio from YouTube.com to current directory
# Dependencies : yt-dlp
# Arguments    : Video URL or ID number
# Author       : Copyright Â© 2019, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 14 Nov 2019
# Updated      : 01 Jul 2025
# Comments     : Accepts both full URLs and video id's such as AQcQgfvfF1M
#              : Downloads to current working directory
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Global Variables ##

readonly script="${0##*/}"
readonly version="3.3.25182"

## Functions

help() {
  local errcode="${1:-2}"
  local -r updated="01 Jul 2025"
  cat << _HELP_
${orange}$script${normal} $version, Updated: $updated
Downloads mp3 audio from YouTube videos to current working diretory.

${green}Usage:${normal} $script [-h] [video-url] [video-ID]
${orange}Available options:${normal}
  -h | --help  Show this help message and exit.

$script https://www.youtube.com/watch?v=8hLlU0EML4U
$script 8hLlU0EML4U

_HELP_
  exit "$errcode"
}

check_dependencies() {
  if [ -x /usr/local/bin/yt-dlp ]; then
    printf "yt-dlp [OK]\n"
    sleep 2
    printf '\e[A\e[K'
    check_package ffmpeg
 else
    die "yt-dlp is not installed." 1
  fi
}

download_audio() {
  local ec url
  url="$1"
  box "* YouTube Audio Download *" "*"
  printf "\nDownloading mp3 audio from %s to %s...\n" "$url" "$PWD"
  if /usr/local/bin/yt-dlp --add-metadata -xic --embed-thumbnail --restrict-filename --audio-format mp3 --output "%(title)s.%(ext)s" "$url"; then
    printf "Download successful.\n"
  else
    ec="$?"
    printf "Download failed. Error: %d" "$ec"
  fi
}

main() {
  local url
  if [[ "$#" = 0 ]]; then
    printf "%s No argument passed.\n" "$RED_ERROR" >&2
    help 2
  elif [[ "$1" == "--help" || "$1" == "-h" ]]; then
    help 0
  elif [[ "$1" =~ ^https?:\/\/.* ]]; then
    # match by regex, starts with http:// or https://
    audio_url=$*
  else
    # match by video ID
    audio_url="https://www.youtube.com/watch?v=$*"
  fi
  check_dependencies
  download_audio "$audio_url"
  over_line "$script v$version" "-"
  exit
}

# Execution

main "$@"
