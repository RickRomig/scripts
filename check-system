#!/usr/bin/env bash
#####################################################################
# Script Name  : check-system
# Description  : Provides a snapshot of system resources
# Dependencies : lm-sensors, sensors
# Arguments    : none
# Author       : Richard Romig, 17 November 2018
# Email        : rick.romig@gmail.com
# Comment      : Inspired by scripts by Joe Collins <https://www.ezeeLinux.com>
#              : and Luke Smith  <https://lukesmith.xyz>
# 13 Feb 2022  : Added `-x fuse.portal` to df command to eliminate this error:
#              : df: /run/user/1000/doc: Operation not permitted
# License      : GNU General Public License, version 2.0
#####################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

readonly _script=$(basename "$0")
readonly _version="0.3.4"
readonly _updated="14 Feb 2022"

# install lm-sensors if not already installed.
printf "Checking dependencies...\n"
check_package lm-sensors

## Execution ##

clear
echo -e "${lightyellow}\U1F427 System Status${normal}"
echo -e "${orange}Computer name:\t$(uname -n)"
echo -e "Distribution:\t$(get_distribution)"
echo -e "Kernel Version:\t$(uname -sr)${normal}\n"

echo "${orange}Memory usage:${normal}"
echo "Memory used: $(/usr/bin/free -h | awk '/^Mem:/ {print $3 "/" $2}')"
echo -e "Process\t\tPercentage"
ps axch -o cmd:15,%mem --sort=-%mem | head -n 10

echo $'\n'$"${orange}CPU usage:${normal}"
if [[ -x /usr/bin/sensors ]]; then
  cpu_temp=$(/usr/bin/sensors | awk '/^Package/ {print $4}')
  [[ -z "$cpu_temp" ]] && cpu_temp=$(/usr/bin/sensors | awk '/^CPU/ {print $2}')
  [[ -z "$cpu_temp" ]] && cpu_temp=$(/usr/bin/sensors | awk '/^Core 0:/ {print $3}')
  [[ -z "$cpu_temp" ]] && cpu_temp=$(/usr/bin/sensors | awk '/^temp1:/ {print $2}')
  echo "CPU temperature: $cpu_temp"
else
  echo "Sensor information not avaliable." >&2
fi
echo -e "Process\t\tPercentage"
ps axch -o cmd:15,%cpu --sort=-%cpu | head -n 10

# prints 1st line of df outuput and lines beginning with `/`
echo $'\n'$"${orange}Disk usage:${normal}"
df -hT -x fuse.portal | sed -n '1p;/^\//p'

printf "\nThe system has been %s.\n" "$(uptime -p)"

printf "\n%s v%s (%s)\n" "$_script" "$_version" "$_updated"

exit
