#!/usr/bin/env bash
###############################################################################
# Script Name  : mosfanet-configs
# Description  : Custom configurations for a new Linux system
# Dependencies : curl
# Arguments    : See help function for available options.
# Author       : Copyright (C) 2019, Richard B. Romig, MosfaNet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 15 Aug 2019
# updated      : 29 Jun 2025
# Comments     :
# TODO (rick)  : Retire this script. No longer applicable.
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

script_dir=$(dirname "$(readlink -f "${0}")"); readonly script_dir
readonly script="${0##*/}"
readonly version="1.4.25180"
readonly cfg_bu_dir="$HOME/.config/backup"
readonly repo_path="configs/raw/branch/main/"
count=0

## Functions ##

help() {
  local errcode updated
  errcode="${1:-2}"
  updated="29 Jun 2025"
  cat << _HELP_
  ${orange}$script${normal} $version, Updated $updated
Installs customized configurations files for new Linux installations.
Configurations are downloand from the Mosfanet Gitea server.

${green}Usage:${normal} $script [-a] [-b] [-c] [-f] [-h] [-i] [-n] [-p]
${orange}OPTIONS:${normal}
  -a  .bash_aliases
  -b  .bashrc
  -c  Cinnamon keybindings
  -f  .face
  -h  help
  -i  .inputrc
  -n  nanorc
  -p  .profile
  Multiple options can be entered.
_HELP_
  exit "$errcode"
}

dl_bashrc() {
  cp -pv "$HOME/.bashrc" "$cfg_bu_dir/.bashrc" | awk '{print "==> "$NF}'
  curl -so "$HOME/.bashrc" "$GITEA_URL/$repo_path/.bashrc"
  printf "Custom .bashrc installed in the home directory.\n"
  (( count++ ))
}

dl_aliases() {
  [[ -f "$HOME/.bash_aliases" ]] && cp -pv "$HOME/.bash_aliases" "$cfg_bu_dir/.bash_aliases" | awk '{print "==> "$NF}'
  curl -so "$HOME/.bash_aliases" "$GITEA_URL/$repo_path/.bash_aliases"
  printf "Custom .bash_aliases added to the home directory.\n"
  (( count++ ))
}

dl_profile() {
  [[ -f "$HOME/.profile" ]] && cp -pv "$HOME/.profile" "$cfg_bu_dir/.profile" | awk '{print "==> "$NF}'
  curl -so "$HOME/.profile" "$GITEA_URL/$repo_path/.profile"
  printf "Custom .profile installed in the home directory.\n"
  (( count++ ))
}

nanorc_cfg() {
  local cfg_dir sed_file
  cfg_dir="$HOME/.config/nano"
  sed_file="$script_dir/files/nano.sed"
  [[ -d "$cfg_dir" ]] || mkdir -p "$cfg_dir"
  cp -v /etc/nanorc "$cfg_dir/nanorc" | awk '{print "==> "$NF}'
  sed -i -f "$sed_file" "$cfg_dir/nanorc"
  [[ -f "$HOME/.nanorc" ]] && rm "$HOME/.nanorc"
  printf "nanorc configured.\n"
  (( count++ ))
}

dl_face() {
  [[ -f "$HOME/.face" ]] && cp -pv "$HOME/.face" "$cfg_bu_dir/.face" | awk '{print "==> "$NF}'
  curl -so "$HOME/.face" "$GITEA_URL/$repo_path/.face"
  printf ".face added to the home directory.\n"
  (( count++ ))
}

dl_inputrc() {
  [[ -f "$HOME/.inputrc" ]] && cp -pv "$HOME/.inputrc" "$cfg_bu_dir/.inputrc" | awk '{print "==> "$NF}'
  curl -so "$HOME/.inputrc" "$GITEA_URL/$repo_path/.inputrc"
  printf ".inputrc added to the home directory.\n"
  (( count++ ))
}

dl_cinnamon_keybindings() {
  if is_cinnamon; then
    local cinnamon_keybindings="keybindings-backup.dconf"
    curl -so "$HOME/.config/$cinnamon_keybindings" "$GITEA_URL/$repo_path/$cinnamon_keybindings"
    dconf load /org/cinnamon/desktop/keybindings/ < "$HOME/.config/$cinnamon_keybindings"
    printf "Cinnamon Keybindings installed.\n"
    (( count++ ))
  else
    printf "\nThe desktop environment is not Cinnamon.\n" >&2
  fi
}

main() {
  local noOpt optstr opt
  check_package curl
  [[ -d "$cfg_bu_dir" ]] || mkdir -p "$cfg_bu_dir"
  noOpt=1
  optstr=":abcfhinp"
  while getopts "$optstr" opt; do
    case "$opt" in
      a )
        dl_aliases
        ;;
      b )
        dl_bashrc
        ;;
      c )
        dl_cinnamon_keybindings
        ;;
      f )
        dl_face
        ;;
      h )
        help 0
        ;;
      i )
        dl_inputrc
        ;;
      n )
        nanorc_cfg
        ;;
      p )
        dl_profile
        ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
    noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  if (( count == 0 )); then
    printf "No custom configuration files installed.\n"
  else
    printf "Custom configurations installed.\n"
  fi
  leave "$script v$version"
}

## Execution ##

main "$@"
