#!/usr/bin/env bash
###############################################################################
# Script Name  : mk-readme
# Description  : Creates shell for a README.md file from a template
# Dependencies : sed
# Arguments    : name of project
# Author       : Copyright Â© 2019 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | eick.romig@mymetronet.net
# Created      : 09 Apr 2019
# Updated      : 26 Feb 2025
# Comment      : Should be run from the project's main directory.'
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Global Variables ##

script=$(basename "$0"); readonly script
readonly version="3.0.25057"
verbose_mode="$FALSE"

# Information to be inserted into README template
# For sed, forward slashes have to be escaped with backslashes

## Functions ##

help() {
  local errcode="${1:-2}"
  local updated="26 Feb 2025"
  cat << _HELP_
${orange}$script${normal} $version, updated: $updated
Creates a README file for a project.

${green}Usage:${normal} $script <project-name>

${orange}Available options:${normal}
  -c  Create a README file
      $script -c <project-name>
  -h  Show this help message and exit
  -v  Enable verbose mode (Must precede c flag)
      $script -vc <project-name>
_HELP_
  exit "$errcode"
}

show_message() {
	local message="$1"
	[[ "$verbose_mode" == "$TRUE" ]] && echo "$message"
}

create_readme() {
  local blog_name blog_url copy_holder email_addr1 email_addr2 template_dir today
  project="$1"
  copy_holder="Richard B. Romig"
  github="RickRomig"
  blog_name="Ricks Tech Stuff"
  blog_url="ricktech"
  email_addr1="rick.romig@gmail.com"
  email_addr2="rick.romig@mymetronet.net"
  today=$(date +"%d %B %Y")
  template_dir="$HOME/bin/Templates"

  show_message "Importing data into README.md"
  sed -e '1d' \
    -e "s/<PROJECT>/$project/" \
    -e "s/<GITHUB>/$github/" \
    -e "s/<BLOG>/$blog_name/" \
    -e "s/<BLOGURL>/$blog_url/" \
    -e "s/<EMAIL1>/$email_addr1/g" \
    -e "s/<EMAIL2>/$email_addr2/g" \
    -e "s/<AUTHOR>/$copy_holder/" \
    -e "s/<DATE>/$today/" "$template_dir/readme.txt" > README.md
  printf "The README.md for %s$project has been created." "$$project"
  edit_view_quit README.md
}

main() {
  local noOpt opt optstr project_name
  noOpt=1
  optstr=":c:hv"
  while getopts "$optstr" opt; do
    case "$opt" in
      c )
        project_name="$OPTARG"
        [[ -f README.md ]] && { printf "%s README.md already exists.\n" "$RED_ERROR" >&2; help 2; }
        show_message "Creating README for $project_name"
        create_readme "$project_name"
      ;;
			h )
				help 0
			;;
			v )
				verbose_mode="$TRUE"
				show_message "Verbose mode enabled."
			;;
			: )
				printf "%s Must supply an argument to -%s.\n" "$RED_ERROR" "$OPTARG" >&2
				help 2
      ;;
			? )
				printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
				help 2
    esac
    noOpt=0
  done
	[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
	shift "$(( OPTIND - 1 ))"
	over_line "$script $version"
	exit
}

## Execution ##

main "$@"
