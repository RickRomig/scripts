#!/usr/bin/env bash
###############################################################################
# Script Name  : iru-chrome
# Description  : Download and install the Google Chrome browser
# Dependencies : wget
# Arguments    : -h -i -r -u (See help function)
# Author       : Copyright (C) 2019 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 18 Jul 2019
# Updated      : 27 Jun 2025
# Comments     : Google Chrome should update through apt
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

readonly script="${0##*/}"
readonly version="3.21.25178"
readonly chrome_list="/etc/apt/sources.list.d/google-chrome.list"
readonly keyring_dir="/usr/share/keyrings"
readonly trusted_key="google-chrome.gpg"

## Functions ##

help() {
	local errcode="${1:-2}"
	local -r updated="27 Jun 2025"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Installs, updated, or removes Google Chrome.

${green}Usage:${normal} $script [-h] [-i] [-r] [-u]

${orange}Available options:${normal}
  -h  Show this help message and exit
  -i  Install Google Chrome
  -r  Remove Google Chrome
  -u  Update Google Chrome (normally throught apt updates)
_HELP_
  exit "$errcode"
}

chrome_version() {
  google-chrome-stable --version | cut -d' ' -f3
}

install_chrome() {
  local trusted_key_url source_list
  trusted_key_url="https://dl.google.com/linux/linux_signing_key.pub"
  source_list="deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main"
  curl -fSsL "$trusted_key_url" | gpg --dearmor | sudo tee "$keyring_dir/$trusted_key" > /dev/null
  echo "$source_list" | sudo tee "$chrome_list" > /dev/null
  sudo apt update
  if sudo apt-get install -y google-chrome-stable; then
    printf "Google Chrome %s successfully installed.\n" "$(chrome_version)"
  else
    printf "Google Chrome installation failed.\n" >&2
  fi
}

purge_chrome() {
  sudo_login 2
  sudo apt purge google-chrome-stable
  [[ -f "$keyring_dir/$trusted_key" ]] && sudo rm -v "$keyring_dir/$trusted_key"
  [[ -f "$chrome_list" ]] && sudo rm -v "$chrome_list"
  find "$HOME/.*" -type d -name google-chrome -exec rm -rf {} \;
  printf "Google Chrome removed from this computer.\n"
}

update_chrome() {
  sudo_login 2
  printf "Current version: %s/n" "$(chrome_version)"
  sudo apt install google-chrome-stable
  printf "Google Chrome updated to %s.\n" "$(chrome_version)"
}

main() {
  local noOpt opt optstr
  noOpt=1
  optstr=":hiru"
  while getopts "$optstr" opt; do
    case "$opt" in
      h )
        help 0
        ;;
      i )
        if exists google-chrome-stable; then
          printf "Google Chrome %s is already installed.\n" "$(chrome_version)" >&2
        else
          sudo_login 2
          check_package wget
          install_chrome
        fi
        ;;
      r )
        if exists google-chrome-stable; then
          purge_chrome
        else
          printf "Google Chrome is not installed.\n" >&2
        fi
        ;;
      u )
        if exists google-chrome-stable; then
          update_chrome
        else
          printf "Google Chrome is not installed.\n" >&2
        fi
        ;;
      ? )
        printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
        help 2
    esac
	  noOpt=0
  done
  [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
  shift "$(( OPTIND - 1 ))"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
