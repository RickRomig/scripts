#!/usr/bin/env bash
###############################################################################
# Script Name  : iru-chrome
# Description  : Download and install the Google Chrome browser
# Dependencies : wget
# Arguments    : -h -i -r -u (See help function)
# Author       : Copyright (C) 2019 Richard B. Romig, 18 July 2019
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comments     : Google Chrome should update through apt
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091,SC2034

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.3.14"
readonly _updated="16 Oct 2023"
readonly chrome_list="/etc/apt/sources.list.d/google-chrome.list"
readonly keyring_dir="/usr/share/keyrings"
readonly trusted_key="google-chrome.gpg"

## Functions ##

check_dependencies() {
  check_package wget
}

chrome_ver() {
  google-chrome-stable --version | awk '{print $NF}'
}

install_chrome() {
  local trusted_key_url="https://dl.google.com/linux/linux_signing_key.pub"
  local source_list="deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main"
  user_in_sudo
  curl -fSsL "$trusted_key_url" | gpg --dearmor | sudo tee "$keyring_dir/$trusted_key" > /dev/null
  echo "source_list" | sudo tee "$chrome_list" > /dev/null
  sudo apt update
  if sudo apt-get install -y google-chrome-stable; then
    echo "Google Chrome $(chrome_ver) successfully installed."
  else
    echo "Google Chrome installation failed." >&2
  fi
}

purge_chrome() {
  user_in_sudo
  sudo apt purge google-chrome-stable
  [[ -f "$keyring_dir/$trusted_key" ]] && sudo rm -v "$keyring_dir/$trusted_key"
  # sudo apt-key del D38B4796 2>/dev/null #apt-key deprecated
  [[ -f "$chrome_list" ]] && sudo rm -v "$chrome_list"
  [[ -d "$HOME/google-chromme" ]] && rm -rf "$HOME/google-chromme"
  echo "Google Chrome removed from this computer."
}

update_chrome() {
  user_in_sudo
  sudo apt install google-chrome-stable
  echo "Google Chrome updated to $(chrome_ver)."
}

help() {
  local errcode="${1:-2}"
  cat << END_HELP
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
  -h = Help
  -i = Install Google Chrome
  -r = Remove Google Chrome
  -u = Update Google Chrome
$_script v$_version ($_updated)
END_HELP
  exit "$errcode"
}

## Execution ##

echo "${orange}Installs Google Chrome${normal}"

noOpt=1
optstr=":hiru"
while getopts "$optstr" opt; do
  case "$opt" in
    h )
      help 0
    ;;
    i )
      exists google-chrome-stable && leave "Google Chrome $(chrome_ver) already installed."
      check_dependencies
      install_chrome
    ;;
    r )
      exists google-chrome-stable || leave "Google Chrome is not installed."
      purge_chrome
    ;;
    u )
      exists google-chrome-stable || leave "Google Chrome is not installed."
      update_chrome
    ;;
    ? )
      echo "${lightred}ERROR:${normal} Invalid option -${OPTARG}." >&2
    help 2
  esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
leave "$_script v$_version ($_updated)"
