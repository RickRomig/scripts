#!/usr/bin/env bash
#####################################################################
# Script Name  : mk-changelog
# Description  : Create a changelog file from a template
# Dependencies : sed
# Arguments    : Project name
# Author       : Richard B. Romig, 09 April 2019
# Email        : rick.romig@gmail.com
# Comment      :
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="1.0.1"
readonly _updated="21 Mar 2023"
readonly conf_dir="$HOME/.config/scripts"
readonly conf_file="$_script.conf"
readonly today=$(date +"%d %B %Y")

# Data to insert into new bash script
# template directory, copy_holder, email_addr, email_addr1, coder, license contained in script's .conf file.

## Functions ##

create_conf() {
  [[ -d "$conf_dir" ]] || mkdir -p "$conf_dir"
  echo "Complete all fields"
  read -rp "Full name: " copy_holder
  read -rp "Primary email: " email_addr
  read -rp "Alternate email: " email_addr1
  read -rp "Template diretory (full path): " template_dir

  echo "
  copy_holder='$copy_holder'
  email_addr='$email_addr'
  email_addr1='$email_addr1'
  template_dir='$template_dir'
  " > "$conf_dir/$conf_file"
}

usage() {
  local errcode="${1:-2}"
  echo "${orange}Usage:${normal} $_script <project-name>"
  echo "${orange}Example:${normal} $_script my-project"
  exit "$errcode"
}

## Execution ##

## Source script configuration file ##

[[ -f "$conf_dir/$conf_file" ]] || create_conf
source "$conf_dir/$conf_file"

## Check arguments ##

if [[ -z "$1" ]]; then
  echo "${lightred}Error:${normal} No argment passed." >&2
  usage 2
elif [[ "$1" = "-h" || "$1" = "--help" ]]; then
  echo "$_script v$_version ($_updated)"
  usage 0
else
  project=$1
fi

# Introduction

echo "$_script v$_version ($_updated)"
echo "Creating a changelog.md template for project $project"

# Fill in placeholders and create changelog.md

sed -e '1d' \
    -e "s/<PROJECT>/$project/" \
    -e "s/<AUTHOR>/$copy_holder/" \
    -e "s/<EMAIL>/$email_addr/" \
    -e "s/<EMAIL1>/$email_addr1/" \
    -e "s/<DATE>/$today/" "$template_dir/changelog" > changelog.md

echo "The changelog.md for $project has been created."
edit_view_quit changelog.md

exit
