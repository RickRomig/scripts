#!/usr/bin/env bash
##########################################################################
# Script Name  : porn-dl
# Description  : Download videos from porn sites with best quality
# Dependencies : yt-dlp fzf ffmpeg
# Arguments    : Video URL
# Author       : Copyright Â© 2019, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 05 Apr 2019
# Updated      : 22 Jul 2025
# Comments     : match by regex, starting with http:// or https://
#              : Downloads videos to selected directory under ~/Videos/Pornography/
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  echo -e "\e[91mERROR:\e[0m functionlib not found!" >&2
  exit 1
fi

set -eu

## Global Variables ##

readonly script="${0##*/}"
readonly version="4.2.25203"
readonly updated="22 Jul 2025"
FMENU="fzf --header=$script \
           --layout=reverse \
           --exact \
           --border=bold \
           --border=rounded \
           --margin=5% \
           --color=dark \
           --height=95% \
           --info=hidden \
           --header-first \
           --bind change:top \
           --prompt"
ec=0

## Functions ##

help() {
  local errcode="${1:-2}"
	cat << _HELP_
${orange}$script${normal} $version ($updated)
Dowload videos from adult sites to ~/Videos/Pornography subdirectory.

${green}Usage:${normal} $script [-h] [-i] [video-url]
  $script https://www.pornhub.com/view_video.php?viewkey=ph5ccfa07f0e2a6

${orange}Available options:${normal}
  -h | --help  Show this help message and exit
  -i | --info  Show information about the script and exit
_HELP_
  exit "$errcode"
}

script_info() {
  cat << _INFO_
  $script uses yt-dlp to download videos from adult sites such as PornHub
  and RedTube. The video URL is passed to the script on the command line.
  The script will extract the name of the site for later use.

  The script will then present a menu of subdirectories under ~/Videos/Pornography/.
  Select the apprpriate subdirectory.

  The the video will be downloaded to the selected sub-directory  The script is
  hard-coded to save the file as title.ext. Spaces in the title will be replaced
  by underscores. Metadata will added to the file.

  When the download is completed, success or failure is displayed. If the
  download fails, the script exits with an error code.

  Version: $version
  Updated: $updated
_INFO_
  exit
}

check_dependencies() {
  local packages=(ffmpeg fzf)
  if [[ -x /usr/local/bin/yt-dlp ]]; then
    printf "yt-dlp [OK]\n"
    sleep 2
    printf '\e[A\e[K'
    check_packages "${packages[@]}"
  else
    die "yt-dlp is not installed." 1
  fi
}

extract_domain() {
  local domain fullurl
  fullurl="$1"
  domain=$(echo "$fullurl" | sed 's|^[^/]*//||;s|^www\.||;s|/.*$||;s|\..*$||')
  printf "%s" "$domain"
}

select_directory() {
	local vid_d selected_directory
	local video_dir=$HOME"/Videos/Pornography"
  local directories=()
  for vid_d in $video_dir; do
    [[ -d "$vid_d" ]] && directories+=("$(find "$video_dir" -type d -print | sort -d)")
  done
  selected_directory=$($FMENU "Select destination directory: " < <(printf "%s\n" "${directories[@]}"))
	printf "%s" "$selected_directory"
}

download_video() {
  local site url destination
  url="$1"
  site="$2"
  clear
	destination=$(select_directory)
  center_text "== ${site^} Download =="
  printf "\n%s%sDownloading video from %s to " "$bold" "$blue" "${site^}"
	printf "%s...%s\n" "$destination" "$normal"
  if /usr/local/bin/yt-dlp -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best" --add-metadata -ic --restrict-filename -o "$destination/%(title)s.%(ext)s" "$url"
  then
    printf "Download successful.\n"
  else
    ec="$?"
    printf "Download failed. Error: %d\n" "$ec"
  fi
}

main() {
  local site url
  # Check arguments, fetch URL and extract site name
  if [[ $# -eq 0 ]]; then
    printf "%s No argument passed.\n" "$RED_ERROR" >&2
    help 2
  elif [[ "$1" == "--info" || "$1" == "-i" ]]; then
    script_info
  elif [[ "$1" == "--help" || "$1" == "-h" ]]; then
    help 2
  elif [[ "$1" =~ ^https?:\/\/.* ]]; then
    # match by regex, starts with http:// or https://
    url=$*
    # Extract domain without www and .com
    site=$(extract_domain "$url")
    check_dependencies
    download_video "$url" "$site"
    over_line "$script $version"
    exit "$ec"
  else
    diehard "Invalid argument. Enter full URL." "$script $version"
  fi
}

## Execution ##

main "$@"
