#!/usr/bin/env bash
###############################################################################
# Script Name  : bs-meter
# Description  : Bullshit Meter
# Dependencies : none
# Arguments    : None
# Author       : Copyright (C) 2019, Richard B. Romig
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 17 Aug 2019
# Last updated : 16 Jul 2025
# Comments     : For entertainiment purposes only.
# TODO (Rick)  :
# License      : GNU General Public License, version 2
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Functions ##

print_header() {
  local space_42
  space_42=$(for i in {1..42};do echo -n " ";done)
  echo $'\n'$"${space_42}${bold}${green}Bullshit Meter${normal}"
  scale_numbers
  scale_marks
}

scale_numbers() {
  local i j index
  index=0
  printf "%s" "$index"
  for i in {1..10}; do
    for j in {1..8}; do
      printf " "
    done
    index=$(( index + 10 ))
    printf "%s" "$index"
  done
  printf "\n"
}

# SC2034 (warning): j appears unused. Verify use (or export if used externally).
# shellcheck disable=SC2034
scale_marks() {
  local i j
  printf "|"
  for i in {1..10}; do
    for j in {1..9}; do
      printf "-"
    done
    printf "|"
  done
  printf "\n"
}

print_indicator() {
  local level="$1"
  printf "%s%s" "$bold" "$orange"
  for (( i=0; i <= "$level"; i++ )); do
    printf "*"
  done
  printf "%s\n" "$normal"
}

print_analysis() {
  local level="$1"
  printf "\nYour statement has been analyzed and found to be %s%% bullshit -- " "$level"
  case "$level" in
    0 )
      printf "absolutely true\n" ;;
    [1-9] )
      printf "very likely true.\n" ;;
    1[0-9] )
      printf "mostly true.\n" ;;
    [2-4]? )
      printf "somewhat true.\n" ;;
    [5-6]? )
      printf "might be false.\n" ;;
    [7-8]? )
      printf "probably false.\n" ;;
    9[0-9] )
      printf "mostly false.\n" ;;
    * )
      printf "absolutely false!\n"
  esac
}

print_title() {
  center_text "Bullshit Meter"
  center_text "Enter a statement to be verified and wait for it to be analyzed."
  center_text "Once its bullshit content has been determined, the results will be displayed."
  center_text "This program is for entertainment purposes only and its accuracy cannot be guaranteed."
  echo ""
}

main() {
  local _statement bs_level
  local script="${0##*/}"
  local version="5.4.25197"
  bs_level=$(shuf -i 0-100 -n 1)

  clear
  print_title
  read -rp "Statement to be analyzed: " _statement
  printf "\nAnalyzing your statement "
  dots "."
  sleep "$(shuf -i 1-20 -n 1)"
  kill "$!"
  printf "\n"
  tput cnorm
  print_header
  print_indicator "$bs_level"
  print_analysis "$bs_level"
  over_line "$script $version"
  exit
}

## Execution ##

main "$@"
