#!/usr/bin/env bash
################################################################################
# Script Name  : install-conky
# Description  : Install and configure Conky
# Dependencies : network-manager, upower, wget
# Arguments    : None
# Author       : Copyright (C) 2018, Richard Romig, 26 December 2018
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Comment      : copies .conkyrc to conkyrc-hostname for archiving purposes.
# TODO (rick)  : 
# License      : GNU General Public License, version 2
###############################################################################

# Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091,SC2034

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.5.6"
readonly _updated="16 Jul 2023"
readonly template_dir="$HOME/bin/Templates"
readonly hname="${HOSTNAME:-$(hostname)}"

## Functions ##

check_dependencies() {
  local packages=( network-manager upower wget )
  check_packages "${packages[@]}"
}

cfg_desktop() {
  [[ -d "$HOME/.config/autostart" ]] || mkdir -p "$HOME/.config/autostart"
  pushd "$HOME/.config/autostart/" > /dev/null 2>&1 || die "pushd failed"

  if [[ -f Conky.desktop || -f conky.desktop ]]; then
    echo "conky.desktop aleady exits."
    [[ -f Conky.desktop ]] && mv Conky.desktop conky.desktop
  else
    cp "$template_dir/conky.desktop" .
    echo "conky.desktop configured."
  fi

  popd > /dev/null 2>&1 || die "popd failed"
}

conky_ver() {
  conky --version | head -n1 | cut -d' ' -f2
}

## Execution ##

check_dependencies

clear
echo "$_script v$_version ($_updated)"
echo "Installs conky, sets up conky.desktop and creates .conkyrc."

# Install conky if not already installed

if bunsenlabs || antix_mx; then
  leave "Conky is pre-installed. Use the Conky Manager to configure conky."
elif exists conky; then
  echo $'\n'$"Conky version $(conky_ver) is already installed."
else
  echo $'\n'$"Installing conky..."
  sudo apt update -qq
  if sudo apt install -yyq conky; then
    echo "Conky version $(conky_ver) installed."
  else
    status="$?"
    die "Conky installation failed." "$status"
  fi
fi

# Copy Conky.desktop to ~/.config/autostart if not present
cfg_desktop

# Find the number of CPU cores/threads
ncpu=$(/usr/bin/nproc --all)

# Find device names
if [[ -x /usr/bin/nmcli ]]; then
  e_name=$(/usr/bin/nmcli dev | awk '/ethernet/ {print $1}')
  w_name=$(/usr/bin/nmcli dev | awk '/wifi/ {print $1}')
else
  e_name=$(ip ad show | awk '/: en/ {print $2}' | sed 's/:$//')
  w_name=$(ip ad show | awk '/: wl/ {print $2}' | sed 's/:$//')
fi
[[ -z "$e_name" ]] && e_name="eth0"
[[ -z "$w_name" ]] && w_name="wlan0"
b_name=$(/usr/bin/upower -e | awk -F_ '/BAT/ {print $NF}')
[[ -z "$b_name" ]] && b_name="BAT0"

# Display network and battery device names and number of cores,
echo -e "Battery device name:\t$b_name"
echo -e "Ethernet device name:\t$e_name"
echo -e "Wireless device name:\t$w_name"
echo -e "CPU cores/threads:\t$ncpu"

# Configure ~/.conkyrc using template

sed -e '1d' \
    -e "s/<BAT>/$b_name/g" \
    -e "s/<EN>/$e_name/g" \
    -e "s/<WL>/$e_name/g" "$template_dir/conkyrc" > "$HOME/.conkyrc"
case "$ncpu" in
  1 ) sed -i '57,63d' "$HOME/.conkyrc" ;;
  2 ) sed -i '58,63d' "$HOME/.conkyrc" ;;
  3 ) sed -i '59,63d' "$HOME/.conkyrc" ;;
  4 ) sed -i '60,63d' "$HOME/.conkyrc" ;;
  5 ) sed -i '61,63d' "$HOME/.conkyrc" ;;
  6 ) sed -i '62,63d' "$HOME/.conkyrc" ;;
  7 ) sed -i '63d' "$HOME/.conkyrc" ;;
  * ) ;;
esac

echo $'\n'$".conkyrc created and configured."

edit_view_quit "$HOME/.conkyrc"

leave "Please reboot or log out and log in again to complete the installation."
