#!/usr/bin/env bash
################################################################################
# Script Name  : install-conky
# Description  : Install and configure Conky
# Dependencies : curl network-manager wget
# Arguments    : None
# Author       : Copyright (C) 2018, Richard Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 26 Dec 2018
# Updated      : 22 May 2024
# Comment      : copies .conkyrc to conkyrc-hostname for archiving purposes.
# TODO (rick)  :
# License      : GNU General Public License, version 2
###############################################################################

# Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="6.1.24143"
readonly _updated="21 May 2024"
readonly repository="configs/raw/branch/main/"
readonly template_d="$HOME/bin/Templates"
readonly localbin_d="$HOME/.local/bin"
readonly autostart_d="$HOME/.config/autostart"
readonly conf_d="$HOME/.config/conky"
verbose_mode="$FALSE"

## Functions ##

help() {
	errcode="${1:-2}"
	cat << END_HELP
${green}Usage:${normal} $_script [OPTION]
${orange}OPTIONS:${normal}
	-c	Install conky.conf
	-d	Install conky.desktop & start-conky.sh
	-e	Edit conky.comf
	-h	Display help
	-i	Install conky
	-r	Remove conky & configuration files
	-v	Enable verbose mode
$_script $_version (Updated $_updated)
END_HELP
  exit "$errcode"
}

bl_antix_mx() {
  if bunsenlabs || antix_mx; then
    printf "Conky is pre-installed on BunsenLabs, antiX, and MX Linux.\n"
    printf "Use the distibution's Conky Manager to configure conky.\n"
    exit
  fi
}

show_me() {
  local message="$1"
  [[ "$verbose_mode" == "$TRUE" ]] && echo "$message"
}

check_dependencies() {
  local packages=( curl network-manager wget )  # wget is used in conky.conf
  check_packages "${packages[@]}"
}

conky_ver() {
  conky --version | head -n1 | cut -d' ' -f2
}

install_conky() {
  printf "\nInstalling conky...\n"
  show_me "Updating apt cache"
  sudo apt update -qq
  show_me "Installing conky and dependencies"
  sudo apt install -yyq conky
  printf "Conky version %s installed.\n" "$(conky_ver)"
}

conky_desktop() {
  [[ -d "$autostart_d" ]] || mkdir -p "$autostart_d"
  if [[ -f "$autostart_d/Conky.desktop" || -f "$autostart_d/conky.desktop" ]]; then
    echo "conky.desktop aleady exists."
    [[ -f "$autostart_d/Conky.desktop" ]] && mv "$autostart_d/Conky.desktop" "$autostart_d/conky.desktop"
  else
    show_me "Downloading conky.desktop from the Gitea server to .config/autostart"
    curl -so "$autostart_d/conky.desktop" "$Gitea_URL/$repository/autostart/conky.desktop"
    # cp "$template_d/conky.desktop.txt" "$autostart_d/conky.desktop"
    echo "conky.desktop configured."
  fi
}

start_script() {
  [[ -d "$localbin_d" ]] || mkdir -p "$localbin_d"
  if [[ ! -f "$localbin_d/start-conky.sh" ]]; then
    show_me "Downloading start-conky.sh from the Gitea server to .local/bin"
    curl -so "$localbin_d/start-conky.sh" "$Gitea_URL/$repository/local/bin/start-conky.sh"
    printf "start-conky.sh installed.\n"
  fi
}

remove_conky() {
  printf "Removing Conky and its configuration files...\n"
  show_me "Removing conky..."
  sudo apt-get remove --purge -yy conky
  show_me "Removing cnnky configuration files..."
  [[ -d "$localbin_d" ]] && { show_me "Removing start-conky.sh";  rm -rf "$localbin_d"; }
  [[ -d "$autostart_d" ]] && { show_me "Removing conky.desktop"; rm -rf "$autostart_d"; }
  [[ -d "$conf_d" ]] && { show_me "Removing conky.conf"; rm -rf"$conf_d"; }
  [[ -d "$conf_d/backup/conky" ]] && { show_me "Removing conky.conf backup file."; rm "$conf_d.backup/conky"; }
  [[ -f "$HOME/.conkyrc" ]] && { show_me "Removing .conkyrc."; rm "$HOME/.conkyrc"; }
  [[ -d "$conf_d/backup/.conkyrc" ]] && { show_me "Removing conky.conf backup file."; rm "$conf_d.backup/.conkyrc"; }
}

eth_name() {
  e_name=$(/usr/bin/nmcli dev | awk '/ethernet/ {print $1}')
  [[ "$e_name" ]] || e_name="eth0"
  echo "$e_name"
}

wlan_name() {
  w_name=$(/usr/bin/nmcli dev | awk '/wifi/ {print $1}')
  [[ "$w_name" ]] || w_name="wlan0"
  echo "$w_name"
}

bat_name() {
  b_name=$(find /sys/class/power_supply/ -name "BAT*" | awk -F/ '/BAT/ {print $5}')
  [[ "$b_name" ]] || b_name="BAT0"
  echo "$b_name"
}

cpu_cores() {
  ncpu=$(/usr/bin/nproc --all)
  echo "$ncpu"
}

configure_conky() {
  [[ -d "$conf_d" ]] || mkdir -p "$conf_d"
  # Display network and battery device names and number of cores
  printf "%-24s%s\n" "Battery device name:" "$(bat_name)"
  printf "%-24s%s\n" "Ethernet device name:" "$(eth_name)"
  printf "%-24s%s\n" "Wireless device name:" "$(wlan_name)"
  printf "%-24s%s\n" "CPU cores/threads:" "$(cpu_cores)"

  show_me "Configuring conky.conf with device names"
  sed -e '1d' \
    -e "s/<BAT>/$b_name/g" \
    -e "s/<EN>/$e_name/g" \
    -e "s/<WL>/$e_name/g" "$template_d/conkyrc" > "$conf_d/conky.conf"

    show_me "Configuring CPU cores/threads"
    case "$ncpu" in
      1 )
        sed -i '57,63d' "$conf_d/.conky.conf"
        show_me "$ncpu core configured."
      ;;
      2 )
        sed -i '58,63d' "$conf_d/.conky.conf"
        show_me "$ncpu cores configured."
      ;;
      3 )
        sed -i '59,63d' "$conf_d/.conky.conf"
        show_me "$ncpu cores configured."
      ;;
      4 )
        sed -i '60,63d' "$conf_d/.conky.conf"
        show_me "$ncpu cores configured."
      ;;
      5 )
        sed -i '61,63d' "$conf_d/.conky.conf"
        show_me "$ncpu cores configured."
      ;;
      6 )
        sed -i '62,63d' "$conf_d/.conky.conf"
        show_me "$ncpu cores configured."
      ;;
      7 )
        sed -i '63d' "$conf_d/.conky.conf"
        show_me "$ncpu cores configured."
      ;;
      8 )
        show_me "$ncpu cores configured."
      ;;
    * )
      printf "%s More cores than template allows for. Modify template to accomodate.\n" "$red_warning"
  esac
  if [[ -f "$HOME/.conkyrc" ]]; then
    show_me "Removing .conkyrc"
    rm "$HOME/.conkyrc"
  fi
  # shellcheck disable=SC2088
  printf "~/.config/conky/conky.conf configured.\n"
}

## Execution ##

# clear
bl_antix_mx
printf "Installs conky, sets up conky.desktop and creates .conky.conf.\n"

noOpt=1
optstr=":cdehirv"
while getopts "$optstr" opt; do
	case "$opt" in
    c )
      exists conky || leave "Conky is not installed."
      configure_conky
      edit_view_quit "$conf_d/conky.conf"
    ;;
    d )
      exists conky || leave "Conky is not installed."
      conky_desktop
      start_script
    ;;
    e )
      "$EDITOR" "$conf_d/conky.conf"
    ;;
		h )
			help 0
		;;
		i )
      exists conky && leave "Conky $(conky_ver) is already installed."
      sudo_login 2
      check_dependencies
      install_conky
      configure_conky
      conky_desktop
      start_script
      edit_view_quit "$conf_d/conky.conf"
		;;
		r )
      exists conky || leave "Conky is not installed."
	    sudo_login 2
			remove_conky  # remove conky, conky.conf, conky.desktop, start-conky.sh
		;;
		v )
			verbose_mode="$TRUE"
			show_message "Verbose mode enabled."
		;;
		? )
			printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
			help 2
	esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
box "$_script v$_version"
exit
