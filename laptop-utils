#!/usr/bin/env bash
#####################################################################
# Script Name  : laptop-utils
# Description  : Installs laptop-specific utilities
# Dependencies : None
# Args         : None
# Author       : Copyright (C) 2023, Richard Romig, LudditeGeek
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 23 Mar 2023
# Updated      : 20 Sep 2024
# Comments     : Based on a script by Joe Collins at EzeeLinux.com
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2; exit 1
fi

## Global Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="6.0.24264"
readonly _updated="20 Sep 2024"
readonly lhost="${HOSTNAME:=-$(hostname)}"

## Funtions ##

intro() {
  cat << END_INTRO
Installs laptop-specific utilities:
 * Thermald - monitors and controls temperature.
 * ACPI - checks the state of ACPI devices.
 * TLP - advanced power management to maximize battery life.
 * Touchpad Indicator - utility to enable/disable the touchpad.

END_INTRO
}

help() {
  local errcode="${1:-2}"
  # intro
  cat << END_HELP
${orange}$_script${normal} $_version ($_updated)
Installs laptop-specific utlities.

${green}Usage:${normal} $_script [OPTION]

${orange}Available options:${normal}
  -h  Display help.
  -i  Install laptop utilities.
  -l  Display installed utilities.
  -s  Start TLP service

END_HELP
  intro
  exit "$errcode"
}

installed() {
  local package="$1"
  dpkg -l "$package" > /dev/null 2>&1 && return "$TRUE" || return "$FALSE"
}

install_thermald() {
  if installed thermald; then
    printf "Thermald is already installed.\n"
  elif in_repos thermald; then
    sudo apt-get install thermald -yy
    printf "Thermald installed.\n"
  else
    printf "Thermald was not installed.\n"
  fi
}

install_acpi() {
  if installed acpi; then
    printf "ACPI is already installed.\n"
  elif in_repos acpi; then
    sudo apt-get install acpi -yy
    printf "ACPI installed.\n"
  else
    printf "ACPI was not installed.\n"
  fi
}

install_touchpad_indicator() {
  if installed touchpad-indicator; then
    printf "Touchpad Indicator is already installed.\n"
  elif in_repos touchpad-indicator; then
    sudo apt-get install touchpad-indicator -yy
    printf "Touchpad Indicator installed.\n"
  else
    printf "Touchpad Indicator was not available.\n"
  fi
}

install_tlp() {
  if installed tlp && installed tlp-rdw; then
    echo "TLP is already installed."
  elif in_repos tlp; then
    sudo apt-get install tlp tlp-rdw -yy
    start_tlp_service
    printf "TLP installed.\n"
  else
    printf "TLP was not installed.\n"
  fi
}

tlp_status() {
  local status=0
  if is_systemd; then
    systemctl status tlp | grep -qw active || status=1
  elif is_sysv; then
    tlp-stat -s | grep -qw enabled || status=1
  fi
  if (( status = 1 )); then
    printf "Starting TLP service\n"
    start_tlp_service
  else
    printf "TLP service is active and running.\n"
  fi
}

start_tlp_service() {
  if is_systemd; then
    sudo_login 2
    sudo systemctl enable tlp.service
    sudo systemctl start tlp.service
    sudo systemctl mask systemd-rfkill.service
    sudo systemctl mask systemd-rfkill.socket
    printf "The tlp service is enabled and started.\n"
  elif is_sysv; then
    sudo tlp start
    printf "The tlp service is started.\n"
  else
    printf "Init system is not Systemd or SysV.\n"
    printf "Manually start the TLP service.\n"
  fi
}

util_status() {
  printf "Installed utilities:\n"
  installed thermald && printf "%12s\n" "Thermald"
  installed acpi && printf "%8s\n" "ACPI"
  installed tlp && printf "%7s\n" "TLP"
  installed tlp-rdw && printf "%11s\n" "TLP-RDW"
  installed touchpad-indicator && printf "%22s\n" "Touchpad Indicator"
}

main() {
  install_thermald
  install_acpi
  install_tlp
  install_touchpad_indicator
  util_status
}

## Execution ##

noOpt=1
optstr=":hils"
while getopts "$optstr" opt; do
  case "$opt" in
    h )
      help 0
    ;;
    i )
      is_laptop || die "$lhost is not a laptop." 1
      sudo_login 2
      intro
      main
    ;;
    l )
      is_laptop || die "$lhost is not a laptop." 1
      util_status
    ;;
    s )
      is_laptop || die "$lhost is not a laptop." 1
      sudo_login 2
      tlp_status
    ;;
    ? )
      printf "%s Invalid option -%s\n" "$red_error" "$OPTARG" >&2
      help 2
  esac
	noOpt=0
done
[[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$red_error" >&2; help 1; }
shift "$(( OPTIND - 1 ))"
leave "$_script v$_version"
