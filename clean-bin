#!/usr/bin/env bash
###############################################################################
# Script Name  : clean-bin
# Description  : cleans ~/bin of *~ backup files and synchonizes scripts and
#              : templates with the script repository.
# Dependencies : find, rm, rsync, wc
# Arguments    : none
# Author       : Copyright 2019 Richard Romig, 18 January 2019
# Email        : rick.romig@gmail.com
# Comments     :
# 11 Sep 2021  : Changed find command to use regex to find ~ files.
# 07 Oct 2022  : Changed to sync with gitea script repository.
#              : Added Templates directory.
#              : Incorporated functions for indiviual tasks.
#              : Only runs on primary computer.
# TODO (rick)  :
# License      : GNU General Public License, version 2.0
###############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

readonly _script=$(basename "$0")
readonly _version="2.2.0"
readonly _updated="07 Oct 2022"

## Functions ##

rm_tilde() {
  local bin_dir="$HOME/bin"
  # Find and remove files ending wih ~ (tilde)
  nbu=$(find ~/bin -type f -regex '\./.*~$' | wc -l)
  if  (( nbu > 0 )); then
    find "$bin_dir" -type f -regex '\./.*~$' -print -exec rm {} \;
    printf "\nRemoved %s '~' backup " "$nbu"
    (( nbu == 1 )) && printf "file" || printf "files"
    printf " in %s.\n" "$bin_dir"
  fi
}

check_host() {
  local loc_host="hp-800g2-sff"
  # Ensure script is only run from hp-800g2-ssf
  [[ "$loc_host" != "$(uname -n)" ]] && die "$_script must be run from ${loc_host}!"
}

sync_scripts() {
  local bin_dir="$HOME/bin"
  local script_repo="$HOME/gitea/scripts"
  printf "\nSynchronizing %s with %s ...\n" "$bin_dir" "$script_repo"
  rsync -av --delete --exclude '.git'  --exclude 'Templates' "$bin_dir/" "$script_repo"/
}

sync_templates() {
  local template_dir="$HOME/Templates/"
  local template_repo="$HOME/gitea/scripts/Templates"
  printf "\nSyncronizing %s with %s\n" "$template_dir" "$template_repo"
  rsync -av --delete "$template_dir/" "$template_repo"/
}

## Execution ##

printf "\U1F427 %s v%s (%s)\n" "$_script" "$_version" "$_updated"
printf "Cleans up and synchonizes scripts and templates with the repo...\n"
check_host
rm_tilde
sync_scripts
sync_templates
exit
