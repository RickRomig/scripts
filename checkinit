#!/usr/bin/env bash
##########################################################################
# Script Name  : checkinit
# Description  : Checks what init system is being used.
# Dependencies : None
# Arguments    : None
# Author       : Copyright (C) 2022, Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 07 Sep 2022
# Updated      : 06 Jul 2025
# Comments     : partially based on code by Jake@Linux <https://gitlab.com/jped>
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
# License URL  : https://github.com/RickRomig/scripts/blob/main/LICENSE
##########################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Functions ##

find_init() {
	local file data
	if is_systemd; then
		printf "SystemD"
	elif is_sysv; then
		printf "SysV"
	elif [[ -f /sbin/openrc ]]; then
		printf "OpenRC"
	else
		# will detect runit
		file='/proc/1/comm'
		if [[ -r "$file" ]]; then
			read -r data < "$file"
			printf '%s' "${data%% *}"
	  else
	 		printf '?'
		fi
  fi
}

main() {
	local script="${0##*/}"
	local version="1.6.25197"
	printf "Init System: %s\n" "$(find_init)"
	over_line "$script $version"
	exit
}

## Execution ##

main "$@"
