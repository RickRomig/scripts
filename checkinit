#!/usr/bin/env bash
##########################################################################
# Script Name  : checkinit
# Description  : Checks what init system is being used.
# Dependencies : None
# Arguments    : None
# Author       : Copyright (C) 2022, Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Crated       : 07 Sep 2022
# Updated      : 30 Apr 2024
# Comments     : partially based on code by Jake@Linux <https://gitlab.com/jped>
#              : The else in find_init() will detect runit.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
##########################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="1.4.24121"

## Functions ##

find_init() {
	if is_systemd; then
		printf "SystemD"
	elif is_sysv; then
		printf "SysV"
	elif [[ -f /sbin/openrc ]]; then
		printf "OpenRC"
	else
		file='/proc/1/comm'
		if [[ -r "$file" ]]; then
			read -r data < "$file"
			printf '%s' "${data%% *}"
	  else
	 		printf '?'
		fi
  fi
}

## Execution ##

printf "%s v%s\n" "$_script" "$_version"
printf "Init System: %s \n" "$(find_init)"
exit
